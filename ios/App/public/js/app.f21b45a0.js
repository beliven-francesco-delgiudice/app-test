(function(e){function t(t){for(var r,c,s=t[0],i=t[1],u=t[2],l=0,h=[];l<s.length;l++)c=s[l],Object.prototype.hasOwnProperty.call(o,c)&&o[c]&&h.push(o[c][0]),o[c]=0;for(r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r]);d&&d(t);while(h.length)h.shift()();return a.push.apply(a,u||[]),n()}function n(){for(var e,t=0;t<a.length;t++){for(var n=a[t],r=!0,c=1;c<n.length;c++){var i=n[c];0!==o[i]&&(r=!1)}r&&(a.splice(t--,1),e=s(s.s=n[0]))}return e}var r={},o={app:0},a=[];function c(e){return s.p+"js/"+({"polyfills-core-js":"polyfills-core-js","polyfills-dom":"polyfills-dom"}[e]||e)+"."+{"chunk-008cd3d6":"b41757d5","chunk-02c995b5":"94c321d8","chunk-09155df3":"f9029e36","chunk-09162720":"0a4b8a6f","chunk-097e0872":"924cb888","chunk-0e93a01c":"2a03864d","chunk-1dbc15a2":"d4ea55a8","chunk-1f3fa45a":"bfc8b673","chunk-21a76241":"56c5b776","chunk-25d83ca8":"77968906","chunk-2d0a3ffc":"033341ab","chunk-2d0a463b":"e0d56be5","chunk-2d0a4885":"44477eab","chunk-2d0c073f":"75c8948f","chunk-2d0c8407":"97f4bdb4","chunk-2d0d43da":"98e5d41e","chunk-2d0d5c33":"d98bbfcf","chunk-2d0d6f0e":"6d90b37a","chunk-2d0da04a":"5a12f00d","chunk-2d0e5812":"3a337311","chunk-2d0f0050":"09f1b677","chunk-2d208e4e":"f0965e8f","chunk-2d212be3":"4900f968","chunk-2d213189":"f8291c06","chunk-2d218068":"0dd720d9","chunk-2d21da73":"18c16efc","chunk-30dd9750":"5998ca9d","chunk-34f7327c":"fb05cd76","chunk-37f2300e":"b40e49a7","chunk-3ed29de3":"c39a3d9d","chunk-41c0f7a4":"1a6ecd8a","chunk-462c869e":"534524f9","chunk-504c4825":"c9a2d163","chunk-541ea42d":"4cd7b395","chunk-54bbd082":"c812a52b","chunk-59d4c87c":"81f265f9","chunk-5a8ac886":"7f4f1ff1","chunk-5ff96a24":"4d8b0386","chunk-69eb8776":"cd873c98","chunk-6d375f34":"2e1da4ac","chunk-7548ca2d":"394aba2a","chunk-79f1dac7":"f5516dfd","chunk-858cd918":"7c7d6d68","chunk-8bb7f81e":"bab595d0","chunk-a9395c36":"acb6d4db","chunk-c53d26f0":"ac72f8d0","chunk-c567cc2a":"68364b0e","chunk-d0e8aa0a":"75ac617e","chunk-d8413eac":"5276bc60","chunk-eaa2b130":"344a8632","chunk-f858ef4e":"e07e88d3","polyfills-core-js":"12be3461","polyfills-dom":"662760da","chunk-2d0b62ff":"b9c47961","chunk-2d0b33e3":"2e69defc","chunk-2d0bd1c8":"5808fd24","chunk-2d0c1ca1":"54c24b51","chunk-2d0e19fd":"776759ed","chunk-2d209619":"b117e2af","chunk-2d2376e6":"a05b70ee"}[e]+".js"}function s(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.e=function(e){var t=[],n=o[e];if(0!==n)if(n)t.push(n[2]);else{var r=new Promise((function(t,r){n=o[e]=[t,r]}));t.push(n[2]=r);var a,i=document.createElement("script");i.charset="utf-8",i.timeout=120,s.nc&&i.setAttribute("nonce",s.nc),i.src=c(e);var u=new Error;a=function(t){i.onerror=i.onload=null,clearTimeout(l);var n=o[e];if(0!==n){if(n){var r=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;u.message="Loading chunk "+e+" failed.\n("+r+": "+a+")",u.name="ChunkLoadError",u.type=r,u.request=a,n[1](u)}o[e]=void 0}};var l=setTimeout((function(){a({type:"timeout",target:i})}),12e4);i.onerror=i.onload=a,document.head.appendChild(i)}return Promise.all(t)},s.m=e,s.c=r,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(n,r,function(t){return e[t]}.bind(null,r));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="/",s.oe=function(e){throw console.error(e),e};var i=window["webpackJsonp"]=window["webpackJsonp"]||[],u=i.push.bind(i);i.push=t,i=i.slice();for(var l=0;l<i.length;l++)t(i[l]);var d=u;a.push([0,"chunk-vendors"]),n()})({0:function(e,t,n){e.exports=n("56d7")},1306:function(e,t,n){"use strict";n("9259")},"1c05":function(e,t,n){"use strict";n("eaa6")},"274e":function(e,t,n){"use strict";n("a9b5")},"3c35":function(e,t,n){"use strict";n("c64f")},4508:function(e,t,n){"use strict";n("d136")},"4c8d":function(e,t,n){},"51df":function(e,t,n){},"535e":function(e,t,n){},"56d7":function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"getHome",(function(){return An}));var o=n("5530"),a=n("1da1"),c=(n("e260"),n("e6cf"),n("cca6"),n("a79d"),n("96cf"),n("caad"),n("2532"),n("ac1f"),n("1276"),n("7a23"));function s(e,t,n,r,o,a){var s=Object(c["y"])("router-view"),i=Object(c["y"])("ion-app");return Object(c["q"])(),Object(c["e"])(i,null,{default:Object(c["D"])((function(){return[Object(c["h"])(s)]})),_:1})}var i=n("8a30"),u={name:"App",components:{IonApp:i["a"]}},l=n("d959"),d=n.n(l);const h=d()(u,[["render",s]]);var f=h,p=n("2ad9"),m=n("9f0e"),b=Object(c["G"])("data-v-01efd17a");Object(c["t"])("data-v-01efd17a");var g={id:"container"};Object(c["r"])();var v=b((function(e,t,n,r,o,a){var s=Object(c["y"])("ion-refresher-content"),i=Object(c["y"])("ion-refresher"),u=Object(c["y"])("router-view"),l=Object(c["y"])("ion-content"),d=Object(c["y"])("Tabs"),h=Object(c["y"])("ion-page");return Object(c["q"])(),Object(c["e"])(h,{"overflow-scroll":"true",style:a.isApp?"":"max-width:400px; margin:auto;"},{default:b((function(){return[Object(c["h"])(l,{id:"content",fullscreen:!0,forceOverscroll:!0,"scroll-x":!0,"overflow-scroll":!0,style:a.isApp?"":"-webkit-overflow-scrolling: touch;  overflow-y: scroll !important;"},{default:b((function(){return[a.refreshAction?(Object(c["q"])(),Object(c["e"])(i,{key:0,slot:"fixed",onIonRefresh:t[1]||(t[1]=function(e){return a.onRefresh(a.refreshAction,e)})},{default:b((function(){return[Object(c["h"])(s)]})),_:1})):Object(c["f"])("",!0),Object(c["h"])("div",g,[Object(c["h"])(u)])]})),_:1},8,["style"]),Object(c["h"])(d)]})),_:1},8,["style"])})),j=(n("159b"),n("b0c0"),Object(c["G"])("data-v-d25547cc"));Object(c["t"])("data-v-d25547cc");var O={class:"w-full fixed bottom-0 left-0 bg-transparent",style:{height:"72px"}},w={class:"h-full h-full flex tabs-bar bg-black px-8"};Object(c["r"])();var y=j((function(e,t,n,r,o,a){var s=Object(c["y"])("ion-img");return Object(c["q"])(),Object(c["e"])("div",O,[Object(c["h"])("div",w,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.routingTabs,(function(t,n){return Object(c["q"])(),Object(c["e"])("div",{key:n,tab:t.name,class:[t.disabled?"pointer-events-none":"cursor-pointer"," flex flex-grow justify-center items-center"],onClick:function(n){return e.$router.push(t.href)}},[Object(c["h"])(s,{src:t.icon,class:t.active?"":t.disabled?"opacity-25":"opacity-50"},null,8,["src","class"])],10,["tab","onClick"])})),128))])])})),x=(n("d81d"),{components:{IonImg:i["d"]},data:function(){return{tabs:[{name:"home",href:"/home",icon:"/assets/button-icons/home.svg"},{name:"products",href:"/products",icon:"/assets/button-icons/products.svg"},{name:"documents",href:"/documents",icon:"/assets/button-icons/documents.svg"},{name:"search",href:"/search",icon:"/assets/button-icons/search.svg"},{name:"menu",href:"/menu",icon:"/assets/button-icons/menu.svg"}]}},props:{home:Boolean},computed:{routingTabs:function(){var e=this.$route.path,t=this.getActivePath(e);return this.tabs.map((function(e){return Object(o["a"])(Object(o["a"])({},e),{},{active:e.href===t})}))}},methods:{getActivePath:function(e){for(var t=0;t<this.tabs.length;t++){var n=this.tabs[t].href;if(e.includes(n))return n}}}});n("1c05");const k=d()(x,[["render",y],["__scopeId","data-v-d25547cc"]]);var S=k,$=n("1547"),A={methods:{openUpdates:function(){this.$router.push("/updates")},backButton:function(){this.$router.push("/home")},onRefresh:function(e,t){var n=this;Array.isArray(e)?e.forEach((function(e){n.$store.dispatch(e,t)})):this.$store.dispatch(e,t),t.target.complete()}},computed:{isApp:function(){return this.checkIsApp($["a"].getPlatform())},showBack:function(){return this.$route.meta.showBack},refreshAction:function(){return this.$route.meta.refreshAction||!1}},created:function(){this.$store.dispatch("getHome")},components:{IonContent:i["c"],IonPage:i["g"],IonRefresher:i["h"],IonRefresherContent:i["i"],Tabs:S}};n("c5a9");const R=d()(A,[["render",v],["__scopeId","data-v-01efd17a"]]);var C=R,_=Object(c["G"])("data-v-9c3cc1fa");Object(c["t"])("data-v-9c3cc1fa");var I={class:"min-h-screen gradient-background relative max-h-screen overflow-y-auto pb-20"},D={class:"w-full relative"},T={key:0,class:"absolute width-8 height-8 bg-red rounded-full top-0 right-0 pointer-events-none",style:{"margin-top":"4px","margin-right":"4px"}},q={class:"absolute top-0 z-0 w-full h-full"},P={class:"text-black font-helvetica-bold text-20 pointer-events-none"},M=Object(c["h"])("br",null,null,-1),N=Object(c["g"])("Welcome Back "),E={class:"w-full relative pt-4 overflow-y-visible"},L={class:"relative mr-2 width-64 overflow-y-visible"},U={class:"font-helvetica-medium text-black text-16"},F=Object(c["h"])("div",null," ",-1),B=Object(c["h"])("div",null," ",-1),z=Object(c["h"])("div",null," ",-1);Object(c["r"])();var G=_((function(e,t,n,r,o,a){var s=Object(c["y"])("ion-img"),i=Object(c["y"])("shadow-button"),u=Object(c["y"])("Title"),l=Object(c["y"])("searchbar"),d=Object(c["y"])("grey-container"),h=Object(c["y"])("carousel"),f=Object(c["y"])("home-documents"),p=Object(c["y"])("home-titled-container"),m=Object(c["y"])("home-news"),b=Object(c["y"])("home-congress");return Object(c["q"])(),Object(c["e"])("div",I,[Object(c["h"])("div",D,[Object(c["h"])("div",{class:"bg-transparent absolute top-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;":"height:90px;"},[Object(c["h"])(i,{square:"",styles:"position:relative;",bgClass:"bg-white ml-auto my-auto",onOnClick:a.openNotifications},{default:_((function(){return[Object(c["h"])(s,{src:"/assets/menu/notifications.svg",className:"pointer-events-none"}),e.$store.getters.areNotificationsNotRead&&e.$store.getters.areNotificationsNotRead>0?(Object(c["q"])(),Object(c["e"])("div",T)):Object(c["f"])("",!0)]})),_:1},8,["onOnClick"])],4),Object(c["h"])(s,{src:"/assets/hero.png",class:"w-full z-0 pointer-events-none"}),Object(c["h"])("div",q,[Object(c["h"])(u,{titleClass:"relative pb-4 text-black font-helvetica-bold text-28 block px-8 pt-20 z-10"},{default:_((function(){return[Object(c["h"])("span",P,[Object(c["g"])("Hi "+Object(c["A"])(e.$store.getters.userData.first_name)+", ",1),M]),N]})),_:1}),Object(c["h"])(l,{classes:"mx-8 mt-4",onSubmit:a.routeToSearch},null,8,["onSubmit"])])]),Object(c["h"])("div",E,[Object(c["h"])(h,{height:"h-24",id:"products-carousel"},{default:_((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(e.$store.getters.homeProducts,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"w-auto-important flex",key:t,onClick:function(t){return a.routeToSegment(e)}},[Object(c["h"])(d,{classes:[0===t?"ml-8 ":""," p-6 mr-4 overflow-y-visible mt-auto pointer-events-none"]},{default:_((function(){return[Object(c["h"])("div",L,[Object(c["h"])(s,{src:e.preview,class:"absolute bottom-0 blend-mode-darken -mb-2"},null,8,["src"])]),Object(c["h"])("span",U,Object(c["A"])(e.name),1)]})),_:2},1032,["classes"])],8,["onClick"])})),128))]})),_:1})]),Object(c["h"])(p,{label:"Documents",path:"/documents"},{default:_((function(){return[Object(c["h"])(h,{id:"documents-carousel",classes:"py-4 -my-4"},{default:_((function(){return[e.$store.getters.showUS?(Object(c["q"])(),Object(c["e"])(f,{key:0,type:"us",title:"US",titleClass:"bg-red text-white px-2 mb-2 mr-auto rounded-6",classes:"ml-8",docs:e.$store.getters.homeDocuments.us},null,8,["docs"])):Object(c["f"])("",!0),Object(c["h"])(f,{type:"my",title:"My Docs",docs:e.$store.getters.homeDocuments.my,classes:e.$store.getters.showUS?"":"ml-8"},null,8,["docs","classes"]),Object(c["h"])(f,{type:"shared",title:"Shared with me",docs:e.$store.getters.homeDocuments.shared},null,8,["docs"]),F]})),_:1})]})),_:1}),e.$store.getters.homeNews&&e.$store.getters.homeNews.length?(Object(c["q"])(),Object(c["e"])(p,{key:0,label:"News",path:"/news",classes:"overflow-y-visible"},{default:_((function(){return[Object(c["h"])(h,{id:"news-carousel"},{default:_((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(e.$store.getters.homeNews,(function(e,t){return Object(c["q"])(),Object(c["e"])(m,{key:t,index:t,news:e},null,8,["index","news"])})),128)),B]})),_:1})]})),_:1})):Object(c["f"])("",!0),e.$store.getters.homeCongresses&&e.$store.getters.homeCongresses.length?(Object(c["q"])(),Object(c["e"])(p,{key:1,label:"Congresses and Events",path:"/congresses"},{default:_((function(){return[Object(c["h"])(h,{id:"congresses-carousel",classes:"py-4 -mt-4"},{default:_((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(e.$store.getters.homeCongresses,(function(e,t){return Object(c["q"])(),Object(c["e"])(b,{key:t,index:t,congress:e},null,8,["index","congress"])})),128)),z]})),_:1})]})),_:1})):Object(c["f"])("",!0),Object(c["x"])(e.$slots,"default",{},void 0,!0)])}));function H(e,t,n,r,o,a){return Object(c["q"])(),Object(c["e"])("span",{class:n.titleClass},[Object(c["x"])(e.$slots,"default")],2)}var V={props:{label:String,titleClass:[String,Array]},components:{}};const W=d()(V,[["render",H]]);var J=W;n("841c");function K(e,t,n,r,o,a){var s=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-input");return Object(c["q"])(),Object(c["e"])("form",{onSubmit:t[3]||(t[3]=Object(c["F"])((function(){return a.submitSearch&&a.submitSearch.apply(a,arguments)}),["prevent"])),class:"bg-white small-shadow rounded-8 flex items-center z-10 relative px-2 ".concat(n.classes||"")},[Object(c["h"])(s,{src:"/assets/button-icons/search-black.svg",class:"width-24 height-24"}),Object(c["h"])(i,{required:"",class:"mx-2",placeholder:"Search",modelValue:o.search,"onUpdate:modelValue":t[1]||(t[1]=function(e){return o.search=e}),onKeydown:Object(c["E"])(Object(c["F"])(a.submitSearch,["prevent"]),["enter"])},null,8,["modelValue","onKeydown"]),o.search&&o.search.length?(Object(c["q"])(),Object(c["e"])("div",{key:0,onClick:t[2]||(t[2]=function(){return a.cancelValue&&a.cancelValue.apply(a,arguments)}),class:"flex"},[Object(c["h"])(s,{src:"/assets/button-icons/close.svg",class:"my-auto"})])):Object(c["f"])("",!0)],34)}var Y={components:{IonImg:i["d"],IonInput:i["e"]},props:{classes:[String,Array]},data:function(){return{search:""}},created:function(){this.$route.query.string&&this.$route.query.string.length&&(this.search=this.$route.query.string,this.$emit("submit",this.search))},methods:{cancelValue:function(){this.search="",this.$emit("cancel")},submitSearch:function(){this.search&&this.$emit("submit",this.search)}}};const X=d()(Y,[["render",K]]);var Q=X,Z={class:"relative cursor-grab"};function ee(e,t,n,r,o,a){var s=Object(c["y"])("ion-scroll");return Object(c["q"])(),Object(c["e"])("div",Z,[Object(c["h"])(s,{"overflow-scroll":"false",direction:"x",id:a.computedID,class:[n.height||"",n.classes||"","flex w-full max-w-full overflow-x-auto overflow-y-visible carousel"]},{default:Object(c["D"])((function(){return[Object(c["x"])(e.$slots,"default")]})),_:3},8,["id","class"])])}n("a9e3");var te={components:{IonScroll:i["IonScroll"]},props:{height:[Number,String],classes:[String,Array],id:String},methods:{scrollLeft:function(){}},computed:{computedID:function(){return this.id||"carousel-"+Math.floor(5*Math.random())}},mounted:function(){var e=null;e=this.computedID?document.querySelector("#"+this.computedID):document.querySelector(".carousel");var t,n,r=!1;e&&(e.addEventListener("mousedown",(function(o){r=!0,e.classList.add("active"),t=o.pageX-e.offsetLeft,n=e.scrollLeft})),e.addEventListener("mouseleave",(function(){r=!1,e.classList.remove("active")})),e.addEventListener("mouseup",(function(){r=!1,e.classList.remove("active")})),e.addEventListener("mousemove",(function(o){if(r){o.preventDefault();var a=o.pageX-e.offsetLeft,c=3*(a-t);e.scrollLeft=n-c}})))}};const ne=d()(te,[["render",ee]]);var re=ne;function oe(e,t,n,r,o,a){return Object(c["q"])(),Object(c["e"])("div",{class:a.divClass},[Object(c["x"])(e.$slots,"default")],2)}n("99af");var ae={props:{squareSize:String,rounded:String,classes:[String,Array],vertical:Boolean},computed:{divClass:function(){return"rounded-".concat(this.rounded||"8"," bg-light-grey flex ").concat(this.vertical?"flex-col justify-between items-center":"justify-between items-baseline"," ").concat(this.squareSize?"width-"+this.squareSize+" height-"+this.squareSize:""," ").concat(this.classes||"")}}};const ce=d()(ae,[["render",oe]]);var se=ce;function ie(e,t,n,r,o,a){var s=Object(c["y"])("ion-img");return Object(c["q"])(),Object(c["e"])("div",{class:a.divClass},[Object(c["h"])("div",{onClick:t[1]||(t[1]=function(){return a.routeToPath&&a.routeToPath.apply(a,arguments)}),class:[n.headClass,"px-8 flex justify-between items-center cursor-pointer pb-4"]},[Object(c["h"])("span",{class:[n.titleClass,"font-helvetica-bold text-black text-20"]},Object(c["A"])(n.label),3),Object(c["h"])(s,{src:"/assets/button-icons/forward.svg",className:"width-12 height-12 pointer-events-none"})],2),Object(c["x"])(e.$slots,"default")],2)}var ue={components:{IonImg:i["d"]},props:{path:String,label:String,pt:String,classes:[String,Array],titleClass:[String,Array],headClass:[String,Array]},computed:{divClass:function(){var e="pt-".concat(this.pt||12," ");return e+=this.classes||"",e}},methods:{routeToPath:function(){this.$router.push(this.path)}}};const le=d()(ue,[["render",ie]]);var de=le,he=Object(c["G"])("data-v-15c33845");Object(c["t"])("data-v-15c33845");var fe={class:"news-image w-full overflow-hidden rounded-12 mb-4 container-shadow pointer-events-none"},pe={class:"font-helvetica-medium text-black text-16"};Object(c["r"])();var me=he((function(e,t,n,r,o,a){var s=Object(c["y"])("ion-img");return Object(c["q"])(),Object(c["e"])("div",{onClick:t[1]||(t[1]=function(){return a.routeToNews&&a.routeToNews.apply(a,arguments)}),class:[0===n.index?"ml-8 ":"","flex flex-col home-container mr-4"]},[Object(c["h"])("div",fe,[Object(c["h"])(s,{src:n.news.preview,class:"w-full object-cover"},null,8,["src"])]),Object(c["h"])("span",pe,Object(c["A"])(n.news.title),1)],2)})),be={components:{IonImg:i["d"]},props:{news:Object,index:Number},methods:{routeToNews:function(){this.$router.push("/news/"+this.news.id)}}};n("9923");const ge=d()(be,[["render",me],["__scopeId","data-v-15c33845"]]);var ve=ge,je=Object(c["G"])("data-v-2fd6c3b6");Object(c["t"])("data-v-2fd6c3b6");var Oe={class:"congress w-full overflow-hidden rounded-12 flex flex-col justify-between p-6 bg-white elevated-shadow"},we={class:"w-full text-black font-helvetica-medium text-16 mb-1 spacing-5 line-28"},ye={class:"w-full text-grey font-helvetica text-14 mb-0 mb-4 spacing-44 line-24",style:{overflow:"hidden","text-overflow":"ellipsis",display:"-webkit-box","-webkit-line-clamp":"2","line-clamp":"2","-webkit-box-orient":"vertical"}},xe={class:"flex flex-row mr-auto"},ke={class:"p-1 bg-light-red rounded-6 font-helvetica-medium text-12 text-red mr-2"},Se={key:0,class:"p-1 px-2 bg-red rounded-6 font-helvetica-medium text-12 text-white"},$e={key:1,class:"p-1 px-2 bg-black rounded-6 font-helvetica-medium text-12 text-white"};Object(c["r"])();var Ae=je((function(e,t,n,r,o,a){return Object(c["q"])(),Object(c["e"])("div",{onClick:t[1]||(t[1]=function(){return a.routeToCongress&&a.routeToCongress.apply(a,arguments)}),class:[0===n.index?"ml-8 ":"","home-big-container flex flex-col mr-4 -mt-4 pt-4 pb-4"]},[Object(c["h"])("div",Oe,[Object(c["h"])("span",we,Object(c["A"])(n.congress.name),1),Object(c["h"])("p",ye,Object(c["A"])(n.congress.subtitle),1),Object(c["h"])("div",xe,[Object(c["h"])("div",ke,Object(c["A"])(n.congress.dates),1),"event"===n.congress.type?(Object(c["q"])(),Object(c["e"])("div",Se," Event ")):(Object(c["q"])(),Object(c["e"])("div",$e," Congress "))])])],2)})),Re={props:{congress:Object,index:Number},methods:{routeToCongress:function(){this.$router.push("/congresses/"+this.congress.id)}}};n("b7fd");const Ce=d()(Re,[["render",Ae],["__scopeId","data-v-2fd6c3b6"]]);var _e=Ce,Ie=Object(c["G"])("data-v-7532fd24");Object(c["t"])("data-v-7532fd24");var De={class:"bg-white w-full overflow-hidden rounded-12 flex flex-col justify-between elevated-shadow p-6"};Object(c["r"])();var Te=Ie((function(e,t,n,r,o,a){var s=Object(c["y"])("document-list-item");return Object(c["q"])(),Object(c["e"])("div",{class:[n.classes,"home-big-container flex flex-col mr-4 -mt-4 pt-4 pb-4"]},[Object(c["h"])("div",De,[Object(c["h"])("span",{class:[n.titleClass||"text-dark-grey mb-4","py-1 font-helvetica-medium text-16"]},Object(c["A"])(n.title),3),(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.docs,(function(e,t){return Object(c["q"])(),Object(c["e"])(s,{small:"",key:t,type:n.type,document:e,actions:e.actions,classes:t>0?"mt-4":""},null,8,["type","document","actions","classes"])})),128))])],2)})),qe=(n("c96a"),{class:"flex flex-col justify-between items-start pointer-events-none"}),Pe={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},Me={class:"font-helvetica text-14 text-grey spacing-44 line-24"},Ne={key:0,class:"font-helvetica text-12 text-grey spacing-44 line-14"};function Ee(e,t,n,r,o,a){var s=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),u=Object(c["y"])("rename-modal"),l=Object(c["y"])("delete-modal"),d=Object(c["y"])("int-share-modal"),h=Object(c["y"])("folders-tree-modal");return Object(c["q"])(),Object(c["e"])(c["a"],null,[Object(c["h"])("div",{class:[a.divClass,"w-full flex justify-between items-center py-2 rounded-8"]},[Object(c["h"])("div",{onClick:t[1]||(t[1]=function(){return a.documentAction&&a.documentAction.apply(a,arguments)}),class:"flex justify-start items-center flex-grow"},[Object(c["h"])(i,{rounded:"8",squareSize:"44",bgClass:a.imageBackround,classes:[n.small?"mr-2 ":"mr-4 "," pointer-events-none flex"]},{default:Object(c["D"])((function(){return[Object(c["h"])(s,{src:a.image,class:"m-auto"},null,8,["src"])]})),_:1},8,["bgClass","classes"]),Object(c["h"])("div",qe,[Object(c["h"])("span",Pe,Object(c["A"])(a.updatedDocument.label||a.updatedDocument.name||a.updatedDocument.title),1),Object(c["h"])("span",Me,Object(c["A"])("shared"===n.type?a.updatedDocument.subtitle:a.updatedDocument.size||a.updatedDocument.subtitle)+" "+Object(c["A"])(a.updatedDocument.languages_in_file?" - "+a.updatedDocument.languages_in_file:""),1),a.updatedDocument.code_points?(Object(c["q"])(),Object(c["e"])("span",Ne,Object(c["A"])(a.updatedDocument.code_points),1)):Object(c["f"])("",!0)])]),a.documentActions&&a.documentActions.length?(Object(c["q"])(),Object(c["e"])("div",{key:0,onClick:t[2]||(t[2]=function(){return a.openDocumentMenu&&a.openDocumentMenu.apply(a,arguments)}),class:"height-44 w-44 flex pl-4 cursor-pointer"},[Object(c["h"])(s,{src:"/assets/button-icons/threedots.svg",class:"width-4 height-18 my-auto ml-auto"})])):Object(c["f"])("",!0)],2),o.isRenameModalOpen?(Object(c["q"])(),Object(c["e"])(u,{key:0,doc:n.document,onOnClose:t[3]||(t[3]=function(e){return a.toggleModal("rename")})},null,8,["doc"])):Object(c["f"])("",!0),o.isDeleteModalOpen?(Object(c["q"])(),Object(c["e"])(l,{key:1,doc:n.document,onOnClose:t[4]||(t[4]=function(e){return a.toggleModal("delete")})},null,8,["doc"])):Object(c["f"])("",!0),o.isIntShareModalOpen?(Object(c["q"])(),Object(c["e"])(d,{key:2,isStorage:o.isStorageShare,doc:n.document,onOnClose:a.closeInternalShare},null,8,["isStorage","doc","onOnClose"])):Object(c["f"])("",!0),Object(c["h"])(h,{open:o.isMoveModalOpen,doc:n.document,onOnClose:t[5]||(t[5]=function(e){return a.toggleModal("move")})},null,8,["open","doc"])],64)}n("9911");var Le=n("ac9e"),Ue=Object(c["G"])("data-v-7cfe70a6");Object(c["t"])("data-v-7cfe70a6");var Fe={class:"fixed top-0 left-0 w-full h-full flex justofy-center items-center"},Be=Object(c["h"])("div",{class:"absolute top-0 left-0 bg-black opacity-50 w-full h-full pointer-events-none",style:{"z-index":"10"}},null,-1),ze=Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-22 line-30 text-black mb-1 block"},"Rename folder",-1),Ge={class:"mt-2 w-full flex justify-end items-center"},He=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16 spacing-5 line-24 m-auto normal-case"},"Cancel",-1),Ve=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case"},"Save",-1);Object(c["r"])();var We=Ue((function(e,t,n,r,o,a){var s=Object(c["y"])("ion-input"),i=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])("div",Fe,[Be,Object(c["h"])("form",{class:"relative z-10 bg-white rounded-8 p-6 mx-auto ",style:{"min-width":"300px","max-width":"300px"},onSubmit:t[3]||(t[3]=function(){return a.saveName&&a.saveName.apply(a,arguments)})},[ze,Object(c["h"])(s,{type:"text",placeholder:"New name",modelValue:o.name,"onUpdate:modelValue":t[1]||(t[1]=function(e){return o.name=e}),class:"font-helvetica text-16 spacing-5 line-28 text-black my-2 pb-2 border-grey border-b",required:""},null,8,["modelValue"]),Object(c["h"])("div",Ge,[Object(c["h"])("div",{class:"bg-white\n            rounded-12 flex justify-center items-center height-56 w-auto px-2 ml-auto normal-case mr-4 shadow-none\n          ",onClick:t[2]||(t[2]=function(){return a.cancel&&a.cancel.apply(a,arguments)})},[He]),Object(c["h"])(i,{type:"submit",class:"rounded-12 flex justify-center items-center height-56 w-auto normal-case",style:{"--padding-start":"0.5rem","--pading-right":"0.5rem"}},{default:Ue((function(){return[Ve]})),_:1})])],32)])})),Je=n("eba1"),Ke=n("a43b"),Ye={components:{IonButton:i["b"],IonInput:i["e"]},props:{doc:Object},data:function(){return{name:this.doc.title}},methods:{cancel:function(){this.$emit("onClose")},saveName:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(e.preventDefault(),!(t.name&&t.name.length&&t.doc.id)){n.next=9;break}return n.next=4,t.$http({method:"POST",url:Ke.folders.create+"/"+t.doc.id,data:{name:t.name},loader:!0});case 4:r=n.sent,console.log(r),t.$router.go(),n.next=11;break;case 9:console.error("No folder in route"),t.$toast({message:Je.errors.folderDetail,color:"danger"});case 11:t.$emit("onClose");case 12:case"end":return n.stop()}}),n)})))()}},created:function(){this.name=this.doc.title}};n("cffe");const Xe=d()(Ye,[["render",We],["__scopeId","data-v-7cfe70a6"]]);var Qe=Xe,Ze=Object(c["G"])("data-v-8f89d138");Object(c["t"])("data-v-8f89d138");var et={class:"fixed top-0 left-0 w-full h-full flex justofy-center items-center"},tt=Object(c["h"])("div",{class:"absolute top-0 left-0 bg-black opacity-50 w-full h-full pointer-events-none",style:{"z-index":"10"}},null,-1),nt=Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-22 line-30 text-black mb-1 block"},"Are you sure?",-1),rt=Object(c["h"])("p",{class:"w-full font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mt-2"}," By pressing confirm you will delete ",-1),ot={class:"w-full font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mb-2"},at={class:"mt-2 w-full flex justify-end items-center"},ct=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16 spacing-5 line-24 m-auto normal-case"},"Cancel",-1),st=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case bg-red"},"Confirm",-1);Object(c["r"])();var it=Ze((function(e,t,n,r,o,a){var s=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])("div",et,[tt,Object(c["h"])("form",{class:"relative z-10 bg-white rounded-8 p-6 mx-auto flex flex-col",style:{"min-width":"300px","max-width":"300px"},onSubmit:t[2]||(t[2]=function(){return a.deleteDoc&&a.deleteDoc.apply(a,arguments)})},[nt,rt,Object(c["h"])("p",ot," the "+Object(c["A"])(a.type)+' "'+Object(c["A"])(a.name)+'" ',1),Object(c["h"])("div",at,[Object(c["h"])("div",{class:"bg-white\n            rounded-12 flex justify-center items-center height-56 w-auto px-2 ml-auto normal-case mr-4 shadow-none\n          ",onClick:t[1]||(t[1]=function(){return a.cancel&&a.cancel.apply(a,arguments)})},[ct]),Object(c["h"])(s,{color:"secondary",type:"submit",class:"rounded-12 flex justify-center items-center height-56 w-auto px-2 normal-case"},{default:Ze((function(){return[st]})),_:1})])],32)])})),ut={components:{IonButton:i["b"]},props:{doc:Object},computed:{name:function(){return this.doc.title},type:function(){return this.doc.type}},methods:{cancel:function(){this.$emit("onClose")},deleteDoc:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(e.preventDefault(),!(t.name&&t.name.length&&t.doc.id)){n.next=23;break}if(r="",n.prev=3,"folder"!==t.doc.type){n.next=10;break}return n.next=7,t.$http({method:"POST",url:Ke.folders.create+"/"+t.doc.id+"/delete",loader:!0});case 7:r=n.sent,n.next=13;break;case 10:return n.next=12,t.$http({method:"POST",url:Ke.documents.remove_from_my,loader:!0,data:{id:t.doc.id}});case 12:r=n.sent;case 13:n.next=19;break;case 15:n.prev=15,n.t0=n["catch"](3),console.error(n.t0),n.t0&&n.t0.response&&n.t0.reponse.data?t.$toast({message:n.t0,color:"danger"}):t.$toast({message:Je.errors.folderDetail,color:"danger"});case 19:console.log(r),t.$router.go(),n.next=25;break;case 23:console.error("No folder in route"),t.$toast({message:Je.errors.folderDetail,color:"danger"});case 25:t.$emit("onClose");case 26:case"end":return n.stop()}}),n,null,[[3,15]])})))()}}};n("3c35");const lt=d()(ut,[["render",it],["__scopeId","data-v-8f89d138"]]);var dt=lt,ht=Object(c["G"])("data-v-522c87d4");Object(c["t"])("data-v-522c87d4");var ft={class:"fixed top-0 left-0 w-full h-full flex justify-center items-center z-10"},pt=Object(c["h"])("div",{class:"absolute top-0 left-0 bg-black opacity-50 w-full h-full pointer-events-none",style:{"z-index":"10"}},null,-1),mt={class:"font-helvetica-bold text-20 spacing-22 line-30 text-black mb-1 block"},bt=Object(c["h"])("span",{class:"font-helvetica text-12 spacing-38 line-24 text-grey"}," Write the full email or search and select one from the list below. Clicking again a selected user will unselect him. ",-1),gt={key:0,class:"flex flex-col"},vt=Object(c["h"])("span",{class:"font-helvetica text-12 spacing-38 line-24 text-grey"}," Select a user: ",-1),jt={class:"flex flex-col",style:{"max-height":"200px","overflow-y":"auto"}},Ot={class:"mt-2 w-full flex justify-end items-center"},wt=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16 spacing-5 line-24 m-auto normal-case "},"Cancel",-1),yt=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case"},"Share",-1);Object(c["r"])();var xt=ht((function(e,t,n,r,o,a){var s=Object(c["y"])("ion-input"),i=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])("div",ft,[pt,Object(c["h"])("form",{class:"relative z-10 bg-white rounded-8 p-6 mx-auto dialog-width",onSubmit:t[3]||(t[3]=function(){return a.saveName&&a.saveName.apply(a,arguments)})},[Object(c["h"])("span",mt,"Share "+Object(c["A"])(n.doc.type)+" with",1),bt,Object(c["h"])(s,{required:"",type:"email",placeholder:"Search or add email",class:"input-filled font-helvetica text-16 spacing-5 line-28 text-black my-2",modelValue:o.email,"onUpdate:modelValue":t[1]||(t[1]=function(e){return o.email=e})},null,8,["modelValue"]),a.updatedList&&a.updatedList.length?(Object(c["q"])(),Object(c["e"])("div",gt,[vt,Object(c["h"])("div",jt,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedList,(function(e){return Object(c["q"])(),Object(c["e"])("div",{key:e,class:["flex flex-row p-2 font-helvetica text-14 spacing-44 line-24 rounded-6 w-full",o.selected===e?"bg-black text-white":""],style:{"border-bottom":"1px solid #ededed"},onClick:function(t){return a.selectUser(e)}},Object(c["A"])(e),11,["onClick"])})),128))])])):Object(c["f"])("",!0),Object(c["h"])("div",Ot,[Object(c["h"])("div",{class:"bg-white\n            rounded-12 flex justify-center items-center height-56 w-auto px-2 ml-auto normal-case mr-4 shadow-none\n          ",onClick:t[2]||(t[2]=function(){return a.cancel&&a.cancel.apply(a,arguments)})},[wt]),Object(c["h"])(i,{type:"submit",class:"rounded-12 flex justify-center items-center height-56 w-auto px-2 normal-case"},{default:ht((function(){return[yt]})),_:1})])],32)])})),kt=(n("a434"),{components:{IonButton:i["b"],IonInput:i["e"]},props:{doc:Object,isStorage:Boolean},computed:{recipient:function(){return this.selected&&this.selected.length?this.selected:this.email},updatedList:function(){if(this.selected&&this.selected.length){var e=this.list.map((function(e){return e})),t=this.list.indexOf(this.selected);return t>-1&&e.splice(t,1),e.unshift(this.selected),e}return this.list}},data:function(){return{email:"",selected:"",list:[]}},methods:{cancel:function(){this.$emit("onClose")},getList:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:Ke.users.shareList,params:{search:e.email}});case 3:n=t.sent,n&&n.length&&(e.list=n),t.next=11;break;case 7:t.prev=7,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:Je.errors.shareList,color:"danger"});case 11:case"end":return t.stop()}}),t,null,[[0,7]])})))()},saveName:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r,o;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(t.email=t.selected,e.preventDefault(),!(t.recipient&&t.recipient.length&&t.doc.id)){n.next=18;break}return r={email:t.recipient,file:t.doc.id},o=Ke.documents.share,"folder"===t.doc.type&&(o=Ke.folders.share,delete r.file,r.folder=t.doc.id),t.isStorage&&(o=Ke.documents.storage_share),n.prev=7,n.next=10,t.$http({method:"POST",url:o,data:r,loader:!0});case 10:t.$toast({message:Je.success.shared+" "+t.recipient,color:"dark"}),n.next=16;break;case 13:n.prev=13,n.t0=n["catch"](7),n.t0&&n.t0.response&&404===n.t0.response.status?t.$toast({message:Je.errors.notInternal,color:"danger",duration:6e3}):n.t0&&n.t0.response&&n.t0.response.data&&t.$toast({message:n.t0.response.data,color:"danger"});case 16:n.next=20;break;case 18:console.error("No folder in route"),t.$toast({message:Je.errors.folderDetail,color:"danger"});case 20:t.$emit("onClose");case 21:case"end":return n.stop()}}),n,null,[[7,13]])})))()},selectUser:function(e){this.selected!==e?(this.selected=e,this.email=e):(this.selected="",this.email===e&&(this.email=""))}},watch:{email:function(e){e&&e.length>3&&this.getList()}}});n("6da2");const St=d()(kt,[["render",xt],["__scopeId","data-v-522c87d4"]]);var $t=St;function At(e,t,n,r,o,a){return Object(c["q"])(),Object(c["e"])("div",{class:a.divClass,style:n.styles||""},[Object(c["x"])(e.$slots,"default")],6)}var Rt={props:{bgClass:String,squareSize:[String,Number],rounded:String,classes:[String,Array],styles:[String,Array]},computed:{divClass:function(){var e=this.classes;return"rounded-".concat(this.rounded||"8"," ").concat(this.bgClass||"bg-white"," ").concat(this.squareSize?"width-"+this.squareSize+" height-"+this.squareSize:"")+" flex justify-center items-center overflow-hidden "+e}}};const Ct=d()(Rt,[["render",At]]);var _t=Ct,It=Object(c["G"])("data-v-37f92c80");Object(c["t"])("data-v-37f92c80");var Dt={class:"w-full h-full relative pt-20 gradient-background"},Tt={class:"text-grey font-helvetica text-12 inline ml-auto my-auto"};Object(c["r"])();var qt=It((function(e,t,n,r,o,a){var s=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),u=Object(c["y"])("tree-component"),l=Object(c["y"])("ion-modal");return Object(c["q"])(),Object(c["e"])(l,{animated:"",showBackdrop:"","css-class":"custom-modal","is-open":o.isOpened,onDidDismiss:t[1]||(t[1]=function(t){return e.$emit("onClose")})},{default:It((function(){return[Object(c["h"])("div",Dt,[Object(c["h"])("div",{class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;min-height:70px;":"height:90px;min-height:90px;"},[Object(c["h"])(i,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.emitClose},{default:It((function(){return[Object(c["h"])(s,{src:"/assets/button-icons/close.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"]),Object(c["h"])("span",Tt,'You are moving "'+Object(c["A"])(a.computedName)+'"',1)],4),Object(c["h"])(u,{source:n.doc},null,8,["source"])])]})),_:1},8,["is-open"])})),Pt=(n("fb6a"),{class:"flex flex-col px-8 h-full"}),Mt={class:"h-full flex flex-col overflow-y-scroll"},Nt={class:"w-full px-8 pb-4 pt-2 border-t border-grey"};function Et(e,t,n,r,o,a){var s=Object(c["y"])("Title"),i=Object(c["y"])("tree-folder-component"),u=Object(c["y"])("big-button");return Object(c["q"])(),Object(c["e"])("form",{class:"flex h-full flex-col justify-between",onSubmit:t[2]||(t[2]=function(){return a.onSubmit&&a.onSubmit.apply(a,arguments)})},[Object(c["h"])("div",Pt,[Object(c["h"])(s,{titleClass:"pb-4 text-black font-helvetica-bold text-28 block"},{default:Object(c["D"])((function(){return[Object(c["g"])(" Choose destination: "+Object(c["A"])(a.destination),1)]})),_:1}),Object(c["h"])("div",Mt,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(o.tree,(function(e,t){return Object(c["q"])(),Object(c["e"])(i,{key:t,item:e,source:n.source,folder:o.folder,onSelectFolder:a.selectFolder},null,8,["item","source","folder","onSelectFolder"])})),128)),Object(c["h"])("div",{onClick:t[1]||(t[1]=function(e){return a.selectFolder(null)}),class:"flex h-full"})]),Object(c["h"])("div",Nt,[Object(c["h"])(u,{type:"submit",label:"Move"})])])],32)}var Lt={key:0,class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case"};function Ut(e,t,n,r,o,a){var s=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])(s,{type:n.type||"button",disabled:a.isDisabled,class:[n.bgClass,a.isDisabled||"cursor-pointer","big-button small-shadow rounded-12 flex justify-center items-center height-56 w-full normal-case"],style:n.styles||"",onClick:a.emitClick},{default:Object(c["D"])((function(){return[n.label&&n.label.length?(Object(c["q"])(),Object(c["e"])("span",Lt,Object(c["A"])(n.label),1)):Object(c["f"])("",!0),Object(c["x"])(e.$slots,"default")]})),_:3},8,["type","disabled","class","style","onClick"])}var Ft={emits:["onClick"],components:{IonButton:i["b"]},props:{bgClass:{type:String},styles:{type:String},square:{type:Boolean},disabled:{type:Boolean},type:{type:String},label:{type:String}},computed:{isDisabled:function(){return this.disabled}},methods:{emitClick:function(){this.$emit("onClick")}}};const Bt=d()(Ft,[["render",Ut]]);var zt=Bt,Gt={class:"flex flex-col "},Ht={class:"flex justify-between items-center py-4 border-b border-grey"},Vt={class:"font-helvetica-bold text-20 spacing-22 line-30 ml-2 text-black"},Wt={key:0,class:"flex flex-col h-auto pl-8"};function Jt(e,t,n,r,o,a){var s=Object(c["y"])("ion-img"),i=Object(c["y"])("TreeFolderComponent",!0);return Object(c["q"])(),Object(c["e"])("div",Gt,[Object(c["h"])("div",Ht,[Object(c["h"])("div",{onClick:t[1]||(t[1]=function(e){return a.toggleExpanded()}),class:[a.isExpandable?"":"pointer-events-none","flex justify-start items-center"]},[Object(c["h"])(s,{src:"/assets/button-icons/arrow-".concat(o.isExpanded?"down":"right",".svg"),class:[a.isExpandable?"":"opacity-0",o.isExpanded?"width-17 min-width-17":"width-12 min-width-12"]},null,8,["src","class"])],2),Object(c["h"])("div",{onClick:t[2]||(t[2]=function(e){return a.emitSelect(e,n.item)}),class:[a.isFolderTheSource?"opacity-50 pointer-events-none":"","flex-grow flex justify-between items-center"]},[Object(c["h"])("span",Vt,Object(c["A"])(n.item.name),1),Object(c["h"])("div",{class:[a.isSelected?"border-black":"border-grey","bg-white width-24 height-24 rounded-full border p-1"]},[Object(c["h"])("div",{class:[a.isSelected?"bg-black":"bg-white","rounded-full w-full h-full pointer-events-none"]},null,2)],2)],2)]),o.isExpanded?(Object(c["q"])(),Object(c["e"])("div",Wt,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.item.folders,(function(e,r){return Object(c["q"])(),Object(c["e"])(i,{key:r,item:e,folder:n.folder,source:n.source,onSelectFolder:t[3]||(t[3]=function(e){return a.emitSelect(null,e)})},null,8,["item","folder","source"])})),128))])):Object(c["f"])("",!0)])}var Kt={name:"TreeFolderComponent",components:{IonImg:i["d"]},props:{item:Object,folder:Object,source:Object,classes:[String,Array]},data:function(){return{isExpanded:!1}},computed:{isFolderTheSource:function(){return!(!this.source||"folder"!==this.source.type||this.source.id!==this.item.id)},isExpandable:function(){return!!(this.item&&this.item.folders&&this.item.folders.length)},isSelected:function(){return!!this.folder&&this.folder.id===this.item.id}},methods:{emitSelect:function(e,t){e&&e.target&&e.stopPropagation();var n=t||this.item;this.$emit("selectFolder",n)},toggleExpanded:function(){this.isExpanded=!this.isExpanded}}};const Yt=d()(Kt,[["render",Jt]]);var Xt=Yt,Qt={components:{Title:J,BigButton:zt,TreeFolderComponent:Xt},props:{source:Object},data:function(){return{isOpened:!1,folder:void 0,tree:[]}},computed:{destination:function(){return this.folder&&this.folder.name?this.folder.name:"My docs"}},methods:{getFileSystem:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:Ke.folders.list});case 3:n=t.sent,e.tree=n,t.next=11;break;case 7:t.prev=7,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:Je.errors.documents,color:"danger"});case 11:case"end":return t.stop()}}),t,null,[[0,7]])})))()},selectFolder:function(e){this.folder=e},onSubmit:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r,o,a;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return e.preventDefault(),r="",o={},"folder"===t.source.type?(r=Ke.folders.move,o.destination=t.folder?t.folder.id:null,o.folder=t.source.id):(r=Ke.documents.move,o.folder=t.folder?t.folder.id:null,o.file=t.source.id),n.prev=4,n.next=7,t.$http({method:"POST",url:r,data:o});case 7:a=n.sent,console.log(a),t.$router.go(),n.next=16;break;case 12:n.prev=12,n.t0=n["catch"](4),console.error(n.t0),"folder"===t.source.type&&n.t0&&n.t0.response&&n.t0.response.data?t.$toast({message:n.t0.response.data,color:"danger"}):t.$toast({message:Je.errors.documents,color:"danger"});case 16:case"end":return n.stop()}}),n,null,[[4,12]])})))()}},mounted:function(){this.getFileSystem()}};const Zt=d()(Qt,[["render",Et]]);var en=Zt,tn={components:{IonButton:i["b"],IonImg:i["d"],IonModal:i["f"],TreeComponent:en},props:{doc:Object,open:Boolean},data:function(){return{isOpened:!1}},computed:{computedName:function(){var e=this.doc.title||this.doc.name;if(e&&e.length>20){var t=e.slice(0,5),n=e.slice(-5);return t+"..."+n}return e||""},isIos:function(){return!(!$["a"]||!$["a"].getPlatform()||"ios"!==$["a"].getPlatform())}},methods:{emitClose:function(){this.$emit("onClose")}},watch:{open:function(e){this.isOpened=e}}};n("274e");const nn=d()(tn,[["render",qt],["__scopeId","data-v-37f92c80"]]);var rn=nn,on={name:"MatomoManager",methods:{logPage:function(e){this.$matomo.setScreen({name:e,path:this.$route.path}),this.$matomo.trackView()},logEvent:function(e,t,n){this.$matomo.logEvent(e,t,n)}}};const an=on;var cn=an,sn={components:{SquareContainer:_t,IonImg:i["d"],RenameModal:Qe,DeleteModal:dt,IntShareModal:$t,FoldersTreeModal:rn},props:{bgClass:{type:String},classes:{type:[String,Array]},document:{type:Object},small:{type:Boolean},actions:{type:Array},type:{type:String},documentType:{type:String}},mixins:[cn],data:function(){return{action:null,isStorageShare:!1,isRenameModalOpen:!1,isDeleteModalOpen:!1,isIntShareModalOpen:!1,isMoveModalOpen:!1}},computed:{isApp:function(){return this.checkIsApp($["a"].getPlatform())},documentActions:function(){var e=this.actions||this.updatedDocument.actions||[];return this.sortActions(e)},divClass:function(){return"".concat(this.bgClass||"bg-white"," ").concat(this.classes||"")},imageBackround:function(){return"folder"===this.document.type?"bg-light-grey2":"bg-light-red"},image:function(){return"folder"===this.document.type?"/assets/button-icons/folder.svg":"/assets/button-icons/pdf.svg"},updatedDocument:function(){return this.document},itemType:function(){return"folder"===this.document.type?"folder":"document"}},methods:{getAppInfo:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,e.$device.getAppInfo();case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)})))()},closeInternalShare:function(){this.isStorageShare=!1,this.toggleModal("internal_share")},getDocumentPath:function(e){var t="";return e.url?t=e.url:e.link?t=e.link:e.file?t=e.file:e.path&&(t=e.path),t},openFile:function(e){var t=this.getDocumentPath(e),n=document.createElement("a");n.target="_blank",n.href=t,document.body.appendChild(n),n.click(),document.body.removeChild(n)},documentAction:function(){this.document&&"folder"===this.document.type?this.$router.push("/documents/folder/".concat(this.document.id,"?type=").concat(this.type)):this.openDocumentMenu()},openActionModal:function(e){this.action=e,this.isActionModalOpen=!0},toggleModal:function(e){switch(e){case"rename":this.isRenameModalOpen=!this.isRenameModalOpen;break;case"delete":this.isDeleteModalOpen=!this.isDeleteModalOpen;break;case"move":this.isMoveModalOpen=!this.isMoveModalOpen;break;case"internal_share":this.isIntShareModalOpen=!this.isIntShareModalOpen;break}},logAction:function(e){this.logEvent(this.documentType||"Doc","".concat(e," ").concat(this.itemType),this.document.title||this.document.name||this.document.label)},openDocumentMenu:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,r,o,c;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:n=[],r=e.documentActions.map((function(e){return e}))||[],"folder"!==e.document.type&&(n.push({text:"Open",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(e.logAction("open"),!e.isApp){t.next=18;break}return n=e.getDocumentPath(e.updatedDocument),t.prev=3,t.next=6,e.$loading.show();case 6:return t.next=8,e.$docviewer(n,e.updatedDocument.title);case 8:t.next=14;break;case 10:t.prev=10,t.t0=t["catch"](3),console.error(t.t0),e.$toast({message:"Cannot open document",color:"danger"});case 14:return t.next=16,e.$loading.hide();case 16:t.next=19;break;case 18:e.openFile(e.updatedDocument);case 19:case"end":return t.stop()}}),t,null,[[3,10]])})));function n(){return t.apply(this,arguments)}return n}()}),n.push({text:"Download",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.logAction("download"),e.openFile(e.updatedDocument);case 2:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()})),o=0;case 4:if(!(o<r.length)){t.next=28;break}t.t0=r[o],t.next="rename"===t.t0?8:"delete"===t.t0?10:"move"===t.t0?12:"internal_share"===t.t0?14:"storage_internal_share"===t.t0?16:"external_share"===t.t0?18:"save_to_mydocs"===t.t0?20:"move_to_mydocs"===t.t0?22:24;break;case 8:return n.push({text:"Rename",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.logAction("rename"),e.toggleModal("rename");case 2:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 10:return n.push({text:"Delete",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.logAction("delete"),e.toggleModal("delete");case 2:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 12:return n.push({text:"Move",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.logAction("move"),e.toggleModal("move");case 2:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 14:return n.push({text:"Share internal",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.logAction("internal share"),e.toggleModal("internal_share");case 2:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 16:return n.push({text:"Share internal",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.logAction("internal share storage"),e.isStorageShare=!0,e.toggleModal("internal_share");case 3:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 18:return n.push({text:"Share external",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(n=e.getDocumentPath(e.updatedDocument),e.logAction("external share"),!e.isApp){t.next=7;break}return t.next=5,Le["a"].share({title:"See "+(e.document.title||e.document.name||"this "+e.document.type),url:n,dialogTitle:"Share this "+e.document.type}).catch((function(t){console.ldebug(t),e.$toast({message:"Cannot share document",color:"danger"})}));case 5:t.next=9;break;case 7:window.navigator.clipboard.writeText(n),e.$toast({message:"Link copied!",color:"dark"});case 9:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 20:return n.push({text:"Save in My Docs",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(e.logAction("save to mydocs"),!e.document||!e.document.id){t.next=16;break}return t.prev=2,t.next=5,e.$http({method:"POST",url:Ke.documents.save_in_mydocs,data:{folder:null,file:e.document.id}});case 5:n=t.sent,e.$toast({message:"Document saved in 'My Docs'!",color:"dark"}),console.debug(n),t.next=14;break;case 10:t.prev=10,t.t0=t["catch"](2),console.error(t.t0),e.$toast({message:Je.errors.file,color:"danger"});case 14:t.next=18;break;case 16:console.error("No id document to save"),e.$toast({message:Je.errors.file,color:"danger"});case 18:case"end":return t.stop()}}),t,null,[[2,10]])})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 22:return n.push({text:"Move To My Docs",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){var n,r;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(e.logAction("move to mydocs"),n=Je.errors.folderDetail,e.document&&"file"===e.document.type&&(n=Je.errors.file),!e.document||!e.document.id){t.next=18;break}return t.prev=4,t.next=7,e.$http({method:"POST",url:Ke.folders.move_to_mydocs,data:{type:e.document.type,source:e.document.id}});case 7:r=t.sent,console.debug(r),e.$router.go(),t.next=16;break;case 12:t.prev=12,t.t0=t["catch"](4),console.error(t.t0),e.$toast({message:n,color:"danger"});case 16:t.next=20;break;case 18:console.error("No id document to save"),e.$toast({message:n,color:"danger"});case 20:case"end":return t.stop()}}),t,null,[[4,12]])})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 24:return t.abrupt("break",25);case 25:o++,t.next=4;break;case 28:return t.next=30,i["l"].create({header:e.document.label,animated:!0,cssClass:"document-action-menu",buttons:n});case 30:return c=t.sent,t.next=33,c.present();case 33:case"end":return t.stop()}}),t)})))()}}};n("1306");const un=d()(sn,[["render",Ee]]);var ln=un,dn={components:{DocumentListItem:ln},props:{docs:[Array,Object],title:String,titleClass:[Array,String],classes:[Array,String],type:[String]}};n("4508");const hn=d()(dn,[["render",Te],["__scopeId","data-v-7532fd24"]]);var fn=hn;function pn(e,t,n,r,o,a){return Object(c["q"])(),Object(c["e"])("div",{onClick:t[1]||(t[1]=function(){return a.emitClick&&a.emitClick.apply(a,arguments)}),class:[n.bgClass||"bg-white","elevated-shadow rounded-8 p-0 flex cursor-pointer"],style:a.computedStyle},[Object(c["x"])(e.$slots,"default")],6)}var mn={components:{},props:{bgClass:String,styles:String,square:Boolean},computed:{computedStyle:function(){var e="";return this.styles&&(e+=this.styles+" "),this.square&&(e+="width:44px;height:44px; "),e}},methods:{emitClick:function(){this.$emit("onClick")}}};const bn=d()(mn,[["render",pn]]);var gn=bn,vn={components:{IonImg:i["d"],Title:J,Searchbar:Q,Carousel:re,GreyContainer:se,HomeTitledContainer:de,ShadowButton:gn,HomeNews:ve,HomeCongress:_e,HomeDocuments:fn},data:function(){return{products:[{id:2,name:"Hip",img:"/assets/test/product-vertical-home.svg"},{id:3,name:"Knee",img:"/assets/test/product-square-home.svg"},{id:4,name:"Shoulder",img:"/assets/test/product-vertical-home.svg"}],documents:{},news:[{id:1,img:"/assets/test/news.jpg",text:"1st Surgery using the Trabecular Titanium™ Tibial Plate"},{id:2,img:"/assets/test/news.jpg",text:"1st Surgery using the Trabecular Titanium™ Tibial Plate"}],meded:[{course_id:12,date:"14-15 June",title:"Smart SPACE: your digital companion from pre-op planning to…",category:"course",pillar:{image:"/assets/test/shoulder.jpg",name:"Shoulder"},faculties:[{name:"A",image:"/assets/test/faculty1.jpg"},{name:"B",image:"/assets/test/faculty2.jpg"},{name:"C",image:"/assets/test/faculty3.jpg"}]},{course_id:13,date:"17-18 June",title:"Smart SPACE: your digital companion from pre-op planning to…",category:"limaonlineeducation",pillar:{image:"/assets/test/shoulder.jpg",name:"Shoulder"},faculties:[{name:"A",image:"/assets/test/faculty1.jpg"},{name:"B",image:"/assets/test/faculty2.jpg"},{name:"C",image:"/assets/test/faculty3.jpg"},{name:"D",image:"/assets/test/faculty2.jpg"}]}],congresses:[{title:"AAOS | 2021 Annual Meeting",location:"San Diego, California - USA",date:"31 Aug - 4 Sep"}]}},computed:{isIos:function(){return!(!$["a"]||!$["a"].getPlatform()||"ios"!==$["a"].getPlatform())}},mounted:function(){if(this.$store.dispatch("loginWithToken"),window.pathToReach||window.localStorage.getItem("PATH")){var e=window.pathToReach||window.localStorage.getItem("PATH");this.$router.push(e)}if(this.$store.getters.formattedLaunchUrl){var t=this.$store.getters.formattedLaunchUrl;this.$store.commit("setLaunchUrl",null),this.$router.push(t)}},methods:{openNotifications:function(){this.$router.push({path:"/new",meta:{section:"notifications"}})},updateState:function(e){var t=e.products,n=e.documents,r=e.news,o=e.meded,a=e.congresses;this.products=t||[],this.news=r||[],this.meded=o||[],this.documents=n||{},this.congresses=a||[]},routeToSegment:function(e){var t="/products/".concat(e.id);this.$router.push({path:t})},routeToSearch:function(e){var t=e?"?string="+e:"";this.$router.push("/search"+t)}},watch:{"$store.getters.formattedLaunchUrl":function(){if(this.$store.getters.formattedLaunchUrl){var e=this.$store.getters.formattedLaunchUrl;this.$store.commit("setLaunchUrl",null),this.$router.push(e)}}}};n("b112");const jn=d()(vn,[["render",G],["__scopeId","data-v-9c3cc1fa"]]);var On=jn,wn=[{path:"/home",component:C,meta:{refreshAction:["getHome","loginWithToken"]},children:[{path:"",name:"Home",component:On}]},{path:"/:catchAll(.*)",redirect:"/home"}],yn=Object(m["a"])({history:Object(i["n"])("capacitor")?Object(m["c"])("/"):Object(m["b"])(),routes:wn}),xn=yn,kn=n("7dc5"),Sn=n("e2c7"),$n=(n("4b63"),n("4041"),n("51ef"),n("a237"),n("e09e"),n("46e5"),n("98b6"),n("2d22"),n("66b0"),n("ce1f"),n("8c28"),n("f1c0"),n("ab74"),n("51df"),n("5502"));function An(e){return Rn.apply(this,arguments)}function Rn(){return Rn=Object(a["a"])(regeneratorRuntime.mark((function e(t){var n,r,o,a,c,s,i,u,l,d,h;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=[],r=[],o=[],a={my:[],shared:[]},e.prev=4,e.next=7,this.$app.$http({method:"GET",url:Ke.products.segments,params:{},loader:!1});case 7:return c=e.sent,c&&c.categories&&(n=c.categories),e.next=11,this.$app.$http({method:"GET",url:Ke.congresses.home,params:{},loader:!1});case 11:return s=e.sent,r=s,e.next=15,this.$app.$http({method:"GET",url:Ke.news.home,params:{},loader:!1});case 15:return i=e.sent,o=i,e.next=19,this.$app.$http({method:"GET",url:Ke.documents.list_my,params:{},loader:!1});case 19:return u=e.sent,a.my=u.list,e.next=23,this.$app.$http({method:"GET",url:Ke.documents.list_shared,params:{},loader:!1});case 23:return l=e.sent,a.shared=l.list,e.next=27,this.$app.$http({method:"GET",url:Ke.documents.list_us,params:{},loader:!1});case 27:d=e.sent,a.us=d.list,e.next=34;break;case 31:e.prev=31,e.t0=e["catch"](4),this.$app.$toast({message:Je.errors.home,color:"danger"});case 34:h={products:n,congresses:r,news:o,documents:{my:a.my.slice(0,3),shared:a.shared.slice(0,3),us:a.us.slice(0,3)}},t.commit("setHome",h);case 36:case"end":return e.stop()}}),e,this,[[4,31]])}))),Rn.apply(this,arguments)}var Cn={state:{home:{products:[],documents:{},meded:[],congresses:[],news:[]}},mutations:{setHome:function(e,t){e.home=t}},actions:r,getters:{homeData:function(e){return e.home||{products:[],documents:{},meded:[],congresses:[],news:[]}},homeProducts:function(e){return e&&e.home&&e.home.products?e.home.products:[]},homeCongresses:function(e){return e&&e.home&&e.home.congresses?e.home.congresses:[]},homeNews:function(e){return e&&e.home&&e.home.news?e.home.news:[]},homeDocuments:function(e){return e&&e.home&&e.home.documents?e.home.documents:{my:[],shared:[],us:[]}}}},_n=Object($n["a"])(Cn);function In(e,t){return Dn.apply(this,arguments)}function Dn(){return Dn=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var r;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return r=n.to,e.next=3,t.$store.dispatch("newNotificationsState",r);case 3:case"end":return e.stop()}}),e)}))),Dn.apply(this,arguments)}function Tn(e,t){return qn.apply(this,arguments)}function qn(){return qn=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var r;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:console.log("Notification received",t,n),n.notification&&n.notification&&n.notification.launchURL?(r=n.notification.launchURL,r=r.split("limasales:/")[1],t.$router.push(r)):t.$bg.wakeUp();case 2:case"end":return e.stop()}}),e)}))),qn.apply(this,arguments)}function Pn(e,t){return Mn.apply(this,arguments)}function Mn(){return Mn=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var r,o;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:console.log("Opened notification",t,n),n.notification&&(r=n.notification,r&&r.launchURL&&(o=r.launchURL,console.log("NOTIFICATION",r,t.$store.getters.loggedIn,o),o=o.split("limasales:/")[1],t.$store.getters.loggedIn?(t.$router.push(o),t.$store.commit("setLaunchUrl",o)):(t.$store.commit("setLaunchUrl",r.launchURL),t.$store.commit("setNotificationToShow",o))));case 2:case"end":return e.stop()}}),e)}))),Mn.apply(this,arguments)}function Nn(e,t){return En.apply(this,arguments)}function En(){return En=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(!0!==n.isActive||t.$store.getters.loggedIn||!window.localStorage.getItem("JWT")){e.next=3;break}return e.next=3,t.$store.dispatch("loginWithToken");case 3:if(!0!==n.isActive||!t.$store.getters.loggedIn||!0!==t.$route.meta.refreshOnOpen){e.next=6;break}return e.next=6,t.$store.dispatch("getMessages");case 6:case"end":return e.stop()}}),e)}))),En.apply(this,arguments)}function Ln(e,t,n){"background"===e.$route.meta.backAction?e.$bg.moveToBg():"exit"===e.$route.meta.backAction&&n.exitApp()}n("a4d3"),n("e01a"),n("498a"),n("a630"),n("3ca3"),n("4de4"),n("5319"),n("4e82");function Un(e){return e.charAt(0).toUpperCase()+e.slice(1)}function Fn(e){try{var t=new Date(e/1e4),n=new Date(3939,0,1),r=t.getTime()-n.getTime(),o=new Date(r);return"".concat(o.toLocaleDateString()," ").concat(o.toLocaleTimeString())}catch(a){console.warn("Cannot convert timestamp",e)}}function Bn(e){return!e||e.length>200||/[<>]/.test(e)?"":e.constructor===Array?e.length?e[0].description:"":e.trim()||""}function zn(e){return!e||"web"!==e}function Gn(){var e=document.getElementsByTagName("p"),t=Array.from(e),n=t.filter((function(e){return 0===e.textContent.trim().length}));n.map((function(e){return e.remove()})),console.debug("Empty paragraphs have been cleaned. See you next Wednesday!")}function Hn(e){if(e&&e.length){var t=e.replace(/(<br><\/p>|<\/br><\/p>|<br\/><\/p>)/gm,"</p>");return t=t.replace(/(<br>|<\/br>|<br\/>)/gm,"\n"),t=t.replace(/^\s/gm,""),t=t.replace(/\n/gm,"<br>"),t}return""}function Vn(e){var t=["open","rename","download","internal_share","external_share","save_to_mydocs","move_to_mydocs","move","delete"];return e&&e.length?e.sort((function(e,n){return t.indexOf(e)-t.indexOf(n)})):[]}var Wn={install:function(e){e.mixin({methods:{capitalizeFirstLetter:Un,ticksToString:Fn,checkIsApp:zn,cleanParagraphs:Gn,sanitizeManageText:Hn,sortActions:Vn,validateErrorResponse:Bn,valIsArray:function(e){return e instanceof Array}}})}},Jn=n("15fd"),Kn=n("bc3a"),Yn=n.n(Kn),Xn=["mode"],Qn=["auth","loader","notifyErrors","baseUrl","url","headers"],Zn=function(){return window.localStorage.getItem("JWT")||!1},er=function(e){return window.localStorage.setItem("JWT",e)},tr={install:function(e,t){var n=t.mode,r=void 0===n?"dev":n,c=Object(Jn["a"])(t,Xn),s=function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){var t,n,a,s,i,u,l,d,h,f,p,m,b,g,v,j,O,w=arguments;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(t=w.length>0&&void 0!==w[0]?w[0]:{},n=t.auth,a=void 0===n||n,s=t.loader,i=void 0===s||s,u=t.notifyErrors,l=void 0!==u&&u,d=t.baseUrl,h=void 0===d?Ke.baseUrl[r]:d,f=t.url,p=void 0===f?"":f,m=t.headers,b=void 0===m?{}:m,g=Object(Jn["a"])(t,Qn),v={},a&&(j=Zn(),j&&(v.headers=Object(o["a"])({Authorization:"Bearer ".concat(j)},b))),v.headers||(v.headers=b),!i){e.next=7;break}return e.next=7,this.$loading.show();case 7:return e.prev=7,e.next=10,Yn()(Object(o["a"])(Object(o["a"])(Object(o["a"])(Object(o["a"])({},c),v),g),{},{url:"".concat(h).concat(p)}));case 10:O=e.sent,O.data&&O.data.jwt&&er(O.data.jwt),e.next=30;break;case 14:if(e.prev=14,e.t0=e["catch"](7),!e.t0.request||401!==e.t0.request.status){e.next=23;break}if(this.$store.dispatch("logout"),this.$toast({message:Je.errors.loginNecessary,color:"danger"}),!i){e.next=22;break}return e.next=22,this.$loading.hide();case 22:return e.abrupt("return",{});case 23:if(!i){e.next=26;break}return e.next=26,this.$loading.hide();case 26:if(!l){e.next=29;break}return this.$toast({message:Je.errors.cannotPerform,color:"error"}),e.abrupt("return",console.error(e.t0));case 29:throw e.t0;case 30:return e.next=32,this.$loading.hide();case 32:return e.abrupt("return",O.data);case 33:case"end":return e.stop()}}),e,this,[[7,14]])})));return function(){return e.apply(this,arguments)}}();e.config.globalProperties.$http=s}},nr={install:function(e,t){var n=!1,r=0;e.config.globalProperties.$loading={show:function(){return Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(r++,1===r){e.next=3;break}return e.abrupt("return");case 3:return e.next=5,i["o"].create(t);case 5:return n=e.sent,e.abrupt("return",n.present());case 7:case"end":return e.stop()}}),e)})))()},hide:function(){return Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(r--,!1===n&&r>0&&console.warn("Have you awaited the show function?"),0!==r||!n){e.next=6;break}return e.next=5,n.dismiss();case 5:setTimeout(Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,n.dismiss();case 3:e.next=8;break;case 5:e.prev=5,e.t0=e["catch"](0),console.debug("Loader already dismissed",e.t0);case 8:case"end":return e.stop()}}),e,null,[[0,5]])}))),1500);case 6:case"end":return e.stop()}}),e)})))()}}}},rr={install:function(e,t){e.config.globalProperties.$toast=function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(n){var r;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,i["p"].create(Object(o["a"])(Object(o["a"])({},t),n));case 2:return r=e.sent,e.abrupt("return",r.present());case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()}},or=function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,i["m"].create(Object(o["a"])({cssClass:"alert",header:"Warning",buttons:["Ok"]},t));case 2:return n=e.sent,e.next=5,n.present();case 5:return e.next=7,n.onDidDismiss();case 7:return e.abrupt("return",e.sent);case 8:case"end":return e.stop()}}),e)})));function t(t){return e.apply(this,arguments)}return t}(),ar={install:function(e){return Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.config.globalProperties.$alert=or;case 1:case"end":return t.stop()}}),t)})))()}},cr=n("aefb"),sr={install:function(e){var t=arguments;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r,o,c,s,u,l;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:r=t.length>1&&void 0!==t[1]?t[1]:{},c=r.events||{},s=c.onForeground,u=c.onBackButton,s&&p["a"].addListener("appStateChange",(function(t){return s(e.config.globalProperties,t)})),u&&Object(i["q"])(-1,(function(t){return u(e.config.globalProperties,t,p["a"])})),l={getId:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",cr["a"].getId());case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),getAppInfo:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",p["a"].getInfo());case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),getInfo:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(o){e.next=4;break}return e.next=3,cr["a"].getInfo();case 3:o=e.sent;case 4:return e.abrupt("return",o);case 5:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),getBattery:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",cr["a"].getBatteryInfo());case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),getPlatform:function(){return i["n"].apply(void 0,arguments)}},e.config.globalProperties.$device=l;case 6:case"end":return n.stop()}}),n)})))()}},ir=(n("d3b7"),n("5cc6"),n("9a8c"),n("a975"),n("735e"),n("c1ac"),n("d139"),n("3a7b"),n("d5d6"),n("82f8"),n("e91f"),n("60bd"),n("5f96"),n("3280"),n("3fcc"),n("ca91"),n("25a1"),n("cd26"),n("3c5d"),n("2954"),n("649e"),n("219c"),n("170b"),n("b39a"),n("72f7"),n("84c6")),ur=n("17b6"),lr=n("de86"),dr=function(e){return function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(n){var r,o,c,s,i,u,l,d=arguments;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return s=function(e){for(var t="",n=new Uint8Array(e),r=n.byteLength,o=0;o<r;o++)t+=String.fromCharCode(n[o]);return window.btoa(t)},r=d.length>1&&void 0!==d[1]?d[1]:"Document",t.next=4,e.$loading.show();case 4:return t.next=6,e.$http({method:"GET",baseUrl:n,auth:!1,headers:{Accept:"application/pdf"},responseType:"arraybuffer"});case 6:if(o=t.sent,o){t.next=9;break}throw new Error("Cannot open pdf");case 9:return c=s(o),t.next=12,ir["a"].writeFile(ir["a"].dataDirectory,"".concat(r,".pdf"),c,{replace:!0});case 12:return t.next=14,e.$loading.hide();case 14:return i=function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,ur["b"].writeFile({path:"".concat(r,".pdf"),data:c,directory:ur["a"].Cache});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),t.next=17,i();case 17:return u=t.sent,l=u.uri,t.abrupt("return",new Promise((function(){lr["a"].open({filePath:l,contentType:"application/pdf",openWithDefault:!0})})));case 20:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()},hr={install:function(e){e.config.globalProperties.$docviewer=dr(e.config.globalProperties)}},fr=n("ebd2"),pr=n.n(fr);function mr(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};pr.a.setAppId(t.appId,t.firebaseId);var n=t.events||{},r=n.notifOpened,o=n.notifReceived;return pr.a.setNotificationOpenedHandler((function(t){return r(e,t)})),pr.a.setNotificationWillShowInForegroundHandler((function(t){return o(e,t)})),pr.a}var br={install:function(e,t){var n=mr(e.config.globalProperties,t);e.config.globalProperties.$onesignal={getUID:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",new Promise((function(e,t){n.getDeviceState((function(n){if(console.log(n),!n.userId)return t(new Error("NO_USERID"));e(n.userId)}))})));case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}()}}},gr=n("3c98"),vr=function(e){return function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(n){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,e.$loading.show();case 2:return gr["a"].write({string:n}),t.next=5,e.$loading.hide();case 5:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()},jr={install:function(e){e.config.globalProperties.$clipboard=vr(e.config.globalProperties)}},Or={install:function(e){return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:n={canShare:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",Le["a"].canShare());case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),share:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,this.canShare();case 2:if(n=e.sent,!n){e.next=5;break}return e.abrupt("return",Le["a"].share(t));case 5:return e.abrupt("return",!1);case 6:case"end":return e.stop()}}),e,this)})));function t(t){return e.apply(this,arguments)}return t}()},e.config.globalProperties.$share=n;case 2:case"end":return t.stop()}}),t)})))()}},wr={install:function(e){return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:n={setUserId:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",window._paq.push(["setUserId",t]));case 1:case"end":return e.stop()}}),e)})));function t(t){return e.apply(this,arguments)}return t}(),reset:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",window._paq.push(["resetUserId"]));case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),setScreen:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:console.log("[matomo] overriding :",t),window._paq.push(["setCustomUrl",t.path]),window._paq.push(["setDocumentTitle",t.name]);case 3:case"end":return e.stop()}}),e)})));function t(t){return e.apply(this,arguments)}return t}(),logEvent:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var r,o=arguments;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return r=o.length>2&&void 0!==o[2]?o[2]:{},console.log("[matomo] triggering event",t,n,r),e.abrupt("return",window._paq.push(["trackEvent",t,n,JSON.stringify(r)]));case 3:case"end":return e.stop()}}),e)})));function t(t,n){return e.apply(this,arguments)}return t}(),logPage:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return console.log("[matomo] triggering pageView",t,n),e.abrupt("return",window._paq.push(["trackEvent","page","view",t,n]));case 2:case"end":return e.stop()}}),e)})));function t(t,n){return e.apply(this,arguments)}return t}(),trackView:function(){return console.log("[matomo] triggering page view"),window._paq.push(["trackPageView"])},trackSearch:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return window._paq.push(["trackSiteSearch",e,n,t])}},e.config.globalProperties.$matomo=n;case 2:case"end":return t.stop()}}),t)})))()}};function yr(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if(e&&e.includes("token")){var t=e.split("token=")[1].split("#")[0];window.azureToken=t,console.log("received url: "+e,t),window.localStorage.setItem("JWT",t)}}function xr(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if(e&&e.includes("path")){var t=e.split("path=")[1];window.pathToReach=t,console.log("received url: "+e,t),window.localStorage.setItem("PATH",t)}}function kr(){return Sr.apply(this,arguments)}function Sr(){return Sr=Object(a["a"])(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Sn["a"].show();case 2:return window.handleOpenURL=function(e){yr(e),xr(e)},t=Object(c["d"])(f).use(i["k"]).use(xn).use(_n).use(Wn).use(tr,{mode:kn.mode}).use(ar).use(nr).use(hr).use(jr).use(Or).use(wr).use(rr,{duration:3e3,color:"primary"}),$["a"].getPlatform()&&"web"===$["a"].getPlatform()||t.use(br,Object(o["a"])({events:{permissionChange:In,notifOpened:Pn,notifReceived:Tn}},kn.oneSignal)),t.use(sr,{events:{onForeground:Nn,onBackButton:Ln}}),_n.$app=t.config.globalProperties,e.next=9,xn.isReady();case 9:t.mount("#app"),setTimeout((function(){Sn["a"].hide()}),500);case 11:case"end":return e.stop()}}),e)}))),Sr.apply(this,arguments)}kr(),p["a"].addListener("appUrlOpen",(function(e){var t=e.url;t&&(yr(t),xr(t))}))},"6da2":function(e,t,n){"use strict";n("a189")},"7dc5":function(e){e.exports=JSON.parse('{"mode":"prod","oneSignal":{"appId":"","firebaseId":""},"userDataBlacklist":[]}')},"8c28":function(e,t,n){},9259:function(e,t,n){},9923:function(e,t,n){"use strict";n("4c8d")},a189:function(e,t,n){},a43b:function(e){e.exports=JSON.parse('{"baseUrl":{"dev":"https://test.com/api","prod":"https://test.com/api"},"contacts":"/contacts","auth":{"loginCheck":"/users/check-domain","login":"/users/login","azureLogin":"/users/login-azure","loginWithToken":"/users/get-data"},"search":"/search","products":{"segments":"/products/categories","products":"/products","product":"/product","component":"/product/component"},"congresses":{"home":"/congresses/home","list":"/congresses","activity":"/congresses/activity"},"training":{"home":"/training/home","list":"/training","activity":"/training/activity"},"learn":{"list":"/learn","register":"/learn/register"},"documents":{"list":"/documents","list_my":"/documents/my","list_shared":"/documents/shared","list_us":"/usadocs","save_in_mydocs":"/documents/favorite","remove_from_my":"/documents/remove","move":"/documents/move","share":"/documents/share","storage_share":"/documents/storage-share","upload":"/documents/upload"},"folders":{"create":"/folders","list":"/folders/list","move":"/folders/move","share":"/folders/share","move_to_mydocs":"/folders/mydocs"},"news":{"home":"/news/home","list":"/news"},"notifications":{"list":"/push","updates":"/updates"},"multimedia":{"videos":"/multimedia/video","images":"/multimedia/images"},"users":{"shareList":"/users/share-list","acceptTerms":"/users/accept-terms","onBoarding":"/users/onboarding","deviceInfo":"/users/register-device"},"usefulLinks":"/useful-links"}')},a9b5:function(e,t,n){},aa55:function(e,t,n){var r={"./ion-action-sheet.entry.js":["6618","chunk-504c4825"],"./ion-alert.entry.js":["f06c","chunk-008cd3d6"],"./ion-app_8.entry.js":["c215","chunk-34f7327c"],"./ion-avatar_3.entry.js":["cf12","chunk-59d4c87c"],"./ion-back-button.entry.js":["4b35","chunk-69eb8776"],"./ion-backdrop.entry.js":["429d","chunk-2d0c073f"],"./ion-button_2.entry.js":["4453","chunk-25d83ca8"],"./ion-card_5.entry.js":["070b","chunk-541ea42d"],"./ion-checkbox.entry.js":["dfd8","chunk-09162720"],"./ion-chip.entry.js":["430d","chunk-09155df3"],"./ion-col_3.entry.js":["6a8a","chunk-2d0da04a"],"./ion-datetime_3.entry.js":["c15b","chunk-21a76241"],"./ion-fab_3.entry.js":["dd47","chunk-3ed29de3"],"./ion-img.entry.js":["9588","chunk-2d0e5812"],"./ion-infinite-scroll_2.entry.js":["d1e5","chunk-2d21da73"],"./ion-input.entry.js":["d111","chunk-37f2300e"],"./ion-item-option_3.entry.js":["1bb3","chunk-5ff96a24"],"./ion-item_8.entry.js":["69da","chunk-5a8ac886"],"./ion-loading.entry.js":["53a5","chunk-6d375f34"],"./ion-menu_3.entry.js":["cb00","chunk-097e0872"],"./ion-modal.entry.js":["1ad0","chunk-f858ef4e"],"./ion-nav_2.entry.js":["e44f","chunk-c53d26f0"],"./ion-popover.entry.js":["4285","chunk-1f3fa45a"],"./ion-progress-bar.entry.js":["9b72","chunk-1dbc15a2"],"./ion-radio_2.entry.js":["beb3","chunk-0e93a01c"],"./ion-range.entry.js":["719f","chunk-54bbd082"],"./ion-refresher_2.entry.js":["0a47","chunk-d8413eac"],"./ion-reorder_2.entry.js":["6672","chunk-d0e8aa0a"],"./ion-ripple-effect.entry.js":["c8da","chunk-2d218068"],"./ion-route_4.entry.js":["10e8","chunk-858cd918"],"./ion-searchbar.entry.js":["8625","chunk-a9395c36"],"./ion-segment_2.entry.js":["0c02","chunk-462c869e"],"./ion-select_3.entry.js":["d25f","chunk-79f1dac7"],"./ion-slide_2.entry.js":["05dd","chunk-2d0a463b"],"./ion-spinner.entry.js":["e11b","chunk-8bb7f81e"],"./ion-split-pane.entry.js":["aae8","chunk-2d213189"],"./ion-tab-bar_2.entry.js":["a2bb","chunk-02c995b5"],"./ion-tab_2.entry.js":["6725","chunk-c567cc2a"],"./ion-text.entry.js":["ed3b","chunk-30dd9750"],"./ion-textarea.entry.js":["8798","chunk-eaa2b130"],"./ion-toast.entry.js":["c1a5","chunk-41c0f7a4"],"./ion-toggle.entry.js":["bef2","chunk-7548ca2d"],"./ion-virtual-scroll.entry.js":["5fd7","chunk-2d0d43da"]};function o(e){if(!n.o(r,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=r[e],o=t[0];return n.e(t[1]).then((function(){return n(o)}))}o.keys=function(){return Object.keys(r)},o.id="aa55",e.exports=o},ab00:function(e,t,n){var r={"./ion-icon.entry.js":["7059","chunk-2d0d5c33"]};function o(e){if(!n.o(r,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=r[e],o=t[0];return n.e(t[1]).then((function(){return n(o)}))}o.keys=function(){return Object.keys(r)},o.id="ab00",e.exports=o},ab74:function(e,t,n){},b112:function(e,t,n){"use strict";n("535e")},b7fd:function(e,t,n){"use strict";n("eb6d")},c5a9:function(e,t,n){"use strict";n("f64b")},c64f:function(e,t,n){},c791:function(e,t,n){},cffe:function(e,t,n){"use strict";n("c791")},d136:function(e,t,n){},eaa6:function(e,t,n){},eb6d:function(e,t,n){},eba1:function(e){e.exports=JSON.parse('{"loginSuccessful":"Ruccessful login!","messageSent":"Reply sent","recoverMailSent":"Recover mail sent successfully","learnRegisterSuccessful":"You have been registered to the course","errors":{"checkEmail":"An error occurred while checking the email domain. Retry later","cannotLogin":"Login failed","loginNecessary":"Please sign in","home":"An error occurred while getting all the informations","onboarding":"An error occurred while getting you on board. Try again later","acceptTerms":"An error occurred while saving your consent. Try again later","updates":"An error occurred while showing you the last addition to the app. Check in \\"What\'s new\\"","shareList":"An error occurred while retrieving the recipients. Write the email or try again later","news":"An error occurred while retrieving the news","newsDetail":"An error occurred while retrieving this news","contacts":"An error occurred while retrieving the contacts","notifications":"An error occurred while retrieving the notifications","notificationDetail":"An error occurred while retrieving this notification","deviceInfo":"An error occurred while checking the user device","appUpdates":"An error occurred while checking the latest app updates","segments":"An error occurred while retrieving the segments","segmentProducts":"An error occurred while retrieving the products of this segment","productDetail":"An error occurred while getting the product","categoryProducts":"An error occurred while retrieving the products of this category","congresses":"An error occurred while retrieving the congresses","congressDetail":"An error occurred while retrieving the congress information","activityDetail":"An error occurred while retrieving the activity information","training":"An error occurred while retrieving the training","trainingDetail":"An error occurred while retrieving the training information","learn":"An error occurred while retrieving the courses","learnDetail":"An error occurred while retrieving the course information","learnRegister":"An error occurred while registering","documents":"An error occurred while retrieving the documents. Retry later","folderDetail":"An error occurred while retrieving the folder","file":"An error occurred while obtaining the file","notInternal":"The user associated with that e-mail was not found. Check again the e-mail or try an external share.","furtherFolders":"You cannot create further folders, you have reached max depth level","fileUpload":"An error occurred while uploading the file. Check the name and the file","fileSystem":"An error occurred while obtaining the file. Retry later or check the permissions","search":"An error occurred while searching","usefulLinks":"An error occured while getting the links","missingMailPassword":"Insert email and password","cannotPerform":"Cannot perform operation","cannotGetRounds":"Failed to get rounds","cannotGetMessages":"Failed to get messages","cannotGetUserData":"Failed to get user data","cannotResetPassword":"Failed to reset password","cannotEnableNotifs":"Failed to enable notifications service","cannotChangePassword":"Failed to change password","failedUserRegistration":"Failed to register new user to team","cannotGetUserTypes":"Failed to fetch user types","notifError":{"title":"Missing notification permissions","message":"Please reinstall app or go to settings and accept notification permissions"}},"success":{"shared":"The document has been successfully shared with"}}')},f1c0:function(e,t,n){},f64b:function(e,t,n){}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,