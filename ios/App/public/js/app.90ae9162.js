(function(e){function t(t){for(var r,c,o=t[0],i=t[1],l=t[2],u=0,b=[];u<o.length;u++)c=o[u],Object.prototype.hasOwnProperty.call(s,c)&&s[c]&&b.push(s[c][0]),s[c]=0;for(r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r]);d&&d(t);while(b.length)b.shift()();return a.push.apply(a,l||[]),n()}function n(){for(var e,t=0;t<a.length;t++){for(var n=a[t],r=!0,c=1;c<n.length;c++){var i=n[c];0!==s[i]&&(r=!1)}r&&(a.splice(t--,1),e=o(o.s=n[0]))}return e}var r={},s={app:0},a=[];function c(e){return o.p+"js/"+({"polyfills-core-js":"polyfills-core-js","polyfills-dom":"polyfills-dom"}[e]||e)+"."+{"chunk-008cd3d6":"b41757d5","chunk-02c995b5":"94c321d8","chunk-09155df3":"f9029e36","chunk-09162720":"0a4b8a6f","chunk-097e0872":"924cb888","chunk-0e93a01c":"2a03864d","chunk-1dbc15a2":"d4ea55a8","chunk-1f3fa45a":"bfc8b673","chunk-21a76241":"56c5b776","chunk-25d83ca8":"77968906","chunk-2d0a3ffc":"033341ab","chunk-2d0a463b":"e0d56be5","chunk-2d0a4885":"44477eab","chunk-2d0c073f":"75c8948f","chunk-2d0c8407":"97f4bdb4","chunk-2d0d43da":"98e5d41e","chunk-2d0d5c33":"d98bbfcf","chunk-2d0d6f0e":"6d90b37a","chunk-2d0da04a":"5a12f00d","chunk-2d0e5812":"3a337311","chunk-2d0f0050":"09f1b677","chunk-2d208e4e":"f0965e8f","chunk-2d212be3":"4900f968","chunk-2d213189":"f8291c06","chunk-2d218068":"0dd720d9","chunk-2d21da73":"18c16efc","chunk-30dd9750":"5998ca9d","chunk-34f7327c":"fb05cd76","chunk-37f2300e":"b40e49a7","chunk-3ed29de3":"c39a3d9d","chunk-41c0f7a4":"1a6ecd8a","chunk-462c869e":"534524f9","chunk-504c4825":"c9a2d163","chunk-541ea42d":"4cd7b395","chunk-54bbd082":"c812a52b","chunk-59d4c87c":"81f265f9","chunk-5a8ac886":"7f4f1ff1","chunk-5ff96a24":"4d8b0386","chunk-69eb8776":"cd873c98","chunk-6d375f34":"2e1da4ac","chunk-7548ca2d":"394aba2a","chunk-79f1dac7":"f5516dfd","chunk-858cd918":"7c7d6d68","chunk-8bb7f81e":"bab595d0","chunk-a9395c36":"acb6d4db","chunk-c53d26f0":"ac72f8d0","chunk-c567cc2a":"68364b0e","chunk-d0e8aa0a":"75ac617e","chunk-d8413eac":"5276bc60","chunk-eaa2b130":"344a8632","chunk-f858ef4e":"e07e88d3","polyfills-core-js":"12be3461","polyfills-dom":"662760da","chunk-2d0b62ff":"b9c47961","chunk-2d0b33e3":"2e69defc","chunk-2d0bd1c8":"5808fd24","chunk-2d0c1ca1":"54c24b51","chunk-2d0e19fd":"776759ed","chunk-2d209619":"b117e2af","chunk-2d2376e6":"a05b70ee"}[e]+".js"}function o(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.e=function(e){var t=[],n=s[e];if(0!==n)if(n)t.push(n[2]);else{var r=new Promise((function(t,r){n=s[e]=[t,r]}));t.push(n[2]=r);var a,i=document.createElement("script");i.charset="utf-8",i.timeout=120,o.nc&&i.setAttribute("nonce",o.nc),i.src=c(e);var l=new Error;a=function(t){i.onerror=i.onload=null,clearTimeout(u);var n=s[e];if(0!==n){if(n){var r=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;l.message="Loading chunk "+e+" failed.\n("+r+": "+a+")",l.name="ChunkLoadError",l.type=r,l.request=a,n[1](l)}s[e]=void 0}};var u=setTimeout((function(){a({type:"timeout",target:i})}),12e4);i.onerror=i.onload=a,document.head.appendChild(i)}return Promise.all(t)},o.m=e,o.c=r,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="/",o.oe=function(e){throw console.error(e),e};var i=window["webpackJsonp"]=window["webpackJsonp"]||[],l=i.push.bind(i);i.push=t,i=i.slice();for(var u=0;u<i.length;u++)t(i[u]);var d=l;a.push([0,"chunk-vendors"]),n()})({0:function(e,t,n){e.exports=n("56d7")},"003a":function(e,t,n){},"0857":function(e,t,n){"use strict";n("b8c9")},1089:function(e,t,n){},"125f":function(e,t,n){"use strict";n("56b3")},"184d":function(e,t,n){"use strict";n("aba4")},"1c05":function(e,t,n){"use strict";n("eaa6")},"20cf":function(e,t,n){},"225b":function(e,t,n){"use strict";n("20cf")},2628:function(e){e.exports=JSON.parse('{"order":{"span":"Order by","placeholder":"Order by","name":"order"},"type":{"span":"Type","placeholder":"Select type","name":"type"},"subcategories":{"span":"Subcategories","placeholder":"Select cat.","name":"subcategory"},"categories":{"span":"Categories","placeholder":"Select cat.","name":"category"},"category":{"span":"Category","placeholder":"Select cat.","name":"category"},"faculties":{"span":"Faculty","placeholder":"Select faculty","name":"faculty"},"pillars":{"span":"Pillar","placeholder":"Select pillar","name":"pillar"},"months":{"span":"Month","placeholder":"Select month","name":"month"},"month":{"span":"Month","placeholder":"Select month","name":"month"},"years":{"span":"Year","placeholder":"Select year","name":"year"},"year":{"span":"Year","placeholder":"Select year","name":"year"},"country":{"span":"Country","placeholder":"Select country","name":"region"},"regions":{"span":"Region","placeholder":"Select region","name":"region"},"segment":{"span":"Segment","placeholder":"Select segment","name":"segment"},"segments":{"span":"Segment","placeholder":"Select segment","name":"segment"},"language":{"span":"Language","placeholder":"Select language","name":"language"},"typology":{"span":"Typology","placeholder":"Select typology","name":"typology"},"speaker":{"span":"Speaker","placeholder":"Select speaker","name":"speaker"}}')},"274e":function(e,t,n){"use strict";n("a9b5")},"292d":function(e,t,n){},"2d5f":function(e,t,n){"use strict";n("9e7e")},"38b3":function(e,t,n){},"3c35":function(e,t,n){"use strict";n("c64f")},4508:function(e,t,n){"use strict";n("d136")},"467f":function(e,t,n){},"46a2":function(e,t,n){"use strict";n("7848")},"4c1f":function(e,t,n){},"4c8d":function(e,t,n){},"51df":function(e,t,n){},"568b":function(e,t,n){"use strict";n("ebb0")},"56b3":function(e,t,n){},"56d7":function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"alreadyLoggedRouting",(function(){return Ng})),n.d(r,"logScreenView",(function(){return Ug})),n.d(r,"logout",(function(){return zg})),n.d(r,"login",(function(){return Eg})),n.d(r,"loginWithToken",(function(){return Gg})),n.d(r,"syncOneSignal",(function(){return Wg})),n.d(r,"getNotifications",(function(){return Jg})),n.d(r,"getHome",(function(){return Xg})),n.d(r,"getMessages",(function(){return Zg})),n.d(r,"setMessageAs",(function(){return tO})),n.d(r,"sendMessageResponse",(function(){return rO}));var s=n("5530"),a=n("1da1"),c=(n("e260"),n("e6cf"),n("cca6"),n("a79d"),n("96cf"),n("caad"),n("2532"),n("ac1f"),n("1276"),n("7a23"));function o(e,t,n,r,s,a){var o=Object(c["y"])("router-view"),i=Object(c["y"])("ion-app");return Object(c["q"])(),Object(c["e"])(i,null,{default:Object(c["D"])((function(){return[Object(c["h"])(o)]})),_:1})}var i=n("8a30"),l={name:"App",components:{IonApp:i["a"]}},u=n("d959"),d=n.n(u);const b=d()(l,[["render",o]]);var p=b,h=n("2ad9"),f=n("9f0e"),m=Object(c["G"])("data-v-72cc4640");Object(c["t"])("data-v-72cc4640");var g={id:"container"};Object(c["r"])();var O=m((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-refresher-content"),i=Object(c["y"])("ion-refresher"),l=Object(c["y"])("router-view"),u=Object(c["y"])("ion-content"),d=Object(c["y"])("Tabs"),b=Object(c["y"])("ion-page");return Object(c["q"])(),Object(c["e"])(b,{style:a.isApp?"":"max-width:400px; margin:auto;"},{default:m((function(){return[Object(c["h"])(u,{id:"content",fullscreen:!0,forceOverscroll:!0,"scroll-x":!0,"overflow-scroll":!0,style:a.isApp?"":"-webkit-overflow-scrolling: touch;  overflow-y: scroll !important;"},{default:m((function(){return[a.refreshAction?(Object(c["q"])(),Object(c["e"])(i,{key:0,slot:"fixed",onIonRefresh:t[1]||(t[1]=function(t){return e.$store.dispatch(a.refreshAction,t)})},{default:m((function(){return[Object(c["h"])(o)]})),_:1})):Object(c["f"])("",!0),Object(c["h"])("div",g,[Object(c["h"])(l)])]})),_:1},8,["style"]),a.modalNotOpen?(Object(c["q"])(),Object(c["e"])(d,{key:0})):Object(c["f"])("",!0)]})),_:1},8,["style"])})),j=(n("b0c0"),Object(c["G"])("data-v-d25547cc"));Object(c["t"])("data-v-d25547cc");var v={class:"w-full fixed bottom-0 left-0 bg-transparent",style:{height:"72px"}},y={class:"h-full h-full flex tabs-bar bg-black px-8"};Object(c["r"])();var x=j((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-img");return Object(c["q"])(),Object(c["e"])("div",v,[Object(c["h"])("div",y,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.routingTabs,(function(t,n){return Object(c["q"])(),Object(c["e"])("div",{key:n,tab:t.name,class:[t.disabled?"pointer-events-none":"cursor-pointer"," flex flex-grow justify-center items-center"],onClick:function(n){return e.$router.push(t.href)}},[Object(c["h"])(o,{src:t.icon,class:t.active?"":t.disabled?"opacity-25":"opacity-50"},null,8,["src","class"])],10,["tab","onClick"])})),128))])])})),w=(n("d81d"),{components:{IonImg:i["d"]},data:function(){return{tabs:[{name:"home",href:"/home",icon:"/assets/button-icons/home.svg"},{name:"products",href:"/products",icon:"/assets/button-icons/products.svg"},{name:"documents",href:"/documents",icon:"/assets/button-icons/documents.svg"},{name:"search",href:"/search",icon:"/assets/button-icons/search.svg"},{name:"menu",href:"/menu",icon:"/assets/button-icons/menu.svg"}]}},props:{home:Boolean},computed:{routingTabs:function(){var e=this.$route.path,t=this.getActivePath(e);return this.tabs.map((function(e){return Object(s["a"])(Object(s["a"])({},e),{},{active:e.href===t})}))}},methods:{getActivePath:function(e){for(var t=0;t<this.tabs.length;t++){var n=this.tabs[t].href;if(e.includes(n))return n}}}});n("1c05");const k=d()(w,[["render",x],["__scopeId","data-v-d25547cc"]]);var C=k,S=n("1547"),_={components:{IonContent:i["c"],IonPage:i["h"],IonRefresher:i["i"],IonRefresherContent:i["j"],Tabs:C},computed:{isApp:function(){return this.checkIsApp(S["a"].getPlatform())},showBack:function(){return this.$route.meta.showBack},showWizard:function(){return this.$route.meta.showWizard},refreshAction:function(){return this.$route.meta.refreshAction||!1},modalNotOpen:function(){return!this.$store.state.isModalOpen}},methods:{openWizard:function(){this.$router.push("/wizard")},backButton:function(){this.$router.push("/home")}},mounted:function(){this.$store.getters.formattedLaunchUrl&&this.$store.getters.formattedLaunchUrl.includes(this.$route.path)&&this.$store.commit("setLaunchUrl",null)}};n("57e4");const q=d()(_,[["render",O],["__scopeId","data-v-72cc4640"]]);var D=q,$=Object(c["G"])("data-v-01efd17a");Object(c["t"])("data-v-01efd17a");var T={id:"container"};Object(c["r"])();var A=$((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-refresher-content"),i=Object(c["y"])("ion-refresher"),l=Object(c["y"])("router-view"),u=Object(c["y"])("ion-content"),d=Object(c["y"])("Tabs"),b=Object(c["y"])("ion-page");return Object(c["q"])(),Object(c["e"])(b,{"overflow-scroll":"true",style:a.isApp?"":"max-width:400px; margin:auto;"},{default:$((function(){return[Object(c["h"])(u,{id:"content",fullscreen:!0,forceOverscroll:!0,"scroll-x":!0,"overflow-scroll":!0,style:a.isApp?"":"-webkit-overflow-scrolling: touch;  overflow-y: scroll !important;"},{default:$((function(){return[a.refreshAction?(Object(c["q"])(),Object(c["e"])(i,{key:0,slot:"fixed",onIonRefresh:t[1]||(t[1]=function(e){return a.onRefresh(a.refreshAction,e)})},{default:$((function(){return[Object(c["h"])(o)]})),_:1})):Object(c["f"])("",!0),Object(c["h"])("div",T,[Object(c["h"])(l)])]})),_:1},8,["style"]),Object(c["h"])(d)]})),_:1},8,["style"])})),I=(n("159b"),{methods:{openUpdates:function(){this.$router.push("/updates")},backButton:function(){this.$router.push("/home")},onRefresh:function(e,t){var n=this;Array.isArray(e)?e.forEach((function(e){n.$store.dispatch(e,t)})):this.$store.dispatch(e,t),t.target.complete()}},computed:{isApp:function(){return this.checkIsApp(S["a"].getPlatform())},showBack:function(){return this.$route.meta.showBack},refreshAction:function(){return this.$route.meta.refreshAction||!1}},created:function(){this.$store.dispatch("getHome")},components:{IonContent:i["c"],IonPage:i["h"],IonRefresher:i["i"],IonRefresherContent:i["j"],Tabs:C}});n("c5a9");const R=d()(I,[["render",A],["__scopeId","data-v-01efd17a"]]);var P=R,M={id:"container"};function L(e,t,n,r,s,a){var o=Object(c["y"])("router-view"),i=Object(c["y"])("ion-content"),l=Object(c["y"])("ion-page");return Object(c["q"])(),Object(c["e"])(l,{style:a.isApp?"":"max-width:400px; margin:auto;"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{id:"content",fullscreen:!0,forceOverscroll:!0,"scroll-x":!0,"overflow-scroll":!0,style:a.isApp?"":"-webkit-overflow-scrolling: touch;  overflow-y: auto !important;"},{default:Object(c["D"])((function(){return[Object(c["h"])("div",M,[Object(c["h"])(o)])]})),_:1},8,["style"])]})),_:1},8,["style"])}var N={components:{IonContent:i["c"],IonPage:i["h"]},computed:{isApp:function(){return this.checkIsApp(S["a"].getPlatform())}}};const B=d()(N,[["render",L]]);var U=B,F=Object(c["G"])("data-v-1bd19af9");Object(c["t"])("data-v-1bd19af9");var z={class:"min-h-screen gradient-background relative max-h-screen overflow-y-auto pb-20"},E={class:"w-full relative"},V={key:0,class:"absolute width-8 height-8 bg-red rounded-full top-0 right-0 pointer-events-none",style:{"margin-top":"4px","margin-right":"4px"}},G={class:"absolute top-0 z-0 w-full h-full"},H={class:"text-black font-helvetica-bold text-20 pointer-events-none"},W=Object(c["h"])("br",null,null,-1),Y=Object(c["g"])("Welcome Back "),J={class:"w-full relative pt-4 overflow-y-visible"},K={class:"relative mr-2 width-64 overflow-y-visible"},X={class:"font-helvetica-medium text-black text-16"},Q=Object(c["h"])("div",null," ",-1),Z=Object(c["h"])("div",null," ",-1),ee=Object(c["h"])("div",null," ",-1);Object(c["r"])();var te=F((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("shadow-button"),l=Object(c["y"])("Title"),u=Object(c["y"])("searchbar"),d=Object(c["y"])("grey-container"),b=Object(c["y"])("carousel"),p=Object(c["y"])("home-documents"),h=Object(c["y"])("home-titled-container"),f=Object(c["y"])("home-news"),m=Object(c["y"])("home-congress");return Object(c["q"])(),Object(c["e"])("div",z,[Object(c["h"])("div",E,[Object(c["h"])("div",{class:"bg-transparent absolute top-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;":"height:90px;"},[Object(c["h"])(i,{square:"",styles:"position:relative;",bgClass:"bg-white ml-auto my-auto",onOnClick:a.openNotifications},{default:F((function(){return[Object(c["h"])(o,{src:"/assets/menu/notifications.svg",className:"pointer-events-none"}),e.$store.getters.areNotificationsNotRead&&e.$store.getters.areNotificationsNotRead>0?(Object(c["q"])(),Object(c["e"])("div",V)):Object(c["f"])("",!0)]})),_:1},8,["onOnClick"])],4),Object(c["h"])(o,{src:"/assets/hero.png",class:"w-full z-0 pointer-events-none"}),Object(c["h"])("div",G,[Object(c["h"])(l,{titleClass:"relative pb-4 text-black font-helvetica-bold text-28 block px-8 pt-20 z-10"},{default:F((function(){return[Object(c["h"])("span",H,[Object(c["g"])("Hi "+Object(c["A"])(e.$store.getters.userData.first_name)+", ",1),W]),Y]})),_:1}),Object(c["h"])(u,{classes:"mx-8 mt-4",onSubmit:a.routeToSearch},null,8,["onSubmit"])])]),Object(c["h"])("div",J,[Object(c["h"])(b,{height:"h-24",id:"products-carousel"},{default:F((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(e.$store.getters.homeProducts,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"w-auto-important flex",key:t,onClick:function(t){return a.routeToSegment(e)}},[Object(c["h"])(d,{classes:[0===t?"ml-8 ":""," p-6 mr-4 overflow-y-visible mt-auto pointer-events-none"]},{default:F((function(){return[Object(c["h"])("div",K,[Object(c["h"])(o,{src:e.preview,class:"absolute bottom-0 blend-mode-darken -mb-2"},null,8,["src"])]),Object(c["h"])("span",X,Object(c["A"])(e.name),1)]})),_:2},1032,["classes"])],8,["onClick"])})),128))]})),_:1})]),Object(c["h"])(h,{label:"Documents",path:"/documents"},{default:F((function(){return[Object(c["h"])(b,{id:"documents-carousel",classes:"py-4 -my-4"},{default:F((function(){return[e.$store.getters.showUS?(Object(c["q"])(),Object(c["e"])(p,{key:0,type:"us",title:"US",titleClass:"bg-red text-white px-2 mb-2 mr-auto rounded-6",classes:"ml-8",docs:e.$store.getters.homeDocuments.us},null,8,["docs"])):Object(c["f"])("",!0),Object(c["h"])(p,{type:"my",title:"My Docs",docs:e.$store.getters.homeDocuments.my,classes:e.$store.getters.showUS?"":"ml-8"},null,8,["docs","classes"]),Object(c["h"])(p,{type:"shared",title:"Shared with me",docs:e.$store.getters.homeDocuments.shared},null,8,["docs"]),Q]})),_:1})]})),_:1}),e.$store.getters.homeNews&&e.$store.getters.homeNews.length?(Object(c["q"])(),Object(c["e"])(h,{key:0,label:"News",path:"/news",classes:"overflow-y-visible"},{default:F((function(){return[Object(c["h"])(b,{id:"news-carousel"},{default:F((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(e.$store.getters.homeNews,(function(e,t){return Object(c["q"])(),Object(c["e"])(f,{key:t,index:t,news:e},null,8,["index","news"])})),128)),Z]})),_:1})]})),_:1})):Object(c["f"])("",!0),e.$store.getters.homeCongresses&&e.$store.getters.homeCongresses.length?(Object(c["q"])(),Object(c["e"])(h,{key:1,label:"Congresses",path:"/congresses"},{default:F((function(){return[Object(c["h"])(b,{id:"congresses-carousel",classes:"py-4 -mt-4"},{default:F((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(e.$store.getters.homeCongresses,(function(e,t){return Object(c["q"])(),Object(c["e"])(m,{key:t,index:t,congress:e},null,8,["index","congress"])})),128)),ee]})),_:1})]})),_:1})):Object(c["f"])("",!0),Object(c["x"])(e.$slots,"default",{},void 0,!0)])}));function ne(e,t,n,r,s,a){return Object(c["q"])(),Object(c["e"])("span",{class:n.titleClass},[Object(c["x"])(e.$slots,"default")],2)}var re={props:{label:String,titleClass:[String,Array]},components:{}};const se=d()(re,[["render",ne]]);var ae=se;n("841c");function ce(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-input");return Object(c["q"])(),Object(c["e"])("form",{onSubmit:t[3]||(t[3]=Object(c["F"])((function(){return a.submitSearch&&a.submitSearch.apply(a,arguments)}),["prevent"])),class:"bg-white small-shadow rounded-8 flex items-center z-10 relative px-2 ".concat(n.classes||"")},[Object(c["h"])(o,{src:"/assets/button-icons/search-black.svg",class:"width-24 height-24"}),Object(c["h"])(i,{required:"",class:"mx-2",placeholder:"Search",modelValue:s.search,"onUpdate:modelValue":t[1]||(t[1]=function(e){return s.search=e}),onKeydown:Object(c["E"])(Object(c["F"])(a.submitSearch,["prevent"]),["enter"])},null,8,["modelValue","onKeydown"]),s.search&&s.search.length?(Object(c["q"])(),Object(c["e"])("div",{key:0,onClick:t[2]||(t[2]=function(){return a.cancelValue&&a.cancelValue.apply(a,arguments)}),class:"flex"},[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",class:"my-auto"})])):Object(c["f"])("",!0)],34)}var oe={components:{IonImg:i["d"],IonInput:i["e"]},props:{classes:[String,Array]},data:function(){return{search:""}},created:function(){this.$route.query.string&&this.$route.query.string.length&&(this.search=this.$route.query.string,this.$emit("submit",this.search))},methods:{cancelValue:function(){this.search="",this.$emit("cancel")},submitSearch:function(){this.search&&this.$emit("submit",this.search)}}};const ie=d()(oe,[["render",ce]]);var le=ie,ue={class:"relative cursor-grab"};function de(e,t,n,r,s,a){var o=Object(c["y"])("ion-scroll");return Object(c["q"])(),Object(c["e"])("div",ue,[Object(c["h"])(o,{"overflow-scroll":"false",direction:"x",id:a.computedID,class:[n.height||"",n.classes||"","flex w-full max-w-full overflow-x-auto overflow-y-visible carousel"]},{default:Object(c["D"])((function(){return[Object(c["x"])(e.$slots,"default")]})),_:3},8,["id","class"])])}n("a9e3");var be={components:{IonScroll:i["IonScroll"]},props:{height:[Number,String],classes:[String,Array],id:String},methods:{scrollLeft:function(){}},computed:{computedID:function(){return this.id||"carousel-"+Math.floor(5*Math.random())}},mounted:function(){var e=null;e=this.computedID?document.querySelector("#"+this.computedID):document.querySelector(".carousel");var t,n,r=!1;e&&(e.addEventListener("mousedown",(function(s){r=!0,e.classList.add("active"),t=s.pageX-e.offsetLeft,n=e.scrollLeft})),e.addEventListener("mouseleave",(function(){r=!1,e.classList.remove("active")})),e.addEventListener("mouseup",(function(){r=!1,e.classList.remove("active")})),e.addEventListener("mousemove",(function(s){if(r){s.preventDefault();var a=s.pageX-e.offsetLeft,c=3*(a-t);e.scrollLeft=n-c}})))}};const pe=d()(be,[["render",de]]);var he=pe;function fe(e,t,n,r,s,a){return Object(c["q"])(),Object(c["e"])("div",{class:a.divClass},[Object(c["x"])(e.$slots,"default")],2)}n("99af");var me={props:{squareSize:String,rounded:String,classes:[String,Array],vertical:Boolean},computed:{divClass:function(){return"rounded-".concat(this.rounded||"8"," bg-light-grey flex ").concat(this.vertical?"flex-col justify-between items-center":"justify-between items-baseline"," ").concat(this.squareSize?"width-"+this.squareSize+" height-"+this.squareSize:""," ").concat(this.classes||"")}}};const ge=d()(me,[["render",fe]]);var Oe=ge;function je(e,t,n,r,s,a){var o=Object(c["y"])("ion-img");return Object(c["q"])(),Object(c["e"])("div",{class:a.divClass},[Object(c["h"])("div",{onClick:t[1]||(t[1]=function(){return a.routeToPath&&a.routeToPath.apply(a,arguments)}),class:[n.headClass,"px-8 flex justify-between items-center cursor-pointer pb-4"]},[Object(c["h"])("span",{class:[n.titleClass,"font-helvetica-bold text-black text-20"]},Object(c["A"])(n.label),3),Object(c["h"])(o,{src:"/assets/button-icons/forward.svg",className:"width-12 height-12 pointer-events-none"})],2),Object(c["x"])(e.$slots,"default")],2)}var ve={components:{IonImg:i["d"]},props:{path:String,label:String,pt:String,classes:[String,Array],titleClass:[String,Array],headClass:[String,Array]},computed:{divClass:function(){var e="pt-".concat(this.pt||12," ");return e+=this.classes||"",e}},methods:{routeToPath:function(){this.$router.push(this.path)}}};const ye=d()(ve,[["render",je]]);var xe=ye,we=Object(c["G"])("data-v-15c33845");Object(c["t"])("data-v-15c33845");var ke={class:"news-image w-full overflow-hidden rounded-12 mb-4 container-shadow pointer-events-none"},Ce={class:"font-helvetica-medium text-black text-16"};Object(c["r"])();var Se=we((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-img");return Object(c["q"])(),Object(c["e"])("div",{onClick:t[1]||(t[1]=function(){return a.routeToNews&&a.routeToNews.apply(a,arguments)}),class:[0===n.index?"ml-8 ":"","flex flex-col home-container mr-4"]},[Object(c["h"])("div",ke,[Object(c["h"])(o,{src:n.news.preview,class:"w-full object-cover"},null,8,["src"])]),Object(c["h"])("span",Ce,Object(c["A"])(n.news.title),1)],2)})),_e={components:{IonImg:i["d"]},props:{news:Object,index:Number},methods:{routeToNews:function(){this.$router.push("/news/"+this.news.id)}}};n("9923");const qe=d()(_e,[["render",Se],["__scopeId","data-v-15c33845"]]);var De=qe,$e=Object(c["G"])("data-v-328b0d65");Object(c["t"])("data-v-328b0d65");var Te={class:"congress w-full overflow-hidden rounded-12 flex flex-col justify-between p-6 bg-white elevated-shadow"},Ae={class:"w-full text-black font-helvetica-medium text-16 mb-1 spacing-5 line-28"},Ie={class:"w-full text-grey font-helvetica text-14 mb-0 mb-4 spacing-44 line-24",style:{overflow:"hidden","text-overflow":"ellipsis",display:"-webkit-box","-webkit-line-clamp":"2","line-clamp":"2","-webkit-box-orient":"vertical"}},Re={class:"mr-auto"},Pe={class:"p-1 bg-light-red rounded-6 font-helvetica-medium text-12 text-red"};Object(c["r"])();var Me=$e((function(e,t,n,r,s,a){return Object(c["q"])(),Object(c["e"])("div",{onClick:t[1]||(t[1]=function(){return a.routeToCongress&&a.routeToCongress.apply(a,arguments)}),class:[0===n.index?"ml-8 ":"","home-big-container flex flex-col mr-4 -mt-4 pt-4 pb-4"]},[Object(c["h"])("div",Te,[Object(c["h"])("span",Ae,Object(c["A"])(n.congress.name),1),Object(c["h"])("p",Ie,Object(c["A"])(n.congress.subtitle),1),Object(c["h"])("div",Re,[Object(c["h"])("div",Pe,Object(c["A"])(n.congress.dates),1)])])],2)})),Le={props:{congress:Object,index:Number},methods:{routeToCongress:function(){this.$router.push("/congresses/"+this.congress.id)}}};n("184d");const Ne=d()(Le,[["render",Me],["__scopeId","data-v-328b0d65"]]);var Be=Ne,Ue=Object(c["G"])("data-v-7532fd24");Object(c["t"])("data-v-7532fd24");var Fe={class:"bg-white w-full overflow-hidden rounded-12 flex flex-col justify-between elevated-shadow p-6"};Object(c["r"])();var ze=Ue((function(e,t,n,r,s,a){var o=Object(c["y"])("document-list-item");return Object(c["q"])(),Object(c["e"])("div",{class:[n.classes,"home-big-container flex flex-col mr-4 -mt-4 pt-4 pb-4"]},[Object(c["h"])("div",Fe,[Object(c["h"])("span",{class:[n.titleClass||"text-dark-grey mb-4","py-1 font-helvetica-medium text-16"]},Object(c["A"])(n.title),3),(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.docs,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{small:"",key:t,type:n.type,document:e,actions:e.actions,classes:t>0?"mt-4":""},null,8,["type","document","actions","classes"])})),128))])],2)})),Ee=(n("c96a"),{class:"flex flex-col justify-between items-start pointer-events-none"}),Ve={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},Ge={class:"font-helvetica text-14 text-grey spacing-44 line-24"},He={key:0,class:"font-helvetica text-12 text-grey spacing-44 line-14"};function We(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("rename-modal"),u=Object(c["y"])("delete-modal"),d=Object(c["y"])("int-share-modal"),b=Object(c["y"])("folders-tree-modal");return Object(c["q"])(),Object(c["e"])(c["a"],null,[Object(c["h"])("div",{class:[a.divClass,"w-full flex justify-between items-center py-2 rounded-8"]},[Object(c["h"])("div",{onClick:t[1]||(t[1]=function(){return a.documentAction&&a.documentAction.apply(a,arguments)}),class:"flex justify-start items-center flex-grow"},[Object(c["h"])(i,{rounded:"8",squareSize:"44",bgClass:a.imageBackround,classes:[n.small?"mr-2 ":"mr-4 "," pointer-events-none flex"]},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:a.image,class:"m-auto"},null,8,["src"])]})),_:1},8,["bgClass","classes"]),Object(c["h"])("div",Ee,[Object(c["h"])("span",Ve,Object(c["A"])(a.updatedDocument.label||a.updatedDocument.name||a.updatedDocument.title),1),Object(c["h"])("span",Ge,Object(c["A"])("shared"===n.type?a.updatedDocument.subtitle:a.updatedDocument.size||a.updatedDocument.subtitle)+" "+Object(c["A"])(a.updatedDocument.languages_in_file?" - "+a.updatedDocument.languages_in_file:""),1),a.updatedDocument.code_points?(Object(c["q"])(),Object(c["e"])("span",He,Object(c["A"])(a.updatedDocument.code_points),1)):Object(c["f"])("",!0)])]),a.documentActions&&a.documentActions.length?(Object(c["q"])(),Object(c["e"])("div",{key:0,onClick:t[2]||(t[2]=function(){return a.openDocumentMenu&&a.openDocumentMenu.apply(a,arguments)}),class:"height-44 w-44 flex pl-4 cursor-pointer"},[Object(c["h"])(o,{src:"/assets/button-icons/threedots.svg",class:"width-4 height-18 my-auto ml-auto"})])):Object(c["f"])("",!0)],2),s.isRenameModalOpen?(Object(c["q"])(),Object(c["e"])(l,{key:0,doc:n.document,onOnClose:t[3]||(t[3]=function(e){return a.toggleModal("rename")})},null,8,["doc"])):Object(c["f"])("",!0),s.isDeleteModalOpen?(Object(c["q"])(),Object(c["e"])(u,{key:1,doc:n.document,onOnClose:t[4]||(t[4]=function(e){return a.toggleModal("delete")})},null,8,["doc"])):Object(c["f"])("",!0),s.isIntShareModalOpen?(Object(c["q"])(),Object(c["e"])(d,{key:2,isStorage:s.isStorageShare,doc:n.document,onOnClose:a.closeInternalShare},null,8,["isStorage","doc","onOnClose"])):Object(c["f"])("",!0),Object(c["h"])(b,{open:s.isMoveModalOpen,doc:n.document,onOnClose:t[5]||(t[5]=function(e){return a.toggleModal("move")})},null,8,["open","doc"])],64)}n("9911");function Ye(e,t,n,r,s,a){return Object(c["q"])(),Object(c["e"])("div",{class:a.divClass,style:n.styles||""},[Object(c["x"])(e.$slots,"default")],6)}var Je={props:{bgClass:String,squareSize:[String,Number],rounded:String,classes:[String,Array],styles:[String,Array]},computed:{divClass:function(){var e=this.classes;return"rounded-".concat(this.rounded||"8"," ").concat(this.bgClass||"bg-white"," ").concat(this.squareSize?"width-"+this.squareSize+" height-"+this.squareSize:"")+" flex justify-center items-center overflow-hidden "+e}}};const Ke=d()(Je,[["render",Ye]]);var Xe=Ke,Qe=n("ac9e"),Ze=Object(c["G"])("data-v-7cfe70a6");Object(c["t"])("data-v-7cfe70a6");var et={class:"fixed top-0 left-0 w-full h-full flex justofy-center items-center"},tt=Object(c["h"])("div",{class:"absolute top-0 left-0 bg-black opacity-50 w-full h-full pointer-events-none",style:{"z-index":"10"}},null,-1),nt=Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-22 line-30 text-black mb-1 block"},"Rename folder",-1),rt={class:"mt-2 w-full flex justify-end items-center"},st=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16 spacing-5 line-24 m-auto normal-case"},"Cancel",-1),at=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case"},"Save",-1);Object(c["r"])();var ct=Ze((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-input"),i=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])("div",et,[tt,Object(c["h"])("form",{class:"relative z-10 bg-white rounded-8 p-6 mx-auto ",style:{"min-width":"300px","max-width":"300px"},onSubmit:t[3]||(t[3]=function(){return a.saveName&&a.saveName.apply(a,arguments)})},[nt,Object(c["h"])(o,{type:"text",placeholder:"New name",modelValue:s.name,"onUpdate:modelValue":t[1]||(t[1]=function(e){return s.name=e}),class:"font-helvetica text-16 spacing-5 line-28 text-black my-2 pb-2 border-grey border-b",required:""},null,8,["modelValue"]),Object(c["h"])("div",rt,[Object(c["h"])("div",{class:"bg-white\n            rounded-12 flex justify-center items-center height-56 w-auto px-2 ml-auto normal-case mr-4 shadow-none\n          ",onClick:t[2]||(t[2]=function(){return a.cancel&&a.cancel.apply(a,arguments)})},[st]),Object(c["h"])(i,{type:"submit",class:"rounded-12 flex justify-center items-center height-56 w-auto normal-case",style:{"--padding-start":"0.5rem","--pading-right":"0.5rem"}},{default:Ze((function(){return[at]})),_:1})])],32)])})),ot=n("eba1"),it=n("a43b"),lt={components:{IonButton:i["b"],IonInput:i["e"]},props:{doc:Object},data:function(){return{name:this.doc.title}},methods:{cancel:function(){this.$emit("onClose")},saveName:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(e.preventDefault(),!(t.name&&t.name.length&&t.doc.id)){n.next=9;break}return n.next=4,t.$http({method:"POST",url:it.folders.create+"/"+t.doc.id,data:{name:t.name},loader:!0});case 4:r=n.sent,console.log(r),t.$router.go(),n.next=11;break;case 9:console.error("No folder in route"),t.$toast({message:ot.errors.folderDetail,color:"danger"});case 11:t.$emit("onClose");case 12:case"end":return n.stop()}}),n)})))()}},created:function(){this.name=this.doc.title}};n("cffe");const ut=d()(lt,[["render",ct],["__scopeId","data-v-7cfe70a6"]]);var dt=ut,bt=Object(c["G"])("data-v-8f89d138");Object(c["t"])("data-v-8f89d138");var pt={class:"fixed top-0 left-0 w-full h-full flex justofy-center items-center"},ht=Object(c["h"])("div",{class:"absolute top-0 left-0 bg-black opacity-50 w-full h-full pointer-events-none",style:{"z-index":"10"}},null,-1),ft=Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-22 line-30 text-black mb-1 block"},"Are you sure?",-1),mt=Object(c["h"])("p",{class:"w-full font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mt-2"}," By pressing confirm you will delete ",-1),gt={class:"w-full font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mb-2"},Ot={class:"mt-2 w-full flex justify-end items-center"},jt=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16 spacing-5 line-24 m-auto normal-case"},"Cancel",-1),vt=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case bg-red"},"Confirm",-1);Object(c["r"])();var yt=bt((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])("div",pt,[ht,Object(c["h"])("form",{class:"relative z-10 bg-white rounded-8 p-6 mx-auto flex flex-col",style:{"min-width":"300px","max-width":"300px"},onSubmit:t[2]||(t[2]=function(){return a.deleteDoc&&a.deleteDoc.apply(a,arguments)})},[ft,mt,Object(c["h"])("p",gt," the "+Object(c["A"])(a.type)+' "'+Object(c["A"])(a.name)+'" ',1),Object(c["h"])("div",Ot,[Object(c["h"])("div",{class:"bg-white\n            rounded-12 flex justify-center items-center height-56 w-auto px-2 ml-auto normal-case mr-4 shadow-none\n          ",onClick:t[1]||(t[1]=function(){return a.cancel&&a.cancel.apply(a,arguments)})},[jt]),Object(c["h"])(o,{color:"secondary",type:"submit",class:"rounded-12 flex justify-center items-center height-56 w-auto px-2 normal-case"},{default:bt((function(){return[vt]})),_:1})])],32)])})),xt={components:{IonButton:i["b"]},props:{doc:Object},computed:{name:function(){return this.doc.title},type:function(){return this.doc.type}},methods:{cancel:function(){this.$emit("onClose")},deleteDoc:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(e.preventDefault(),!(t.name&&t.name.length&&t.doc.id)){n.next=23;break}if(r="",n.prev=3,"folder"!==t.doc.type){n.next=10;break}return n.next=7,t.$http({method:"POST",url:it.folders.create+"/"+t.doc.id+"/delete",loader:!0});case 7:r=n.sent,n.next=13;break;case 10:return n.next=12,t.$http({method:"POST",url:it.documents.remove_from_my,loader:!0,data:{id:t.doc.id}});case 12:r=n.sent;case 13:n.next=19;break;case 15:n.prev=15,n.t0=n["catch"](3),console.error(n.t0),n.t0&&n.t0.response&&n.t0.reponse.data?t.$toast({message:n.t0,color:"danger"}):t.$toast({message:ot.errors.folderDetail,color:"danger"});case 19:console.log(r),t.$router.go(),n.next=25;break;case 23:console.error("No folder in route"),t.$toast({message:ot.errors.folderDetail,color:"danger"});case 25:t.$emit("onClose");case 26:case"end":return n.stop()}}),n,null,[[3,15]])})))()}}};n("3c35");const wt=d()(xt,[["render",yt],["__scopeId","data-v-8f89d138"]]);var kt=wt,Ct=Object(c["G"])("data-v-522c87d4");Object(c["t"])("data-v-522c87d4");var St={class:"fixed top-0 left-0 w-full h-full flex justify-center items-center z-10"},_t=Object(c["h"])("div",{class:"absolute top-0 left-0 bg-black opacity-50 w-full h-full pointer-events-none",style:{"z-index":"10"}},null,-1),qt={class:"font-helvetica-bold text-20 spacing-22 line-30 text-black mb-1 block"},Dt=Object(c["h"])("span",{class:"font-helvetica text-12 spacing-38 line-24 text-grey"}," Write the full email or search and select one from the list below. Clicking again a selected user will unselect him. ",-1),$t={key:0,class:"flex flex-col"},Tt=Object(c["h"])("span",{class:"font-helvetica text-12 spacing-38 line-24 text-grey"}," Select a user: ",-1),At={class:"flex flex-col",style:{"max-height":"200px","overflow-y":"auto"}},It={class:"mt-2 w-full flex justify-end items-center"},Rt=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16 spacing-5 line-24 m-auto normal-case "},"Cancel",-1),Pt=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case"},"Share",-1);Object(c["r"])();var Mt=Ct((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-input"),i=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])("div",St,[_t,Object(c["h"])("form",{class:"relative z-10 bg-white rounded-8 p-6 mx-auto dialog-width",onSubmit:t[3]||(t[3]=function(){return a.saveName&&a.saveName.apply(a,arguments)})},[Object(c["h"])("span",qt,"Share "+Object(c["A"])(n.doc.type)+" with",1),Dt,Object(c["h"])(o,{required:"",type:"email",placeholder:"Search or add email",class:"input-filled font-helvetica text-16 spacing-5 line-28 text-black my-2",modelValue:s.email,"onUpdate:modelValue":t[1]||(t[1]=function(e){return s.email=e})},null,8,["modelValue"]),a.updatedList&&a.updatedList.length?(Object(c["q"])(),Object(c["e"])("div",$t,[Tt,Object(c["h"])("div",At,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedList,(function(e){return Object(c["q"])(),Object(c["e"])("div",{key:e,class:["flex flex-row p-2 font-helvetica text-14 spacing-44 line-24 rounded-6 w-full",s.selected===e?"bg-black text-white":""],style:{"border-bottom":"1px solid #ededed"},onClick:function(t){return a.selectUser(e)}},Object(c["A"])(e),11,["onClick"])})),128))])])):Object(c["f"])("",!0),Object(c["h"])("div",It,[Object(c["h"])("div",{class:"bg-white\n            rounded-12 flex justify-center items-center height-56 w-auto px-2 ml-auto normal-case mr-4 shadow-none\n          ",onClick:t[2]||(t[2]=function(){return a.cancel&&a.cancel.apply(a,arguments)})},[Rt]),Object(c["h"])(i,{type:"submit",class:"rounded-12 flex justify-center items-center height-56 w-auto px-2 normal-case"},{default:Ct((function(){return[Pt]})),_:1})])],32)])})),Lt=(n("a434"),{components:{IonButton:i["b"],IonInput:i["e"]},props:{doc:Object,isStorage:Boolean},computed:{recipient:function(){return this.selected&&this.selected.length?this.selected:this.email},updatedList:function(){if(this.selected&&this.selected.length){var e=this.list.map((function(e){return e})),t=this.list.indexOf(this.selected);return t>-1&&e.splice(t,1),e.unshift(this.selected),e}return this.list}},data:function(){return{email:"",selected:"",list:[]}},methods:{cancel:function(){this.$emit("onClose")},getList:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:it.users.shareList,params:{search:e.email}});case 3:n=t.sent,n&&n.length&&(e.list=n),t.next=11;break;case 7:t.prev=7,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:ot.errors.shareList,color:"danger"});case 11:case"end":return t.stop()}}),t,null,[[0,7]])})))()},saveName:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r,s;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(t.email=t.selected,e.preventDefault(),!(t.recipient&&t.recipient.length&&t.doc.id)){n.next=18;break}return r={email:t.recipient,file:t.doc.id},s=it.documents.share,"folder"===t.doc.type&&(s=it.folders.share,delete r.file,r.folder=t.doc.id),t.isStorage&&(s=it.documents.storage_share),n.prev=7,n.next=10,t.$http({method:"POST",url:s,data:r,loader:!0});case 10:t.$toast({message:ot.success.shared+" "+t.recipient,color:"dark"}),n.next=16;break;case 13:n.prev=13,n.t0=n["catch"](7),n.t0&&n.t0.response&&404===n.t0.response.status?t.$toast({message:ot.errors.notInternal,color:"danger",duration:6e3}):n.t0&&n.t0.response&&n.t0.response.data&&t.$toast({message:n.t0.response.data,color:"danger"});case 16:n.next=20;break;case 18:console.error("No folder in route"),t.$toast({message:ot.errors.folderDetail,color:"danger"});case 20:t.$emit("onClose");case 21:case"end":return n.stop()}}),n,null,[[7,13]])})))()},selectUser:function(e){this.selected!==e?(this.selected=e,this.email=e):(this.selected="",this.email===e&&(this.email=""))}},watch:{email:function(e){e&&e.length>3&&this.getList()}}});n("6da2");const Nt=d()(Lt,[["render",Mt],["__scopeId","data-v-522c87d4"]]);var Bt=Nt,Ut=Object(c["G"])("data-v-37f92c80");Object(c["t"])("data-v-37f92c80");var Ft={class:"w-full h-full relative pt-20 gradient-background"},zt={class:"text-grey font-helvetica text-12 inline ml-auto my-auto"};Object(c["r"])();var Et=Ut((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("tree-component"),u=Object(c["y"])("ion-modal");return Object(c["q"])(),Object(c["e"])(u,{animated:"",showBackdrop:"","css-class":"custom-modal","is-open":s.isOpened,onDidDismiss:t[1]||(t[1]=function(t){return e.$emit("onClose")})},{default:Ut((function(){return[Object(c["h"])("div",Ft,[Object(c["h"])("div",{class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;min-height:70px;":"height:90px;min-height:90px;"},[Object(c["h"])(i,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.emitClose},{default:Ut((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"]),Object(c["h"])("span",zt,'You are moving "'+Object(c["A"])(a.computedName)+'"',1)],4),Object(c["h"])(l,{source:n.doc},null,8,["source"])])]})),_:1},8,["is-open"])})),Vt=(n("fb6a"),{class:"flex flex-col px-8 h-full"}),Gt={class:"h-full flex flex-col overflow-y-scroll"},Ht={class:"w-full px-8 pb-4 pt-2 border-t border-grey"};function Wt(e,t,n,r,s,a){var o=Object(c["y"])("Title"),i=Object(c["y"])("tree-folder-component"),l=Object(c["y"])("big-button");return Object(c["q"])(),Object(c["e"])("form",{class:"flex h-full flex-col justify-between",onSubmit:t[2]||(t[2]=function(){return a.onSubmit&&a.onSubmit.apply(a,arguments)})},[Object(c["h"])("div",Vt,[Object(c["h"])(o,{titleClass:"pb-4 text-black font-helvetica-bold text-28 block"},{default:Object(c["D"])((function(){return[Object(c["g"])(" Choose destination: "+Object(c["A"])(a.destination),1)]})),_:1}),Object(c["h"])("div",Gt,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(s.tree,(function(e,t){return Object(c["q"])(),Object(c["e"])(i,{key:t,item:e,source:n.source,folder:s.folder,onSelectFolder:a.selectFolder},null,8,["item","source","folder","onSelectFolder"])})),128)),Object(c["h"])("div",{onClick:t[1]||(t[1]=function(e){return a.selectFolder(null)}),class:"flex h-full"})]),Object(c["h"])("div",Ht,[Object(c["h"])(l,{type:"submit",label:"Move"})])])],32)}var Yt={key:0,class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case"};function Jt(e,t,n,r,s,a){var o=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])(o,{type:n.type||"button",disabled:a.isDisabled,class:[n.bgClass,a.isDisabled||"cursor-pointer","big-button small-shadow rounded-12 flex justify-center items-center height-56 w-full normal-case"],style:n.styles||"",onClick:a.emitClick},{default:Object(c["D"])((function(){return[n.label&&n.label.length?(Object(c["q"])(),Object(c["e"])("span",Yt,Object(c["A"])(n.label),1)):Object(c["f"])("",!0),Object(c["x"])(e.$slots,"default")]})),_:3},8,["type","disabled","class","style","onClick"])}var Kt={emits:["onClick"],components:{IonButton:i["b"]},props:{bgClass:{type:String},styles:{type:String},square:{type:Boolean},disabled:{type:Boolean},type:{type:String},label:{type:String}},computed:{isDisabled:function(){return this.disabled}},methods:{emitClick:function(){this.$emit("onClick")}}};const Xt=d()(Kt,[["render",Jt]]);var Qt=Xt,Zt={class:"flex flex-col "},en={class:"flex justify-between items-center py-4 border-b border-grey"},tn={class:"font-helvetica-bold text-20 spacing-22 line-30 ml-2 text-black"},nn={key:0,class:"flex flex-col h-auto pl-8"};function rn(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("TreeFolderComponent",!0);return Object(c["q"])(),Object(c["e"])("div",Zt,[Object(c["h"])("div",en,[Object(c["h"])("div",{onClick:t[1]||(t[1]=function(e){return a.toggleExpanded()}),class:[a.isExpandable?"":"pointer-events-none","flex justify-start items-center"]},[Object(c["h"])(o,{src:"/assets/button-icons/arrow-".concat(s.isExpanded?"down":"right",".svg"),class:[a.isExpandable?"":"opacity-0",s.isExpanded?"width-17 min-width-17":"width-12 min-width-12"]},null,8,["src","class"])],2),Object(c["h"])("div",{onClick:t[2]||(t[2]=function(e){return a.emitSelect(e,n.item)}),class:[a.isFolderTheSource?"opacity-50 pointer-events-none":"","flex-grow flex justify-between items-center"]},[Object(c["h"])("span",tn,Object(c["A"])(n.item.name),1),Object(c["h"])("div",{class:[a.isSelected?"border-black":"border-grey","bg-white width-24 height-24 rounded-full border p-1"]},[Object(c["h"])("div",{class:[a.isSelected?"bg-black":"bg-white","rounded-full w-full h-full pointer-events-none"]},null,2)],2)],2)]),s.isExpanded?(Object(c["q"])(),Object(c["e"])("div",nn,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.item.folders,(function(e,r){return Object(c["q"])(),Object(c["e"])(i,{key:r,item:e,folder:n.folder,source:n.source,onSelectFolder:t[3]||(t[3]=function(e){return a.emitSelect(null,e)})},null,8,["item","folder","source"])})),128))])):Object(c["f"])("",!0)])}var sn={name:"TreeFolderComponent",components:{IonImg:i["d"]},props:{item:Object,folder:Object,source:Object,classes:[String,Array]},data:function(){return{isExpanded:!1}},computed:{isFolderTheSource:function(){return!(!this.source||"folder"!==this.source.type||this.source.id!==this.item.id)},isExpandable:function(){return!!(this.item&&this.item.folders&&this.item.folders.length)},isSelected:function(){return!!this.folder&&this.folder.id===this.item.id}},methods:{emitSelect:function(e,t){e&&e.target&&e.stopPropagation();var n=t||this.item;this.$emit("selectFolder",n)},toggleExpanded:function(){this.isExpanded=!this.isExpanded}}};const an=d()(sn,[["render",rn]]);var cn=an,on={components:{Title:ae,BigButton:Qt,TreeFolderComponent:cn},props:{source:Object},data:function(){return{isOpened:!1,folder:void 0,tree:[]}},computed:{destination:function(){return this.folder&&this.folder.name?this.folder.name:"My docs"}},methods:{getFileSystem:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:it.folders.list});case 3:n=t.sent,e.tree=n,t.next=11;break;case 7:t.prev=7,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:ot.errors.documents,color:"danger"});case 11:case"end":return t.stop()}}),t,null,[[0,7]])})))()},selectFolder:function(e){this.folder=e},onSubmit:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r,s,a;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return e.preventDefault(),r="",s={},"folder"===t.source.type?(r=it.folders.move,s.destination=t.folder?t.folder.id:null,s.folder=t.source.id):(r=it.documents.move,s.folder=t.folder?t.folder.id:null,s.file=t.source.id),n.prev=4,n.next=7,t.$http({method:"POST",url:r,data:s});case 7:a=n.sent,console.log(a),t.$router.go(),n.next=16;break;case 12:n.prev=12,n.t0=n["catch"](4),console.error(n.t0),"folder"===t.source.type&&n.t0&&n.t0.response&&n.t0.response.data?t.$toast({message:n.t0.response.data,color:"danger"}):t.$toast({message:ot.errors.documents,color:"danger"});case 16:case"end":return n.stop()}}),n,null,[[4,12]])})))()}},mounted:function(){this.getFileSystem()}};const ln=d()(on,[["render",Wt]]);var un=ln,dn={components:{IonButton:i["b"],IonImg:i["d"],IonModal:i["g"],TreeComponent:un},props:{doc:Object,open:Boolean},data:function(){return{isOpened:!1}},computed:{computedName:function(){var e=this.doc.title||this.doc.name;if(e&&e.length>20){var t=e.slice(0,5),n=e.slice(-5);return t+"..."+n}return e||""},isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())}},methods:{emitClose:function(){this.$emit("onClose")}},watch:{open:function(e){this.isOpened=e}}};n("274e");const bn=d()(dn,[["render",Et],["__scopeId","data-v-37f92c80"]]);var pn=bn,hn={components:{SquareContainer:Xe,IonImg:i["d"],RenameModal:dt,DeleteModal:kt,IntShareModal:Bt,FoldersTreeModal:pn},props:{bgClass:String,classes:[String,Array],document:Object,small:Boolean,actions:Array,type:String},data:function(){return{action:null,isStorageShare:!1,isRenameModalOpen:!1,isDeleteModalOpen:!1,isIntShareModalOpen:!1,isMoveModalOpen:!1}},computed:{isApp:function(){return this.checkIsApp(S["a"].getPlatform())},documentActions:function(){var e=this.actions||this.updatedDocument.actions||[];return this.sortActions(e)},divClass:function(){return"".concat(this.bgClass||"bg-white"," ").concat(this.classes||"")},imageBackround:function(){return"folder"===this.document.type?"bg-light-grey2":"bg-light-red"},image:function(){return"folder"===this.document.type?"/assets/button-icons/folder.svg":"/assets/button-icons/pdf.svg"},updatedDocument:function(){return this.document}},methods:{getAppInfo:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,e.$device.getAppInfo();case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)})))()},closeInternalShare:function(){this.isStorageShare=!1,this.toggleModal("internal_share")},getDocumentPath:function(e){var t="";return e.url?t=e.url:e.link?t=e.link:e.file?t=e.file:e.path&&(t=e.path),t},openFile:function(e){var t=this.getDocumentPath(e),n=document.createElement("a");n.target="_blank",n.href=t,document.body.appendChild(n),n.click(),document.body.removeChild(n)},documentAction:function(){this.document&&"folder"===this.document.type?this.$router.push("/documents/folder/".concat(this.document.id,"?type=").concat(this.type)):this.openDocumentMenu()},openActionModal:function(e){this.action=e,this.isActionModalOpen=!0},toggleModal:function(e){switch(e){case"rename":this.isRenameModalOpen=!this.isRenameModalOpen;break;case"delete":this.isDeleteModalOpen=!this.isDeleteModalOpen;break;case"move":this.isMoveModalOpen=!this.isMoveModalOpen;break;case"internal_share":this.isIntShareModalOpen=!this.isIntShareModalOpen;break}},openDocumentMenu:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,r,s,c;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:n=[],r=e.documentActions.map((function(e){return e}))||[],"folder"!==e.document.type&&(n.push({text:"Open",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.isApp){t.next=17;break}return n=e.getDocumentPath(e.updatedDocument),t.prev=2,t.next=5,e.$loading.show();case 5:return t.next=7,e.$docviewer(n,e.updatedDocument.title);case 7:t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](2),console.error(t.t0),e.$toast({message:"Cannot open document",color:"danger"});case 13:return t.next=15,e.$loading.hide();case 15:t.next=18;break;case 17:e.openFile(e.updatedDocument);case 18:case"end":return t.stop()}}),t,null,[[2,9]])})));function n(){return t.apply(this,arguments)}return n}()}),n.push({text:"Download",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.openFile(e.updatedDocument);case 1:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()})),s=0;case 4:if(!(s<r.length)){t.next=28;break}t.t0=r[s],t.next="rename"===t.t0?8:"delete"===t.t0?10:"move"===t.t0?12:"internal_share"===t.t0?14:"storage_internal_share"===t.t0?16:"external_share"===t.t0?18:"save_to_mydocs"===t.t0?20:"move_to_mydocs"===t.t0?22:24;break;case 8:return n.push({text:"Rename",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.toggleModal("rename");case 1:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 10:return n.push({text:"Delete",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.toggleModal("delete");case 1:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 12:return n.push({text:"Move",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.toggleModal("move");case 1:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 14:return n.push({text:"Share internal",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.toggleModal("internal_share");case 1:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 16:return n.push({text:"Share internal",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.isStorageShare=!0,e.toggleModal("internal_share");case 2:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 18:return n.push({text:"Share external",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(n=e.getDocumentPath(e.updatedDocument),!e.isApp){t.next=6;break}return t.next=4,Qe["a"].share({title:"See "+(e.document.title||e.document.name||"this "+e.document.type),url:n,dialogTitle:"Share this "+e.document.type}).catch((function(t){console.ldebug(t),e.$toast({message:"Cannot share document",color:"danger"})}));case 4:t.next=8;break;case 6:window.navigator.clipboard.writeText(n),e.$toast({message:"Link copied!",color:"dark"});case 8:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 20:return n.push({text:"Save in My Docs",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.document||!e.document.id){t.next=15;break}return t.prev=1,t.next=4,e.$http({method:"POST",url:it.documents.save_in_mydocs,data:{folder:null,file:e.document.id}});case 4:n=t.sent,e.$toast({message:"Document saved in 'My Docs'!",color:"dark"}),console.debug(n),t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:ot.errors.file,color:"danger"});case 13:t.next=17;break;case 15:console.error("No id document to save"),e.$toast({message:ot.errors.file,color:"danger"});case 17:case"end":return t.stop()}}),t,null,[[1,9]])})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 22:return n.push({text:"Move To My Docs",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){var n,r;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(n=ot.errors.folderDetail,e.document&&"file"===e.document.type&&(n=ot.errors.file),!e.document||!e.document.id){t.next=17;break}return t.prev=3,t.next=6,e.$http({method:"POST",url:it.folders.move_to_mydocs,data:{type:e.document.type,source:e.document.id}});case 6:r=t.sent,console.debug(r),e.$router.go(),t.next=15;break;case 11:t.prev=11,t.t0=t["catch"](3),console.error(t.t0),e.$toast({message:n,color:"danger"});case 15:t.next=19;break;case 17:console.error("No id document to save"),e.$toast({message:n,color:"danger"});case 19:case"end":return t.stop()}}),t,null,[[3,11]])})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 24:return t.abrupt("break",25);case 25:s++,t.next=4;break;case 28:return t.next=30,i["r"].create({header:e.document.label,animated:!0,cssClass:"document-action-menu",buttons:n});case 30:return c=t.sent,t.next=33,c.present();case 33:case"end":return t.stop()}}),t)})))()}}};n("5921");const fn=d()(hn,[["render",We]]);var mn=fn,gn={components:{DocumentListItem:mn},props:{docs:[Array,Object],title:String,titleClass:[Array,String],classes:[Array,String],type:[String]}};n("4508");const On=d()(gn,[["render",ze],["__scopeId","data-v-7532fd24"]]);var jn=On;function vn(e,t,n,r,s,a){return Object(c["q"])(),Object(c["e"])("div",{onClick:t[1]||(t[1]=function(){return a.emitClick&&a.emitClick.apply(a,arguments)}),class:[n.bgClass||"bg-white","elevated-shadow rounded-8 p-0 flex cursor-pointer"],style:a.computedStyle},[Object(c["x"])(e.$slots,"default")],6)}var yn={components:{},props:{bgClass:String,styles:String,square:Boolean},computed:{computedStyle:function(){var e="";return this.styles&&(e+=this.styles+" "),this.square&&(e+="width:44px;height:44px; "),e}},methods:{emitClick:function(){this.$emit("onClick")}}};const xn=d()(yn,[["render",vn]]);var wn=xn,kn={components:{IonImg:i["d"],Title:ae,Searchbar:le,Carousel:he,GreyContainer:Oe,HomeTitledContainer:xe,ShadowButton:wn,HomeNews:De,HomeCongress:Be,HomeDocuments:jn},data:function(){return{products:[{id:2,name:"Hip",img:"/assets/test/product-vertical-home.svg"},{id:3,name:"Knee",img:"/assets/test/product-square-home.svg"},{id:4,name:"Shoulder",img:"/assets/test/product-vertical-home.svg"}],documents:{},news:[{id:1,img:"/assets/test/news.jpg",text:"1st Surgery using the Trabecular Titanium™ Tibial Plate"},{id:2,img:"/assets/test/news.jpg",text:"1st Surgery using the Trabecular Titanium™ Tibial Plate"}],meded:[{course_id:12,date:"14-15 June",title:"Smart SPACE: your digital companion from pre-op planning to…",category:"course",pillar:{image:"/assets/test/shoulder.jpg",name:"Shoulder"},faculties:[{name:"A",image:"/assets/test/faculty1.jpg"},{name:"B",image:"/assets/test/faculty2.jpg"},{name:"C",image:"/assets/test/faculty3.jpg"}]},{course_id:13,date:"17-18 June",title:"Smart SPACE: your digital companion from pre-op planning to…",category:"limaonlineeducation",pillar:{image:"/assets/test/shoulder.jpg",name:"Shoulder"},faculties:[{name:"A",image:"/assets/test/faculty1.jpg"},{name:"B",image:"/assets/test/faculty2.jpg"},{name:"C",image:"/assets/test/faculty3.jpg"},{name:"D",image:"/assets/test/faculty2.jpg"}]}],congresses:[{title:"AAOS | 2021 Annual Meeting",location:"San Diego, California - USA",date:"31 Aug - 4 Sep"}]}},computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())}},mounted:function(){if(this.$store.dispatch("loginWithToken"),window.pathToReach||window.localStorage.getItem("PATH")){var e=window.pathToReach||window.localStorage.getItem("PATH");this.$router.push(e)}if(this.$store.getters.formattedLaunchUrl){var t=this.$store.getters.formattedLaunchUrl;this.$store.commit("setLaunchUrl",null),this.$router.push(t)}},methods:{openNotifications:function(){this.$router.push({path:"/new",meta:{section:"notifications"}})},updateState:function(e){var t=e.products,n=e.documents,r=e.news,s=e.meded,a=e.congresses;this.products=t||[],this.news=r||[],this.meded=s||[],this.documents=n||{},this.congresses=a||[]},routeToSegment:function(e){var t="/products/".concat(e.id);this.$router.push({path:t})},routeToSearch:function(e){var t=e?"?string="+e:"";this.$router.push("/search"+t)}},watch:{"$store.getters.formattedLaunchUrl":function(){if(this.$store.getters.formattedLaunchUrl){var e=this.$store.getters.formattedLaunchUrl;this.$store.commit("setLaunchUrl",null),this.$router.push(e)}}}};n("8123");const Cn=d()(kn,[["render",te],["__scopeId","data-v-1bd19af9"]]);var Sn=Cn,_n={class:"flex flex-col"},qn={class:"flex flex-start items-center pointer-events-none"},Dn={class:"font-helvetica-medium text-black text-16"},$n={key:0,class:"bg-light-red rounded-6 px-2"},Tn=Object(c["h"])("span",{class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"},"COMING SOON ",-1),An={class:"font-helvetica-bold text-white text-12"},In=Object(c["h"])("hr",{class:"w-full border-t border-grey"},null,-1),Rn=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-14"},"Logout",-1);function Pn(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("ion-list"),u=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(u,{label:e.$route.name,withMargin:"",info:""},{default:Object(c["D"])((function(){return[Object(c["h"])("div",_n,[Object(c["h"])(l,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedList,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:[e.disabled?"opacity-50 pointer-events-none":"cursor-pointer"," flex flex-row justify-between items-center bg-transparent py-2"],key:t,onClick:function(t){return a.routeTo(e.href)}},[Object(c["h"])("div",qn,[Object(c["h"])(i,{bgClass:"bg-light-grey",classes:"mr-2",squareSize:"44"},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:e.img?"/assets/menu/"+e.img:"/assets/"+e.fallbackImg},null,8,["src"])]})),_:2},1024),Object(c["h"])("span",Dn,Object(c["A"])(e.name),1)]),e.disabled?(Object(c["q"])(),Object(c["e"])("div",$n,[Tn])):Object(c["f"])("",!0),e.notifications&&e.notifications>0?(Object(c["q"])(),Object(c["e"])(i,{key:1,bgClass:"bg-red",squareSize:"24",rounded:"6",classes:"flex text-center justify-center items-center"},{default:Object(c["D"])((function(){return[Object(c["h"])("span",An,Object(c["A"])(e.notifications),1)]})),_:2},1024)):Object(c["f"])("",!0)],10,["onClick"])})),128))]})),_:1}),In,Object(c["h"])("div",{onClick:t[1]||(t[1]=function(){return a.logout&&a.logout.apply(a,arguments)}),class:"py-2 flex"},[Rn])])]})),_:1},8,["label"])}var Mn={class:"font-helvetica text-14 text-grey spacing-44 line-24"};function Ln(e,t,n,r,s,a){var o=Object(c["y"])("filters-modal"),i=Object(c["y"])("ion-img"),l=Object(c["y"])("ion-button"),u=Object(c["y"])("shadow-button"),d=Object(c["y"])("Title"),b=Object(c["y"])("contacts-support");return Object(c["q"])(),Object(c["e"])("div",{class:[n.withMargin?"px-8":"",n.noTopSpace?"":"pt-20",n.customGradient||"gradient-background","min-h-screen max-h-screen overflow-y-auto relative pb-24"]},[n.filters?(Object(c["q"])(),Object(c["e"])(o,{key:0,options:a.options,filtersState:a.computedFilters,open:s.isFiltersOpened,onOnClose:a.closeFilters,onOnSubmit:a.onSubmit},null,8,["options","filtersState","open","onOnClose","onOnSubmit"])):Object(c["f"])("",!0),a.isHeaderNecessary?(Object(c["q"])(),Object(c["e"])("div",{key:1,class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;":"height:90px;"},[n.back?(Object(c["q"])(),Object(c["e"])(l,{key:0,type:"button",class:"relative mr-auto my-auto back-button",onClick:a.onBack},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/back.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])):Object(c["f"])("",!0),n.info?(Object(c["q"])(),Object(c["e"])(u,{key:1,square:"",styles:"position:relative;",bgClass:"my-auto bg-white ml-auto",onOnClick:a.routeToWizard},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/info.svg",className:"width-24 height-24 pointer-events-none m-auto"})]})),_:1},8,["onOnClick"])):Object(c["f"])("",!0),n.mail?(Object(c["q"])(),Object(c["e"])(u,{key:2,square:"",styles:"position:relative;",bgClass:"my-auto bg-white ml-auto"},{default:Object(c["D"])((function(){return[Object(c["h"])("a",{href:"mailto:"+n.mail,title:"Mail to info",class:"absolute top-0 left-0 w-full h-full"},null,8,["href"]),Object(c["h"])(i,{src:"/assets/button-icons/mail-black.svg",className:"width-24 height-24 pointer-events-none m-auto"})]})),_:1})):Object(c["f"])("",!0),n.support?(Object(c["q"])(),Object(c["e"])(u,{key:3,square:"",styles:"position:relative;",bgClass:"my-auto bg-white ml-4",onOnClick:a.openSupport,onClick:a.openSupport},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/support.svg",className:"width-24 height-24 pointer-events-none m-auto"})]})),_:1},8,["onOnClick","onClick"])):Object(c["f"])("",!0),n.share?(Object(c["q"])(),Object(c["e"])(u,{key:4,square:"",styles:"position:relative;",bgClass:"my-auto bg-white ml-auto",onOnClick:a.onShare,onClick:a.onShare},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/share-black.svg",className:"width-24 height-24 pointer-events-none m-auto"})]})),_:1},8,["onOnClick","onClick"])):Object(c["f"])("",!0),n.filters?(Object(c["q"])(),Object(c["e"])(u,{key:5,square:"",styles:"position:relative;",bgClass:"my-auto bg-white ml-auto",onOnClick:a.openFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/filters.svg",className:"width-24 height-24 pointer-events-none m-auto"})]})),_:1},8,["onOnClick"])):Object(c["f"])("",!0)],4)):Object(c["f"])("",!0),n.aboveTitle?(Object(c["q"])(),Object(c["e"])("div",{key:2,class:n.withMargin?"":"px-8"},[Object(c["x"])(e.$slots,"above-title",{},(function(){return[Object(c["h"])("span",Mn,Object(c["A"])(n.aboveTitle),1)]}))],2)):Object(c["f"])("",!0),n.label?(Object(c["q"])(),Object(c["e"])(d,{key:3,titleClass:[n.withMargin?"":"px-8","pb-4 text-black font-helvetica-bold text-28 block"]},{default:Object(c["D"])((function(){return[Object(c["g"])(Object(c["A"])(n.label),1)]})),_:1},8,["titleClass"])):Object(c["f"])("",!0),Object(c["x"])(e.$slots,"default"),s.isSupportModalOpen?(Object(c["q"])(),Object(c["e"])(b,{key:4,onOnClose:a.closeSupport},null,8,["onOnClose"])):Object(c["f"])("",!0)],2)}var Nn={class:"w-full h-full relative pt-20 gradient-background"},Bn=Object(c["g"])(" Filters "),Un={class:"flex flex-col px-8",style:{flex:"1","overflow-y":"scroll"}},Fn={class:"w-1/2 font-helvetica text-16 spacing-5 line-28\n            text-dark-grey"},zn={class:"w-full px-8 pb-4"};function En(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("Title"),u=Object(c["y"])("custom-select"),d=Object(c["y"])("big-button"),b=Object(c["y"])("ion-modal");return Object(c["q"])(),Object(c["e"])(b,{animated:"",showBackdrop:"","css-class":"custom-modal","is-open":s.isOpened,onDidDismiss:t[2]||(t[2]=function(t){return e.$emit("onClose")})},{default:Object(c["D"])((function(){return[Object(c["h"])("div",Nn,[Object(c["h"])("div",{class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;min-height:70px;":"height:90px;min-height:90px;"},[Object(c["h"])(i,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.closeFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])],4),Object(c["h"])("form",{class:"flex h-full flex-col justify-between",onSubmit:t[1]||(t[1]=function(){return a.onSubmit&&a.onSubmit.apply(a,arguments)})},[Object(c["h"])(l,{titleClass:"pb-2 text-black font-helvetica-bold text-28 block px-8"},{default:Object(c["D"])((function(){return[Bn]})),_:1}),Object(c["h"])("div",Un,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.arrayOfOptions,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"flex pt-2 pb-1 border-grey border-b w-full justify-between items-center"},[Object(c["h"])("span",Fn,Object(c["A"])(e.json.span),1),Object(c["h"])(u,{name:e.json.name,value:a.computedFilters[e.json.name],options:a.filtersOptions[e.key],placeholder:e.json.placeholder,onOnChange:function(t){return a.updateFilters(t,e.json.name)}},null,8,["name","value","options","placeholder","onOnChange"])])})),128))]),Object(c["h"])("div",zn,[Object(c["h"])(d,{type:"submit",label:"Done"})])],32)])]})),_:1},8,["is-open"])}n("b64b"),n("4de4");function Vn(e,t,n,r,s,a){var o=Object(c["y"])("ion-select-option"),i=Object(c["y"])("ion-select");return Object(c["q"])(),Object(c["e"])("div",{class:["select-wrapper",n.classes]},[Object(c["h"])(i,{interface:"action-sheet",class:"custom-select",cssClass:"custom-select-sheet",name:n.name,value:s.selectValue,disabled:a.isDisabled,placeholder:n.placeholder,onIonChange:a.onChange},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.selectOptions,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,value:e.value},{default:Object(c["D"])((function(){return[Object(c["g"])(Object(c["A"])(e.label),1)]})),_:2},1032,["value"])})),128))]})),_:1},8,["name","value","disabled","placeholder","onIonChange"])],2)}var Gn={components:{IonSelect:i["l"],IonSelectOption:i["m"]},props:{name:{type:String},classes:{type:String},placeholder:{type:String},disabled:{type:Boolean},options:{type:Array},value:{type:[String,Number,Object]},filled:{type:Boolean}},data:function(){return{selectValue:this.value}},computed:{isDisabled:function(){return this.disabled||!1},selectOptions:function(){return this.options.map((function(e){return{value:e.value||e.id,label:e.label||e.name}}))}},methods:{onChange:function(e){this.$emit("onChange",e.target.value)}},watch:{value:function(e){this.selectValue!==e&&(this.selectValue=e)}}};n("e644");const Hn=d()(Gn,[["render",Vn]]);var Wn=Hn,Yn=n("2628"),Jn={components:{Title:ae,BigButton:Qt,IonButton:i["b"],IonImg:i["d"],IonModal:i["g"],CustomSelect:Wn},props:{filtersState:Object,open:Boolean,options:Object},data:function(){return{isOpened:!1,filters:{}}},computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())},computedFilters:function(){return this.filters},filtersOptions:function(){return this.options},arrayOfOptions:function(){var e=this,t=Object.keys(this.filtersOptions),n=t.map((function(e){return{key:e,json:Yn[e]}}));return n.filter((function(t){return e.filtersOptions[t.key]&&e.filtersOptions[t.key].length}))}},methods:{updateFilters:function(e,t){var n=Object.assign({},this.filters);n[t]=e,this.filters=n},closeFilters:function(){this.$emit("onClose")},onSubmit:function(e){e.preventDefault(),this.$emit("onSubmit",this.filters)}},watch:{open:function(e){var t=Object.assign({},this.filtersState);this.filters=t,this.isOpened=e}}};const Kn=d()(Jn,[["render",En]]);var Xn=Kn,Qn=Object(c["G"])("data-v-11d4b136");Object(c["t"])("data-v-11d4b136");var Zn={class:"fixed top-0 left-0 w-full h-full flex justify-center items-center z-20"},er={class:"relative z-10 bg-white rounded-8 p-6 mx-auto ",style:{"min-width":"300px","max-width":"300px"}},tr={class:"flex flex-row justify-between w-full mb-2"},nr=Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-22 line-30 text-black block"}," LimAPP Support ",-1),rr=Object(c["h"])("p",{class:"font-helvetica text-grey text-14 spacing-44 line-24 mb-2"},[Object(c["g"])(" Contact "),Object(c["h"])("a",{href:"limappsupport@limacorporate.com",title:"",class:"text-black"}," limappsupport@limacorporate.com "),Object(c["g"])(" for anything related to the LimApp: Account activation, login or navigation problems, material updates requests. "),Object(c["h"])("br"),Object(c["g"])(" When contacting "),Object(c["h"])("a",{href:"limappsupport@limacorporate.com",title:"",class:"text-black"}," limappsupport@limacorporate.com "),Object(c["g"])(" for any kind of problem always remember to attach screenshot, specify browser and operating system. ")],-1),sr={class:"mt-4 w-full flex justify-center items-center"},ar={class:"relative"},cr=Object(c["h"])("a",{href:"mailto:limappsupport@limacorporate.com",title:"",class:"absolute top-0 left-0 w-full h-full z-10"},null,-1),or=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 ml-4 normal-case"}," LimAPP Support ",-1);Object(c["r"])();var ir=Qn((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])("div",Zn,[Object(c["h"])("div",{class:"absolute top-0 left-0 bg-black opacity-50 w-full h-full",style:{"z-index":"10"},onClick:t[1]||(t[1]=function(){return a.cancel&&a.cancel.apply(a,arguments)})}),Object(c["h"])("div",er,[Object(c["h"])("div",tr,[nr,Object(c["h"])(i,{type:"button",class:"relative ml-auto back-button",style:{top:"-0.5rem",left:"0.5rem"},onClick:a.cancel},{default:Qn((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])]),rr,Object(c["h"])("div",sr,[Object(c["h"])("div",ar,[cr,Object(c["h"])(i,{class:"rounded-12 flex justify-center items-center height-56 w-auto normal-case",style:{"--padding-start":"0.5rem","--pading-right":"0.5rem"}},{default:Qn((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/mail-white.svg",className:"width-24 height-24 pointer-events-none"}),or]})),_:1})])])])])})),lr={components:{IonButton:i["b"]},methods:{cancel:function(){this.$emit("onClose")}}};n("0857");const ur=d()(lr,[["render",ir],["__scopeId","data-v-11d4b136"]]);var dr=ur,br={components:{Title:ae,ShadowButton:wn,IonImg:i["d"],FiltersModal:Xn,IonButton:i["b"],ContactsSupport:dr},props:{label:{type:String},aboveTitle:{type:String},withMargin:{type:Boolean},noTopSpace:{type:Boolean},info:{type:Boolean},support:{type:Boolean},back:{type:[Boolean,String,Object]},mail:{type:String},share:{type:Object},filters:{type:[Boolean,Object]},filtersOptions:{type:Object},customGradient:{type:String}},computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())},isHeaderNecessary:function(){return!!(this.info||this.back||this.filters||this.mail)},computedFilters:function(){return this.filters},options:function(){return this.filtersOptions}},data:function(){return{isFiltersOpened:!1,isSupportModalOpen:!1}},methods:{onBack:function(){this.back&&this.back.length?this.$router.push(this.back):this.$router.back()},onShare:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$share.share(e.share);case 3:t.next=10;break;case 5:t.prev=5,t.t0=t["catch"](0),console.error("Share not supported!",t.t0),window.navigator.clipboard.writeText("".concat(e.share.text,": ").concat(e.share.url)),e.$toast({message:"Link copied!",color:"dark"});case 10:case"end":return t.stop()}}),t,null,[[0,5]])})))()},routeToWizard:function(){this.$router.push("/new?section=updates")},openFilters:function(){this.isFiltersOpened=!0},closeFilters:function(){this.isFiltersOpened=!1},onSubmit:function(e){this.$emit("onFiltersChange",e),this.closeFilters()},openSupport:function(){this.isSupportModalOpen=!0},closeSupport:function(){this.isSupportModalOpen=!1}}};const pr=d()(br,[["render",Ln]]);var hr=pr,fr={components:{Page:hr,SquareContainer:Xe,IonList:i["f"],IonImg:i["d"]},data:function(){return{list:[{name:"Products",href:"/products",img:"products.svg"},{name:"Documents",href:"/documents",img:"documents.svg"},{name:"L.E.A.R.N.",href:"/learn",img:"meded.svg"},{name:"Congresses",href:"/congresses",img:"congresses.svg"},{name:"Sales Training",href:"/training",img:"sales-training.svg"},{name:"News",href:"/news",img:"news.svg"},{name:"What's New",href:"/new",img:"notifications.svg"},{name:"Useful Links",href:"/useful",img:"useful.svg"},{name:"Multimedia",href:"/multimedia",img:"multimedia.svg",disabled:!0},{name:"Privacy",href:"/privacy",img:"privacy.svg"},{name:"Terms and Conditions",href:"/terms?accepted=true",fallbackImg:"button-icons/info.svg"},{name:"Contacts",href:"/contacts",img:"contact.svg"}]}},computed:{updatedList:function(){var e=this,t=this.list.map((function(t){return"/new"===t.href?Object(s["a"])(Object(s["a"])({},t),{},{notifications:e.$store.getters.areNotificationsNotRead}):t}));return t}},methods:{routeTo:function(e){this.$router.push(e)},logout:function(){this.$store.dispatch("logout")}}};const mr=d()(fr,[["render",Pn]]);var gr=mr,Or=Object(c["G"])("data-v-b49bc2a6");Object(c["t"])("data-v-b49bc2a6");var jr={class:"min-h-screen gradient-background relative max-h-screen overflow-y-auto pb-20 flex flex-col"},vr={class:"my-auto flex-grow"},yr={key:0,class:"flex flex-col"},xr=Object(c["g"])(" Search Results "),wr=Object(c["h"])("div",null," ",-1),kr={class:"flex flex-col px-8 mt-4"},Cr={class:"flex flex-start items-center pointer-events-none w-full"},Sr={class:"flex flex-col justify-between py-2"},_r={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},qr={class:"font-helvetica text-grey text-14 spacing-44 line-24"},Dr={class:"flex flex-start items-start pointer-events-none w-full"},$r={class:"flex flex-col justify-between py-2"},Tr={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Ar={class:"font-helvetica text-grey text-14 spacing-44 line-24"},Ir={key:0,class:"bg-light-red rounded-6 px-2 mr-auto"},Rr={class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"},Pr={class:"flex flex-start items-start pointer-events-none w-full"},Mr={class:"flex flex-col justify-between py-2"},Lr={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Nr={key:0,class:"bg-light-red rounded-6 px-2 mr-auto"},Br={class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"},Ur={key:1,class:"flex-grow flex flex-col justify-center items-center"},Fr=Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-2 line-28 mb-2 -mt-8"},"Sorry, no results found :(",-1),zr={class:"font-helvetica text-16 spacing-1 line-24 text-center"},Er=Object(c["h"])("br",null,null,-1),Vr=Object(c["g"])("Please try with another keyword.");Object(c["r"])();var Gr=Or((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("searchbar"),u=Object(c["y"])("Title"),d=Object(c["y"])("section-button"),b=Object(c["y"])("carousel"),p=Object(c["y"])("square-container"),h=Object(c["y"])("document-list-item"),f=Object(c["y"])("detail-section");return Object(c["q"])(),Object(c["e"])("div",jr,[Object(c["h"])("div",{class:"bg-transparent flex px-8 z-10",style:a.isIos?"margin-top:35px;height:70px;min-height:70px;":"height:90px;min-height:90px;"},[a.formattedResultsLength>0?(Object(c["q"])(),Object(c["e"])(i,{key:0,type:"button",class:"relative mr-8 my-auto back-button",onClick:a.cancelResults},{default:Or((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/back.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])):Object(c["f"])("",!0),Object(c["h"])("div",vr,[Object(c["h"])(l,{ref:"searchbar",onSubmit:a.search},null,8,["onSubmit"])])],4),s.isSearched&&s.isSearched.length&&a.formattedResultsLength>0?(Object(c["q"])(),Object(c["e"])("div",yr,[Object(c["h"])(u,{titleClass:[e.withMargin?"":"px-8","pb-4 text-black font-helvetica-bold text-28 block"]},{default:Or((function(){return[xr]})),_:1},8,["titleClass"]),Object(c["h"])(b,{id:"search-carousel",classes:"pt-4 -my-4 pb-8"},{default:Or((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.parsedSections,(function(e,t){return Object(c["q"])(),Object(c["e"])(d,{key:t,active:s.filter===e.value,classes:[0===t?"ml-8":""," mr-4"],label:e.label,onOnClick:function(t){return a.changeSection(e.value)}},null,8,["active","classes","label","onOnClick"])})),128)),wr]})),_:1}),Object(c["h"])("div",kr,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.formattedResults,(function(e,t){return Object(c["q"])(),Object(c["e"])(f,{key:t,label:e.name,count:e.count,noPadding:""},{default:Or((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(e.childs,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"mb-4"},["products"===e.type?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:"flex flex-row justify-between items-center bg-transparent",onClick:function(t){return a.route(e,"products")}},[Object(c["h"])("div",Cr,[Object(c["h"])(p,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 p-2"},{default:Or((function(){return[Object(c["h"])(o,{src:e.preview},null,8,["src"])]})),_:2},1024),Object(c["h"])("div",Sr,[Object(c["h"])("span",_r,Object(c["A"])(e.name),1),Object(c["h"])("span",qr,Object(c["A"])(e.subtitle),1)])])],8,["onClick"])):Object(c["f"])("",!0),"documents"===e.type?(Object(c["q"])(),Object(c["e"])(h,{key:1,document:e},null,8,["document"])):Object(c["f"])("",!0),"congress"===e.type?(Object(c["q"])(),Object(c["e"])("div",{key:2,class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4",onClick:function(t){return a.route(e,"congress")}},[Object(c["h"])("div",Dr,[Object(c["h"])(p,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 overflow-hidden"},{default:Or((function(){return[Object(c["h"])(o,{src:e.preview,class:"h-full w-auto"},null,8,["src"])]})),_:2},1024),Object(c["h"])("div",$r,[Object(c["h"])("span",Tr,Object(c["A"])(e.name),1),Object(c["h"])("span",Ar,Object(c["A"])(e.subtitle),1),e.date?(Object(c["q"])(),Object(c["e"])("div",Ir,[Object(c["h"])("span",Rr,Object(c["A"])(e.date),1)])):Object(c["f"])("",!0)])])],8,["onClick"])):Object(c["f"])("",!0),"news"===e.type?(Object(c["q"])(),Object(c["e"])("div",{key:3,class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4",onClick:function(t){return a.route(e,"news")}},[Object(c["h"])("div",Pr,[Object(c["h"])(p,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 overflow-hidden"},{default:Or((function(){return[Object(c["h"])(o,{src:e.preview,class:"h-full w-auto"},null,8,["src"])]})),_:2},1024),Object(c["h"])("div",Mr,[Object(c["h"])("span",Lr,Object(c["A"])(e.name),1),e.date?(Object(c["q"])(),Object(c["e"])("div",Nr,[Object(c["h"])("span",Br,Object(c["A"])(e.date),1)])):Object(c["f"])("",!0)])])],8,["onClick"])):Object(c["f"])("",!0)])})),128))]})),_:2},1032,["label","count"])})),128))])])):s.isSearched&&s.isSearched.length&&a.formattedResultsLength<=0?(Object(c["q"])(),Object(c["e"])("div",Ur,[Object(c["h"])(o,{src:"assets/icon/no-results.svg",class:"mx-auto mb-16"}),Fr,Object(c["h"])("span",zr,[Object(c["g"])('We couldn’t find any matches for "'+Object(c["A"])(s.isSearched)+'". ',1),Er,Vr])])):Object(c["f"])("",!0)])}));n("5319");function Hr(e,t,n,r,s,a){return Object(c["q"])(),Object(c["e"])("div",{onClick:t[1]||(t[1]=function(){return a.emitClick&&a.emitClick.apply(a,arguments)}),class:[n.classes,a.computedClass," rounded-8 py-2 px-4 flex justify-center items-center whitespace-nowrap"]},[Object(c["h"])("span",{class:[n.red?"text-white":"text-black","font-helvetica-medium spacing-5 line-30 pointer-events-none"]},Object(c["A"])(n.label),3)],2)}var Wr={components:{},emits:["onClick"],props:{classes:[String,Array],active:Boolean,red:Boolean,label:String},computed:{isActive:function(){return this.active},computedClass:function(){return this.red?this.isActive?"bg-red elevated-shadow":"bg-lighter-red":this.isActive?"bg-white elevated-shadow":"bg-light-grey"}},methods:{emitClick:function(e){e.preventDefault(),this.isActive||this.$emit("onClick")}}};const Yr=d()(Wr,[["render",Hr]]);var Jr=Yr,Kr={class:"flex flex-col"},Xr={class:"text-grey font-helvetica-bold text-12"};function Qr(e,t,n,r,s,a){var o=Object(c["y"])("small-title"),i=Object(c["y"])("square-container"),l=Object(c["y"])("separator");return Object(c["q"])(),Object(c["e"])("div",Kr,[Object(c["h"])("div",{class:[n.noPadding?"":"px-8"," flex justify-between items-center"]},[Object(c["h"])(o,{label:n.label,classes:"pb-4 mt-8",noPadding:""},null,8,["label"]),n.count&&n.count>0?(Object(c["q"])(),Object(c["e"])(i,{key:0,bgClass:"bg-light-grey",squareSize:"24",rounded:"6",classes:"flex text-center justify-center items-center mt-2"},{default:Object(c["D"])((function(){return[Object(c["h"])("span",Xr,Object(c["A"])(n.count),1)]})),_:1})):Object(c["f"])("",!0)],2),Object(c["x"])(e.$slots,"default"),n.noSeparator?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])(l,{key:0,withMargin:!n.noPadding,topMargin:""},null,8,["withMargin"]))])}function Zr(e,t,n,r,s,a){return Object(c["q"])(),Object(c["e"])("div",{class:[n.withMargin?"mx-8":"",a.margin," border-b border-grey"]},null,2)}var es={props:{withMargin:Boolean,topMargin:Boolean,bottomMargin:Boolean,noYMargin:Boolean},computed:{margin:function(){return this.topMargin?"mt-8":this.bottomMargin?"mb-8":this.noYMargin?"":"my-8"}}};const ts=d()(es,[["render",Zr]]);var ns=ts;function rs(e,t,n,r,s,a){var o=Object(c["y"])("Title");return Object(c["q"])(),Object(c["e"])(o,{titleClass:[n.classes||"",n.noPadding?"":"px-8"," text-black font-helvetica-bold text-20 block"]},{default:Object(c["D"])((function(){return[Object(c["g"])(Object(c["A"])(n.label),1)]})),_:1},8,["titleClass"])}var ss={props:{label:String,classes:[String,Array],noPadding:Boolean},components:{Title:ae}};const as=d()(ss,[["render",rs]]);var cs=as,os={components:{SmallTitle:cs,Separator:ns,SquareContainer:Xe},props:{noSeparator:Boolean,label:String,noPadding:Boolean,count:[String,Number]}};const is=d()(os,[["render",Qr]]);var ls=is,us={components:{IonImg:i["d"],Searchbar:le,Title:ae,DocumentListItem:mn,SquareContainer:Xe,SectionButton:Jr,Carousel:he,DetailSection:ls},data:function(){return{filter:"*",isSearched:null,results:{}}},computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())},formattedResultsLength:function(){for(var e=Object.keys(this.results),t=0,n=0;n<e.length;n++)t+=this.results[e[n]].length;return t},formattedResults:function(){for(var e=this,t=Object.keys(this.results),n=[],r=function(r){if("*"===e.filter||"*"!==e.filter&&e.filter===t[r]){var a=e.results[t[r]].map((function(e){return Object(s["a"])(Object(s["a"])({},e),{},{type:t[r]})}));a&&a.length&&n.push({name:e.getLabel(t[r]),childs:a,count:e.results[t[r]].length})}},a=0;a<t.length;a++)r(a);return n},parsedSections:function(){for(var e=this,t=Object.keys(this.results).filter((function(t){return!(!e.results[t]||!e.results[t].length)})),n=[{label:"All",value:"*"}],r=0;r<t.length;r++)n.push({label:this.getLabel(t[r]),value:t[r]});return n}},methods:{search:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r,s,a;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,t.$http({method:"GET",url:it.search,params:{term:e}});case 3:for(a in r=n.sent,s=0,r)s+=r[a].length;t.$matomo.trackSearch(e,s),t.results=r,t.isSearched=e,n.next=15;break;case 11:n.prev=11,n.t0=n["catch"](0),console.error(n.t0),t.$toast({message:ot.errors.search,color:"danger"});case 15:case"end":return n.stop()}}),n,null,[[0,11]])})))()},cancelResults:function(){this.$refs.searchbar.cancelValue(),this.isSearched=null,this.results=[]},changeSection:function(e){this.filter=e},getLabel:function(e){return"congress"===e?"Congresses":e.replace(/^\w/,(function(e){return e.toUpperCase()}))},route:function(e,t){switch(t){case"products":this.$router.push("/products/detail/".concat(e.id));break;case"congress":this.$router.push("/congresses/".concat(e.id));break;default:this.$router.push("/home");break}}}};n("225b");const ds=d()(us,[["render",Gr],["__scopeId","data-v-b49bc2a6"]]);var bs=ds,ps={class:"px-8 pt-20 min-h-screen login-background relative max-h-screen overflow-y-auto pb-24"},hs={key:1,class:"relative mr-auto my-auto"},fs={class:"relative flex justify-between items-baseline my-4"},ms=Object(c["g"])(" Sign in "),gs={class:"font-helvetica text-12 spacing-38 line-24 text-grey"},Os={class:"bg-white small-shadow rounded-8 flex items-center z-10 relative px-2 mb-4"},js=Object(c["h"])("a",{class:"font-helvetica text-mid-dark-grey text-12 spacing-1 line-24 mt-4 text-center mx-auto z-10",href:"https://limacorporate.com/en/about-us/privacy-policy.html",title:"LimaCorporate Privacy Policy",target:"_blank"},"Privacy Policy",-1),vs={key:1,class:"flex flex-col"},ys=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case pointer-events-none"}," Login with Azure ",-1),xs=Object(c["h"])("a",{class:"font-helvetica text-mid-dark-grey text-12 spacing-1 line-24 mt-4 text-center mx-auto z-10",href:"https://limacorporate.com/en/about-us/privacy-policy.html",title:"LimaCorporate Privacy Policy",target:"_blank"},"Privacy Policy",-1),ws={class:"bg-white small-shadow rounded-8 flex items-center z-10 relative px-2 mb-4"},ks={class:"width-44 height-44 flex justify-center items-center"},Cs=Object(c["h"])("a",{class:"mt-4 font-helvetica-medium text-14 text-black spacing-44 line-28 mx-auto z-10",title:"Forgot your password link",href:"https://limacorporate.com/it/intranet-login.html?recovery=password",target:"_blank"},"Forgot your password?",-1),Ss=Object(c["h"])("a",{class:"font-helvetica text-mid-dark-grey text-12 spacing-1 line-24 mt-4 text-center mx-auto z-10",href:"https://limacorporate.com/en/about-us/privacy-policy.html",title:"LimaCorporate Privacy Policy",target:"_blank"},"Privacy Policy",-1);function _s(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("Title"),u=Object(c["y"])("ion-input"),d=Object(c["y"])("big-button");return Object(c["q"])(),Object(c["e"])("div",ps,[Object(c["h"])(o,{src:"/assets/login-bg.png",class:"fixed bottom-0 left-0 z-0 w-full"}),Object(c["h"])("div",{class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;":"height:90px;"},[a.backAction?(Object(c["q"])(),Object(c["e"])(i,{key:0,type:"button",class:[a.isIos?"mb-auto":"my-auto"," relative mr-auto my-auto back-button"],onClick:a.onBack},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/back.svg",className:"pointer-events-none"})]})),_:1},8,["class","onClick"])):(Object(c["q"])(),Object(c["e"])("div",hs,[Object(c["h"])(o,{src:"/assets/limapp.svg"})]))],4),Object(c["h"])("div",fs,[Object(c["h"])(l,{titleClass:"pb-4 text-black font-helvetica-bold text-28 block"},{default:Object(c["D"])((function(){return[ms]})),_:1}),Object(c["h"])("span",gs," Step "+Object(c["A"])(s.step)+"/2 ",1)]),1===s.step?(Object(c["q"])(),Object(c["e"])("form",{key:0,class:"flex flex-col",onSubmit:t[2]||(t[2]=function(){return a.next&&a.next.apply(a,arguments)})},[Object(c["h"])("div",Os,[Object(c["h"])(o,{src:"/assets/menu/contact.svg",class:""}),Object(c["h"])(u,{type:"email",placeholder:"Email",modelValue:s.email,"onUpdate:modelValue":t[1]||(t[1]=function(e){return s.email=e}),class:"mx-2",required:""},null,8,["modelValue"])]),Object(c["h"])(d,{label:"Next",type:"submit"}),js],32)):Object(c["f"])("",!0),2===s.step&&s.isAzureMail?(Object(c["q"])(),Object(c["e"])("div",vs,[Object(c["h"])(i,{type:"button",class:"relative bg-azure small-shadow rounded-12 flex justify-center items-center height-56 w-full normal-case",onClick:a.loginWithAzure},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/azure.svg",class:"absolute left-0 ml-4 pointer-events-none"}),ys]})),_:1},8,["onClick"]),xs])):Object(c["f"])("",!0),2!==s.step||s.isAzureMail?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])("form",{key:2,class:"flex flex-col",onSubmit:t[4]||(t[4]=function(){return a.loginWithPassword&&a.loginWithPassword.apply(a,arguments)})},[Object(c["h"])("div",ws,[Object(c["h"])("div",ks,[Object(c["h"])(o,{src:"/assets/button-icons/lock.svg",class:"width-24 height-24"})]),Object(c["h"])(u,{type:"password",placeholder:"Password",modelValue:s.password,"onUpdate:modelValue":t[3]||(t[3]=function(e){return s.password=e}),class:"mx-2",required:""},null,8,["modelValue"])]),Object(c["h"])(d,{label:"Sign in",type:"submit"}),Cs,Ss],32))])}var qs=n("7dc5"),Ds={components:{IonInput:i["e"],IonImg:i["d"],Title:ae,BigButton:Qt,IonButton:i["b"]},data:function(){return{email:"",password:"",step:1,isAzureMail:!1}},computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())},backAction:function(){return this.step>1}},created:function(){this.$store.getters.loggedIn&&this.$store.dispatch("alreadyLoggedRouting"),this.$route.query.token&&"web"===S["a"].getPlatform()&&(window.azureToken=this.$route.query.token,window.localStorage.setItem("JWT",this.$route.query.token),this.$store.dispatch("loginWithToken"))},methods:{onBack:function(){this.step=1},loginWithPassword:function(e){e.preventDefault(),this.$store.dispatch("login",{username:this.email,password:this.password})},loginWithAzure:function(){return Object(a["a"])(regeneratorRuntime.mark((function e(){var t,n;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:t=qs.mode,n=it.baseUrl[t]+it.auth.azureLogin,window.open(n,"_system");case 3:case"end":return e.stop()}}),e)})))()},next:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(e.preventDefault(),!t.email||!t.email.length){n.next=16;break}return n.prev=2,n.next=5,t.$http({method:"GET",url:it.auth.loginCheck,params:{email:t.email}});case 5:r=n.sent,t.isAzureMail=r,t.step=2,n.next=14;break;case 10:n.prev=10,n.t0=n["catch"](2),console.error(n.t0),t.$toast({message:ot.errors.checkEmail,color:"danger"});case 14:n.next=17;break;case 16:t.$toast({message:ot.errors.noEmail,color:"danger"});case 17:case"end":return n.stop()}}),n,null,[[2,10]])})))()}},watch:{"this.$route.query":function(e){console.debug("QUERY",e)}}};const $s=d()(Ds,[["render",_s]]);var Ts=$s,As={class:"flex flex-start items-start pointer-events-none px-8 w-full"},Is={class:"flex flex-col justify-between py-2"},Rs={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Ps={class:"font-helvetica text-grey text-14 spacing-44 line-24"};function Ms(e,t,n,r,s,a){var o=Object(c["y"])("square-container"),i=Object(c["y"])("ion-list"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{label:"Useful Links",back:"/menu"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.linksArray,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4",key:t,onClick:function(t){return a.openLink(e.link)}},[Object(c["h"])("div",As,[Object(c["h"])(o,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 overflow-hidden bg-no-repeat bg-cover bg-center border border-black",styles:"background-image:url('".concat(e.image,"')")},null,8,["styles"]),Object(c["h"])("div",Is,[Object(c["h"])("span",Rs,Object(c["A"])(e.title),1),Object(c["h"])("span",Ps,Object(c["A"])(e.formattedLink),1)])])],8,["onClick"])})),128))]})),_:1})]})),_:1})}var Ls={components:{Page:hr,IonList:i["f"],SquareContainer:Xe},data:function(){return{links:[]}},computed:{linksArray:function(){var e=this;return this.links&&this.links.length?this.links.map((function(t){return Object(s["a"])(Object(s["a"])({},t),{},{formattedLink:e.cutLink(t.link)})})):this.links}},created:function(){this.getUsefulLinks()},methods:{cutLink:function(e){return e&&e.length>30?e.substring(0,30)+"...":e},openLink:function(e){window.open(e)},getUsefulLinks:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:it.usefulLinks,params:{}});case 3:n=t.sent,e.links=n,t.next=11;break;case 7:t.prev=7,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:ot.errors.usefulLinks,color:"danger"});case 11:case"end":return t.stop()}}),t,null,[[0,7]])})))()}}};const Ns=d()(Ls,[["render",Ms]]);var Bs=Ns;function Us(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("slider");return a.formattedSlides&&a.formattedSlides.length?(Object(c["q"])(),Object(c["e"])(i,{key:0,slides:a.formattedSlides,pager:!0,onOnEnd:a.routeHome},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])("div",{class:"flex flex-col flex flex-grow pointer-events-none",id:t.image},[Object(c["h"])(o,{src:t.image},null,8,["src"])],8,["id"])]})),_:1},8,["slides","onOnEnd"])):Object(c["f"])("",!0)}var Fs={class:"flex flex-col relative gradient-background min-h-screen"},zs={class:"px-8",style:{"margin-top":"150%"}},Es={key:0,class:"flex justify-between  items-center px-8"};function Vs(e,t,n,r,s,a){var o=Object(c["y"])("ion-slide"),i=Object(c["y"])("ion-slides"),l=Object(c["y"])("ion-img"),u=Object(c["y"])("ion-button"),d=Object(c["y"])("big-button");return Object(c["q"])(),Object(c["e"])("div",Fs,[Object(c["h"])(i,{mode:"ios",ref:"slides",pager:"true",style:{position:"absolute",top:"0",left:"0",width:"100%","z-index":"0"},options:s.slideOpts,onIonSlideNextEnd:a.onNextEnd,onIonSlidePrevEnd:a.onPrevEnd},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.computedSlides,(function(t,n){return Object(c["q"])(),Object(c["e"])(o,{key:n},{default:Object(c["D"])((function(){return[Object(c["x"])(e.$slots,"default",{item:t})]})),_:2},1024)})),128))]})),_:1},8,["options","onIonSlideNextEnd","onIonSlidePrevEnd"]),Object(c["h"])("div",zs,[n.back?(Object(c["q"])(),Object(c["e"])("div",Es,[a.activeSlide>0?(Object(c["q"])(),Object(c["e"])(u,{key:0,type:"button",class:"mr-4 relative elevated-shadow text-black z-10 ",style:{"--background":"transparent"},onClick:a.previousSlide},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{src:"/assets/button-icons/back.svg",class:"pointer-events-none",style:{visibility:"visible",width:"14px",height:"14px"}})]})),_:1},8,["onClick"])):Object(c["f"])("",!0),Object(c["h"])(d,{label:a.buttonLabel,onOnClick:a.buttonClick},null,8,["label","onOnClick"]),a.activeSlide>0?(Object(c["q"])(),Object(c["e"])(u,{key:1,type:"button",class:"pointer-events-none opacity-0 ml-4 elevated-shadow",style:{"--background":"transparent"},onClick:a.previousSlide},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{src:"/assets/button-icons/back.svg",class:"pointer-events-none"})]})),_:1},8,["onClick"])):Object(c["f"])("",!0)])):(Object(c["q"])(),Object(c["e"])(d,{key:1,label:a.buttonLabel,onOnClick:a.buttonClick},null,8,["label","onOnClick"]))])])}var Gs={components:{IonSlide:i["n"],IonSlides:i["o"],IonImg:i["d"],IonButton:i["b"],BigButton:Qt},props:{slides:{type:Array},finalLabel:{type:String},mainButtonLabel:{type:String},back:{type:Boolean},url:{type:String}},data:function(){return{active:0,slideOpts:{initialSlide:0,speed:400}}},computed:{computedSlides:function(){return this.slides},activeSlide:function(){return this.active},isLastSlide:function(){return this.active===this.slides.length-1},buttonLabel:function(){return this.isLastSlide?this.finalLabel||"Lets’s start":this.mainButtonLabel||"Next"}},methods:{onClose:function(){this.$router.back()},previousSlide:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,e.$refs.slides.$el.getSwiper();case 2:n=t.sent,n.slidePrev();case 4:case"end":return t.stop()}}),t)})))()},buttonClick:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.isLastSlide||!e.url){t.next=4;break}e.$router.push(e.url),t.next=12;break;case 4:if(!e.isLastSlide){t.next=8;break}e.$emit("onEnd"),t.next=12;break;case 8:return t.next=10,e.$refs.slides.$el.getSwiper();case 10:n=t.sent,n.slideNext();case 12:case"end":return t.stop()}}),t)})))()},onNextEnd:function(){this.active=this.active+1},onPrevEnd:function(){this.active=this.active-1}}};const Hs=d()(Gs,[["render",Vs]]);var Ws=Hs,Ys={components:{Slider:Ws,IonImg:i["d"]},data:function(){return{slides:[]}},computed:{formattedSlides:function(){return this.slides}},mounted:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:it.users.onBoarding});case 3:n=t.sent,e.slides=n,e.$store.commit("setOnboarding",!1),t.next=13;break;case 8:t.prev=8,t.t0=t["catch"](0),console.error(t.t0),e.$router.push("/home"),e.$toast({message:ot.errors.onboarding,color:"danger"});case 13:case"end":return t.stop()}}),t,null,[[0,8]])})))()},methods:{routeHome:function(){this.$store.getters.gotUpdatesToShow?this.$app.$router.push("/new/update/"+this.$store.getters.gotUpdatesToShow):this.$router.push("/home")}}};const Js=d()(Ys,[["render",Us]]);var Ks=Js,Xs={class:" pt-20 min-h-screen login-background relative max-h-screen overflow-y-auto pb-24"},Qs={class:"flex relative mr-auto my-auto"},Zs={class:"px-8 relative flex flex-col justify-between items-baseline my-4"},ea=Object(c["g"])(" Terms and conditions "),ta={key:0,class:"font-helvetica text-12 spacing-38 line-24 text-grey"},na={class:"flex justify-start items-center z-10 relative mb-4"},ra=Object(c["h"])("span",{class:"font-helvetica text-14 spacing-38 line-24 ml-4 text-grey"}," I accept the terms and conditions ",-1),sa={key:1,class:"px-8"};function aa(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("Title"),u=Object(c["y"])("Terms"),d=Object(c["y"])("ion-toggle"),b=Object(c["y"])("big-button");return Object(c["q"])(),Object(c["e"])("div",Xs,[Object(c["h"])("div",{class:"px-8 bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;":"height:90px;"},[Object(c["h"])("div",Qs,[a.accepted?(Object(c["q"])(),Object(c["e"])(i,{key:0,type:"button",class:"relative back-button",onClick:a.back},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/back.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])):Object(c["f"])("",!0),Object(c["h"])(o,{src:"/assets/limapp.svg"})])],4),Object(c["h"])("div",Zs,[Object(c["h"])(l,{titleClass:"pb-2 text-black font-helvetica-bold text-28 block"},{default:Object(c["D"])((function(){return[ea]})),_:1}),a.accepted?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])("span",ta," Accept to continue "))]),Object(c["h"])("div",{class:[a.accepted?"pb-4":"pb-24","relative z-10 bg-transparent"]},[Object(c["h"])(u)],2),a.accepted?(Object(c["q"])(),Object(c["e"])("div",sa,[Object(c["h"])(b,{label:"Back",type:"button",onOnClick:a.back},null,8,["onOnClick"])])):(Object(c["q"])(),Object(c["e"])("form",{key:0,class:"flex flex-col fixed px-8 py-8 w-full z-10 bg-white rounded-32 top-shadow",style:{bottom:"-1px"},onSubmit:t[1]||(t[1]=function(){return a.resolveRouting&&a.resolveRouting.apply(a,arguments)})},[Object(c["h"])("div",na,[Object(c["h"])(d,{mode:"ios",color:"primary",checked:s.areAccepted,onIonChange:a.updateAccepted},null,8,["checked","onIonChange"]),ra]),Object(c["h"])(b,{disabled:!s.areAccepted,label:"Next",type:"submit"},null,8,["disabled"])],32))])}var ca={class:"flex flex-col justify-start items-start pt-4"};function oa(e,t,n,r,s,a){var o=Object(c["y"])("ion-img");return Object(c["q"])(),Object(c["e"])("div",ca,[Object(c["h"])(o,{src:"/assets/terms/0001.jpg",className:"pointer-events-none"}),Object(c["h"])(o,{src:"/assets/terms/0002.jpg",className:"pointer-events-none mt-2"}),Object(c["h"])(o,{src:"/assets/terms/0003.jpg",className:"pointer-events-none mt-2"}),Object(c["h"])(o,{src:"/assets/terms/0004.jpg",className:"pointer-events-none mt-2"}),Object(c["h"])(o,{src:"/assets/terms/0005.jpg",className:"pointer-events-none mt-2"}),Object(c["h"])(o,{src:"/assets/terms/0006.jpg",className:"pointer-events-none mt-2"})])}var ia={name:"Terms",components:{IonImg:i["d"]}};const la=d()(ia,[["render",oa]]);var ua=la,da={components:{IonToggle:i["p"],IonImg:i["d"],Title:ae,BigButton:Qt,Terms:ua},computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())},accepted:function(){return!!this.$route.query.accepted}},data:function(){return{areAccepted:!1}},methods:{updateAccepted:function(){this.areAccepted=!this.areAccepted},resolveRouting:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return e.preventDefault(),n.prev=1,n.next=4,t.$http({method:"GET",url:it.users.acceptTerms});case 4:t.$store.commit("setNeedToAcceptTerms",!1),n.next=12;break;case 7:return n.prev=7,n.t0=n["catch"](1),console.error(n.t0),t.$toast({message:ot.errors.acceptTerms,color:"danger"}),n.abrupt("return");case 12:t.$store.getters.needOnboarding?t.$router.push("/onboarding"):t.$store.getters.gotUpdatesToShow?t.$router.push("/new/update/"+t.$store.getters.gotUpdatesToShow):t.$store.getters.gotNotificationToShow?(r=t.$store.getters.gotNotificationToShow,t.$store.commit("setNotificationToShow",null),t.$router.push(r)):t.$router.push("/home");case 13:case"end":return n.stop()}}),n,null,[[1,7]])})))()},back:function(){this.$router.push("/menu")}}};const ba=d()(da,[["render",aa]]);var pa=ba,ha=Object(c["h"])("div",null," ",-1);function fa(e,t,n,r,s,a){var o=Object(c["y"])("section-button"),i=Object(c["y"])("carousel"),l=Object(c["y"])("Updates"),u=Object(c["y"])("Notifications"),d=Object(c["y"])("notifications-modal"),b=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(b,{label:"What's New",back:"/menu"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{id:"sections-carousel",classes:"pt-4 -my-4 pb-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(s.sections,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,active:a.section===e.path,classes:[0===t?"ml-8":""," mr-4"],label:e.label,onOnClick:function(t){return a.routeToSection(e.path)}},null,8,["active","classes","label","onOnClick"])})),128)),ha]})),_:1}),"updates"===a.section?(Object(c["q"])(),Object(c["e"])(l,{key:0,filters:e.updatedFilters,onUpdateFilters:e.updateFilters},null,8,["filters","onUpdateFilters"])):Object(c["f"])("",!0),"notifications"===a.section?(Object(c["q"])(),Object(c["e"])(u,{key:1,onOnChangeNotification:a.openNotification},null,8,["onOnChangeNotification"])):Object(c["f"])("",!0),null!==s.notificationOpened?(Object(c["q"])(),Object(c["e"])(d,{key:2,notificationID:s.notificationOpened,onOnClose:a.closeNotification},null,8,["notificationID","onOnClose"])):Object(c["f"])("",!0)]})),_:1})}var ma={class:"flex flex-start items-center pointer-events-none w-full"},ga={class:"flex flex-col justify-between py-2"},Oa={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},ja={class:"font-helvetica text-grey text-14 spacing-44 line-24"},va={class:"width-12 height-12 my-auto ml-auto flex justify-center items-center"},ya={key:0,class:"width-8 height-8 bg-red rounded-full"};function xa(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("ion-list");return Object(c["q"])(),Object(c["e"])(l,{class:"bg-transparent px-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.formattedUpdates,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4",key:t,onClick:function(t){return a.openUpdate(e)}},[Object(c["h"])("div",ma,[Object(c["h"])(i,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4"},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:e.preview},null,8,["src"])]})),_:2},1024),Object(c["h"])("div",ga,[Object(c["h"])("span",Oa,Object(c["A"])(e.name),1),Object(c["h"])("span",ja,Object(c["A"])(e.release),1)]),Object(c["h"])("div",va,[e.read?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])("div",ya))])])],8,["onClick"])})),128))]})),_:1})}var wa={components:{IonList:i["f"],IonImg:i["d"],SquareContainer:Xe},data:function(){return{updates:[]}},created:function(){this.getUpdates()},computed:{formattedUpdates:function(){return this.updates}},methods:{openUpdate:function(e){this.$router.push("/new/update/"+e.id)},getUpdates:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,r;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:it.notifications.updates,params:{}});case 3:n=t.sent,e.updates=n,t.next=12;break;case 7:t.prev=7,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:ot.errors.appUpdates,color:"danger"}),e.$store.getters.gotNotificationToShow?(r=e.$store.getters.gotNotificationToShow,e.$store.getters.gotNotificationToShow&&e.$store.commit("setNotificationToShow",null),e.$router.push(r)):e.$router.push("/new?section=updates");case 12:case"end":return t.stop()}}),t,null,[[0,7]])})))()}}};const ka=d()(wa,[["render",xa]]);var Ca=ka,Sa={class:"flex justify-between items-stretch pointer-events-none px-8 w-full"},_a={class:"flex flex-col justify-between py-2"},qa={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Da={class:"width-12 height-12 my-auto ml-auto flex justify-center items-center"},$a={key:0,class:"width-8 height-8 bg-red rounded-full"};function Ta(e,t,n,r,s,a){var o=Object(c["y"])("ion-list");return Object(c["q"])(),Object(c["e"])(o,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedNotifications,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4",key:t,onClick:function(t){return a.openNotification(e)}},[Object(c["h"])("div",Sa,[Object(c["h"])("div",{class:[e.read?"bg-light-grey":"bg-red"," width-4 rounded-2 mr-4"]},null,2),Object(c["h"])("div",_a,[Object(c["h"])("p",qa,Object(c["A"])(e.title),1)]),Object(c["h"])("div",Da,[e.read?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])("div",$a))])])],8,["onClick"])})),128))]})),_:1})}var Aa={components:{IonList:i["f"]},data:function(){return{notifications:[]}},created:function(){this.$store.dispatch("getNotifications")},computed:{updatedNotifications:function(){return this.$store.getters.gotNotifications}},methods:{openNotification:function(e){this.$emit("onChangeNotification",e.id)}}};const Ia=d()(Aa,[["render",Ta]]);var Ra=Ia,Pa={class:"w-full h-full relative pt-20 login-background relative",style:{"min-width":"100%"}},Ma={class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:{height:"90px"}},La={class:"mx-8 flex flex-col relative z-10"},Na={key:0,class:"bg-white rounded-12 relative mr-4 gallery-container elevated-shadow overflow-hidden"},Ba={class:"flex my-8 justify-between items-start"},Ua={key:1,class:"flex"};function Fa(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("Title"),u=Object(c["y"])("big-button"),d=Object(c["y"])("ion-modal");return Object(c["q"])(),Object(c["e"])(d,{animated:"",showBackdrop:"","css-class":"custom-modal","is-open":s.isOpened,onDidDismiss:a.closeNotification},{default:Object(c["D"])((function(){return[Object(c["h"])("div",Pa,[Object(c["h"])(o,{src:"/assets/login-bg.png",class:"fixed bottom-0 left-0 z-0 w-full"}),Object(c["h"])("div",Ma,[Object(c["h"])(i,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.closeNotification},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])]),Object(c["h"])("div",La,[Object(c["h"])(l,{titleClass:"pb-4 text-black font-helvetica-bold text-28 block"},{default:Object(c["D"])((function(){return[Object(c["g"])(Object(c["A"])(a.updatedNotification.title),1)]})),_:1}),a.updatedNotification.preview?(Object(c["q"])(),Object(c["e"])("div",Na,[Object(c["h"])(o,{src:a.updatedNotification.preview||"",class:"h-full w-auto pointer-events-none"},null,8,["src"])])):Object(c["f"])("",!0),Object(c["h"])("div",Ba,[Object(c["h"])("p",{class:"m-0 paragraph font-helvetica text-16 line-24 spacing-1 text-mid-dark-grey",innerHTML:a.updatedNotification.message},null,8,["innerHTML"])]),a.isLink?(Object(c["q"])(),Object(c["e"])("div",Ua,[Object(c["h"])(u,{label:"Read more",onOnClick:a.routeToElement},null,8,["onOnClick"])])):Object(c["f"])("",!0)])])]})),_:1},8,["is-open","onDidDismiss"])}var za={components:{IonImg:i["d"],Title:ae,BigButton:Qt},props:{notificationID:Number},data:function(){return{notification:{},isOpened:!1}},computed:{updatedNotification:function(){return this.notification},isLink:function(){return!!(this.notification&&this.notification.link&&Object.keys(this.notification).length)}},methods:{routeToElement:function(){var e="/".concat("congress"===this.notification.link.type?"congresses":this.notification.link.type).concat(this.notification.link.id?"/"+this.notification.link.id:"");this.$router.push(e)},closeNotification:function(){this.isOpened=!1,this.$emit("onClose")},getNotification:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.notificationID){t.next=14;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:it.notifications.list+"/"+e.notificationID,params:{}});case 4:n=t.sent,e.notification=n,t.next=12;break;case 8:t.prev=8,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:ot.errors.notificationDetail,color:"danger"});case 12:t.next=17;break;case 14:e.$emit("onClose"),console.error("No id notification"),e.$toast({message:ot.errors.notificationDetail,color:"danger"});case 17:case"end":return t.stop()}}),t,null,[[1,8]])})))()}},created:function(){this.notificationID&&this.getNotification()},watch:{updatedNotification:function(e){e&&Object.keys(e).length?this.isOpened=!0:this.isOpened=!1},notificationID:function(e){e&&(this.isOpened=!0,this.getNotification())}}};const Ea=d()(za,[["render",Fa]]);var Va=Ea,Ga={components:{Page:hr,Updates:Ca,Notifications:Ra,NotificationsModal:Va,Carousel:he,SectionButton:Jr},data:function(){return{initSection:"notifications",sections:[{label:"Notifications",path:"notifications"},{label:"App updates",path:"updates"}],notificationOpened:null}},computed:{section:function(){return this.initSection}},created:function(){this.$route.query&&this.$route.query.section&&(this.initSection=this.$route.query.section)},methods:{routeToSection:function(e){this.initSection=e},closeNotification:function(){this.notificationOpened=null,this.$store.dispatch("getNotifications")},openNotification:function(e){this.notificationOpened=e}}};const Ha=d()(Ga,[["render",fa]]);var Wa=Ha;n("1393");function Ya(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("slider");return a.formattedSlides&&a.formattedSlides.length?(Object(c["q"])(),Object(c["e"])(i,{key:0,back:"",pager:!0,slides:a.formattedSlides,url:a.formattedUrl||null,finalLabel:a.formattedUrl?"Discover more":"Close",onOnEnd:a.resolveRouting},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])("div",{class:"flex flex-col flex flex-grow pointer-events-none",id:t.big},[Object(c["h"])(o,{src:t.big},null,8,["src"])],8,["id"])]})),_:1},8,["slides","url","finalLabel","onOnEnd"])):Object(c["f"])("",!0)}var Ja={name:"MatomoManager",methods:{logPage:function(e){console.log(this.$route),this.$matomo.setScreen({name:e,path:this.$route.path}),this.$matomo.trackView()}}};const Ka=Ja;var Xa=Ka,Qa={name:"UpdateWizard",components:{Slider:Ws,IonImg:i["d"]},mixins:[Xa],data:function(){return{results:{}}},computed:{formattedSlides:function(){return this.results.gallery||[]},formattedUrl:function(){return this.results&&this.results.url?this.results.url.split("limasales:/")[1]:null}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=17;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:it.notifications.updates+"/"+e.$route.params.id});case 4:n=t.sent,e.results=n,e.$store.getters.gotUpdatesToShow&&e.$store.commit("setAppUpdates",null),e.logPage("Last App Update"),t.next=15;break;case 10:t.prev=10,t.t0=t["catch"](1),console.error(t.t0),e.$router.push("/home"),e.$toast({message:ot.errors.updates,color:"danger"});case 15:t.next=18;break;case 17:e.resolveRouting();case 18:case"end":return t.stop()}}),t,null,[[1,10]])})))()},methods:{resolveRouting:function(){if(this.$store.getters.gotNotificationToShow){var e=this.$store.getters.gotNotificationToShow;this.$store.getters.gotNotificationToShow&&this.$store.commit("setNotificationToShow",null),this.$router.push(e)}else this.$router.push("/new?section=updates")}}};const Za=d()(Qa,[["render",Ya]]);var ec=Za,tc=Object(c["h"])("div",null," ",-1),nc={class:"flex px-8"};function rc(e,t,n,r,s,a){var o=Object(c["y"])("section-button"),i=Object(c["y"])("carousel"),l=Object(c["y"])("multimedia-images"),u=Object(c["y"])("multimedia-videos"),d=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(d,{label:"Multimedia",back:"",filters:s.filters,filtersOptions:a.options,onOnFiltersChange:a.updateFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{id:"sections-carousel",classes:"pt-4 -my-4 pb-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(s.sections,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,active:s.section===e.path,classes:[0===t?"ml-8":""," mr-4"],label:e.label,onOnClick:function(t){return a.changeSection(e.path)}},null,8,["active","classes","label","onOnClick"])})),128)),tc]})),_:1}),Object(c["h"])("div",nc,["images"===s.section?(Object(c["q"])(),Object(c["e"])(l,{key:0,images:a.updatedImages},null,8,["images"])):Object(c["f"])("",!0),"videos"===s.section?(Object(c["q"])(),Object(c["e"])(u,{key:1,videos:a.updatedVideos},null,8,["videos"])):Object(c["f"])("",!0)])]})),_:1},8,["filters","filtersOptions","onOnFiltersChange"])}var sc={class:"flex flex-wrap w-full -mx-2"},ac={class:"w-full mx-2 squared pointer-events-none bg-light-grey rounded-8 relative overflow-hidden"};function cc(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("image-modal");return Object(c["q"])(),Object(c["e"])("div",sc,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedGallery,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"flex w-1/3 mb-4",onClick:function(e){return a.openImage(t)}},[Object(c["h"])("div",ac,[Object(c["h"])(o,{src:e,class:"w-full absolute"},null,8,["src"])])],8,["onClick"])})),128)),Object(c["h"])(i,{open:s.isOpenImage,gallery:a.bigGallery,onOnClose:a.closeImage},null,8,["open","gallery","onOnClose"])])}var oc={class:"w-full h-full relative pt-20 bg-black flex justify-center items-center"},ic={class:"bg-black absolute top-0 left-0 flex px-8 w-full z-10",style:{height:"90px"}},lc=Object(c["h"])("img",{src:"/assets/button-icons/close-white.svg",className:"pointer-events-none"},null,-1),uc={class:"flex w-full h-full"};function dc(e,t,n,r,s,a){var o=Object(c["y"])("ion-button"),i=Object(c["y"])("ion-img"),l=Object(c["y"])("ion-slide"),u=Object(c["y"])("ion-slides"),d=Object(c["y"])("ion-modal");return Object(c["q"])(),Object(c["e"])(d,{animated:"",showBackdrop:"","css-class":"custom-modal","is-open":a.computedOpen,onDidDismiss:t[1]||(t[1]=function(t){return e.$emit("onClose")})},{default:Object(c["D"])((function(){return[Object(c["h"])("div",oc,[Object(c["h"])("div",ic,[Object(c["h"])(o,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.closeImage},{default:Object(c["D"])((function(){return[lc]})),_:1},8,["onClick"])]),1===a.updatedGallery.length?(Object(c["q"])(),Object(c["e"])(i,{key:0,src:a.updatedGallery[0],class:"w-full my-auto"},null,8,["src"])):(Object(c["q"])(),Object(c["e"])(u,{key:1,ref:"slides",mode:"ios",options:s.options,onIonSlidesDidLoad:a.updateIndex},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedGallery,(function(e,t){return Object(c["q"])(),Object(c["e"])(l,{key:t},{default:Object(c["D"])((function(){return[Object(c["h"])("div",uc,[Object(c["h"])("img",{src:e,class:"w-full mx-auto my-auto"},null,8,["src"])])]})),_:2},1024)})),128))]})),_:1},8,["options","onIonSlidesDidLoad"]))])]})),_:1},8,["is-open"])}var bc={components:{IonImg:i["d"],IonModal:i["g"],IonSlides:i["o"],IonSlide:i["n"],IonButton:i["b"]},props:{open:Boolean,image:Number,gallery:Array,index:Number},data:function(){return{options:{initialSlide:0,speed:400}}},methods:{closeImage:function(){this.$emit("onClose")},updateIndex:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(console.log(e.index),!e.$refs.slides){t.next=6;break}return t.next=4,e.$refs.slides.$el.getSwiper();case 4:n=t.sent,e.index&&n.slideTo(e.index);case 6:case"end":return t.stop()}}),t)})))()}},computed:{computedOpen:function(){return this.open},updatedGallery:function(){return this.gallery&&this.gallery.length?this.gallery.map((function(e){return e.hd?e.hd:e.image?e.image:e.preview?e.preview:e})):[]}}};const pc=d()(bc,[["render",dc]]);var hc=pc,fc={components:{ImageModal:hc,IonImg:i["d"]},props:{images:Array},data:function(){return{image:"",isOpenImage:!1}},computed:{updatedGallery:function(){var e=this.images?this.images.map((function(e){return e.small})):[];return e},bigGallery:function(){var e=this.images?this.images.map((function(e){return e.big})):[];return e}},methods:{openImage:function(e){this.image=e,this.isOpenImage=!0},closeImage:function(){this.isOpenImage=!1,this.image=""}}};n("6bf4");const mc=d()(fc,[["render",cc]]);var gc=mc,Oc={class:"flex flex-col"},jc={class:"image-container pointer-events-none relative bg-black flex justify-center items-center overflow-hidden"},vc={class:"px-8 py-4 font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 m-0 pointer-events-none"},yc={class:"width-121 height-85 rounded-8 mr-2 relative bg-black overflow-hidden pointer-events-none"},xc={class:"font-helvetica-medium text-black text-15 spacing-4 line-24 pointer-events-none"};function wc(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("video-modal");return Object(c["q"])(),Object(c["e"])("div",Oc,[a.updatedVideos&&a.updatedVideos.length?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:"bg-white rounded-12 relative videogallery-container overflow-hidden elevated-shadow mb-4",onClick:t[1]||(t[1]=function(e){return a.openVideo(a.updatedVideos[0])})},[Object(c["h"])("div",jc,[Object(c["h"])(o,{src:a.updatedVideos[0].preview,class:"w-full opacity-50"},null,8,["src"]),Object(c["h"])(o,{src:"/assets/button-icons/play-white.svg",class:"m-auto absolute z-10"})]),Object(c["h"])("p",vc,Object(c["A"])(a.updatedVideos[0].label),1)])):Object(c["f"])("",!0),(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedVideos,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"flex item-center mb-4",onClick:function(t){return a.openVideo(e)}},[Object(c["h"])("div",yc,[Object(c["h"])(o,{src:e.preview,class:"w-full opacity-50"},null,8,["src"]),Object(c["h"])(o,{src:"/assets/button-icons/play-white.svg",class:"m-auto absolute z-10"})]),Object(c["h"])("span",xc,Object(c["A"])(e.label),1)],8,["onClick"])})),128)),Object(c["h"])(i,{open:s.isVideoOpen,video:s.video,onOnClose:a.closeVideo},null,8,["open","video","onOnClose"])])}var kc={class:"w-full h-full relative pt-20 bg-black flex justify-center items-center"},Cc={class:"bg-black absolute top-0 left-0 flex px-8 w-full z-10",style:{height:"90px"}},Sc={class:"w-full relative",style:{"padding-bottom":"56.25%"}};function _c(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("ion-modal");return Object(c["q"])(),Object(c["e"])(l,{animated:"",showBackdrop:"","css-class":"custom-modal","is-open":s.isOpened,onDidDismiss:t[1]||(t[1]=function(t){return e.$emit("onClose")})},{default:Object(c["D"])((function(){return[Object(c["h"])("div",kc,[Object(c["h"])("div",Cc,[Object(c["h"])(i,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.closeVideo},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close-white.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])]),Object(c["h"])("div",Sc,[Object(c["h"])("iframe",{src:a.videoEmbedUrl,title:"YouTube video player",class:"absolute w-full h-full",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,8,["src"])])])]})),_:1},8,["is-open"])}var qc={components:{IonImg:i["d"],IonModal:i["g"]},props:{open:{type:Boolean},video:{type:Object},direct:{type:Boolean,default:!1}},data:function(){return{isOpened:!1}},methods:{closeVideo:function(){this.$emit("onClose")}},computed:{videoEmbedUrl:function(){if(!this.direct){var e=this.video.url,t=e.split("/"),n=t[t.length-1];return"https://www.youtube.com/embed/"+n}return this.video.url}},watch:{open:function(e){this.isOpened=e}}};const Dc=d()(qc,[["render",_c]]);var $c=Dc,Tc={components:{VideoModal:$c,IonImg:i["d"]},props:{videos:Array},data:function(){return{video:null,isVideoOpen:!1}},computed:{updatedVideos:function(){return this.videos&&this.videos.length&&this.videos.length>1?this.videos.slice(1):this.videos}},methods:{openVideo:function(e){this.video=e,this.isVideoOpen=!0},closeVideo:function(){this.isVideoOpen=!1,this.video=null}}};n("b7e3");const Ac=d()(Tc,[["render",wc]]);var Ic=Ac,Rc={components:{Page:hr,Carousel:he,SectionButton:Jr,MultimediaImages:gc,MultimediaVideos:Ic},data:function(){return{section:"videos",sections:[{label:"Videos",path:"videos"},{label:"Images",path:"images"}],images:[],videos:[],filters:{},filtersOptions:{}}},computed:{updatedImages:function(){return this.images},updatedVideos:function(){return this.videos},options:function(){return this.filtersOptions}},created:function(){this.getMultimedia()},methods:{changeSection:function(e){this.section=e,this.getMultimedia()},updateFilters:function(e){this.filters=Object.assign({},e)},getMultimedia:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:it.multimedia[e.section],params:e.filters});case 3:n=t.sent,e[e.section]=n.list,e.filtersOptions=n.filters,t.next=12;break;case 8:t.prev=8,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:ot.errors.multimedia,color:"danger"});case 12:case"end":return t.stop()}}),t,null,[[0,8]])})))()}},watch:{filters:function(e){this.getMultimedia(e)}}};const Pc=d()(Rc,[["render",rc]]);var Mc=Pc,Lc=Object(c["h"])("a",{class:"font-helvetica text-mid-dark-grey text-12 spacing-1 line-24 mt-4 z-10",href:"https://limacorporate.com/en/about-us/privacy-policy.html",title:"LimaCorporate Privacy Policy",target:"_blank"},"Read the full Privacy Policy",-1);function Nc(e,t,n,r,s,a){var o=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(o,{withMargin:"",label:"Privacy Policy",back:""},{default:Object(c["D"])((function(){return[Object(c["h"])("p",{class:"font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4",innerHTML:a.formattedPrivacy},null,8,["innerHTML"]),Lc]})),_:1})}var Bc={components:{Page:hr},data:function(){return{privacy:'<p><span>This page describes the management methods of the site for the processing of personal data of the users who consult it.</span><br></p><p>This information is given in accordance with Art. 13 of Regulation (EU) 2016/679 to those who interact with the Limacorporate S.p.A. web services, accessible electronically at: limacorporate.com corresponding to the initial page of the site.</p><p>The information is provided only for the limacorporate.com site and not for the other websites that may be consulted by the user via links.</p><h5><b>1. Data controller</b></h5><p>Following consultation of this site, the data relating to identified or identifiable persons may be processed.</p><p>The Data Controller is <b>Limacorporate S.p.A.</b>, based in Via Nazionale, 52 - 33038 Villanova di San Daniele del Friuli, Udine - Italia.</p><h5><b>2. Data Protection Officer</b></h5><p>The Data Controller has designated a Data Protection Officer (DPO) to which the data subjects can turn to for matters concerning the exercise of their rights and to request information on their personal data processed by the Data Controller.</p><p>The Data Protection Officer of Limacorporate S.p.A. can be reached at the registered office of Limacorporate S.p.A., Via Nazionale, 52 - 33038, Villanova di San Daniele del Friuli, Udine - Italia, and at the following contact information: <a href="mailto:dpo@limacorporate.com" title=""><b>dpo@limacorporate.com</b></a>.</p><h5><b>3. Data processing location</b></h5><p>The processing connected with the web services of this site takes place at the aforementioned registered office of the Data Controller or at the premises of the provider of Web Services and are handled exclusively by personnel assigned to the processing, or by individuals assigned to occasional maintenance operations.</p><p>No piece of information stemming from the web service is communicated to third party or disseminated.</p><p>Personal information provided by users applying for information material is used solely to perform the service requested and are communicated to third parties only if necessary for that purpose (shipping service).</p><h5><b>4. Purpose and types of processed data</b></h5><p><i><b>Navigation data</b></i></p><p>The computer systems and the software procedures used to operate this web site acquire, during their normal operation, certain personal data, which transmission is implicit in the use of Internet communication protocols.</p><p>This information is not collected to be necessarily&nbsp;<span>associated</span><span>&nbsp;with&nbsp;</span><span>identified individuals, but, by its very nature could, through processing and association with other data held by third parties, allow users to be identified.</span></p><p>This category comprehend the IP addresses or the domain names of the computers used by the users who connect to the site, the addresses with URI (Uniform Resource Identifier) entry of requested resources, the time of the request, the method used to submit the request to the server, the size of the file obtained in response, the numeric code indicating the status of the response given by the server (success, error, etc.) and other parameters related to the operating system and the IT environment of the user. This information is used only to acquire anonymous statistical information on the use of the site and to check its correct operation and is deleted immediately after processing.&nbsp;</p><p>Data could be used to ascertain responsibility in case of hypothetical cyber crimes to the detriment of the site: with this exception, currently the data on web contacts are not stored more than seven days. </p><p><i><b>Data provided voluntarily by the user</b></i></p><p>The completely optional, explicit and voluntary sending of emails to the addresses listed on this site entails the subsequent acquisition of the address of the sender, necessary to comply with the requests, as well as possible other personal information included in the message. For this information no unauthorized communication to third parties, or disclosure, is expected.</p><p>Specific summarised information sheets will be progressively included and displayed on the sites page dedicated to particular services on request. For these other processing methods, information regarding the possible knowability by third parties will be provided in advance.</p><p><b><i>Cookies</i></b></p><p>Cookies are small text files that are sent to your computer by the web pages you visit, in order to provide useful information to make the site operate more efficiently and optimally.</p><p>On our site we mainly use technical cookies to manage navigation.</p><p>For more information and details on the use of cookies visit this page:&nbsp;<a href="https://limacorporate.com/en/cookie-policy.html" target=""><u>https://limacorporate.com/en/cookie-policy.html</u></a></p><p><b style="color: inherit;">5. Optional nature of data provision</b><br></p><p>Except as specified for the browsing data, the user is free to provide the personal data listed in information request forms. Failure to provide the data could however prevent users to obtain what they requested.</p><h5><b>6. Communication of the Data </b></h5><p>Data will be accessible by services <span>providers</span><span>&nbsp;</span><span>&nbsp;for the benefit of the Site which may also be located in non-EU Countries. In such case, the transfer of personal data will take place in compliance with articles 45 and 46 of the GDPR;</span></p><h5><b>7. Processing method</b></h5><p>The personal data is processed only for the time strictly necessary to achieve the purposes for which it was collected. </p><p>The Data will be processed both electronically and in paper form but, in any case, minimizing the use of data identifiable to what is necessary for the purposes mentioned above. Specific security measures are observed to prevent data loss, illegal or incorrect use and unauthorized accesses.</p><h5><b>8. Rights of the data subjects</b></h5><p>Users have the right to obtain, at any time, confirmation as to whether or not personal data concerning&nbsp;them exist, to know their content and source, verify that they are correct or obtain their integration, update or rectification. Users also have the right to obtain erasure, anonymization or blocking of data that have been processed unlawfully, as well as the right to object, in any case, on legitimate grounds, to the processing of personal data concerning you. Additionally, in compliance with the terms of the GDPR, users can (a) request the limitation of the processing of personal data in the event that (i) challenges the accuracy of personal data, for the period necessary to verify the accuracy of such personal data; (ii) the processing is unlawful and the user objects to the deletion of personal data and requests instead that its use be limited; (iii) although the data controller no longer needs it for processing, personal data is necessary for the user to ascertain, exercise or defend a right in court; (iv) users have opposed to the treatment pursuant to art. 21, paragraph 1, of the GDPR pending verification of the possible prevalence of the legitimate reasons of the data controller with respect to those of the interested party; (b) oppose at any time to the processing of personal data; (c) request cancellation of personal data concerning him without undue delay; (d) obtain the portability of personal data concerning it; (e) propose a complaint to the Italian Data Protection Authority, the Garante per il trattamento dei dati personali, where the conditions exist.&nbsp;</p><p>Requests should be sent to: Data Controller <b>Limacorporate S.p.A.</b> - Via Nazionale, 52 - 33038 Villanova di San Daniele del Friuli, Udine - Italia - Tel. +39.0432.945511 - Fax +39.0432.945512 or by sending an email to <a href="mailto:legaloffice@limacorporate.com" title=""><b>legaloffice@limacorporate.com</b></a>.</p><h5><b>9. Updates and amendments</b></h5><p>This privacy policy can be amended or updated with prior notification to the users concerned in the event of substantial changes.</p><p>Last Update January 2021</p>'}},computed:{formattedPrivacy:function(){return this.privacy}}};const Uc=d()(Bc,[["render",Nc]]);var Fc=Uc,zc=Object(c["h"])("div",null," ",-1),Ec={class:"flex flex-col px-8 mt-4"},Vc={class:"flex flex-col justify-between"},Gc={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},Hc={class:"font-helvetica text-14 text-grey spacing-44 line-24"};function Wc(e,t,n,r,s,a){var o=Object(c["y"])("section-button"),i=Object(c["y"])("carousel"),l=Object(c["y"])("ion-img"),u=Object(c["y"])("ion-button"),d=Object(c["y"])("contacts-modal"),b=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(b,{support:"",label:"Contacts",back:"/menu",mail:"info@limacorporate.com"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{id:"sections-carousel",classes:"pt-4 -my-4 pb-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.sectionsForCarousel,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,active:s.section===e.path,classes:[0===t?"ml-8":""," mr-4"],label:e.label,onOnClick:function(t){return a.changeSection(e.path)}},null,8,["active","classes","label","onOnClick"])})),128)),zc]})),_:1}),Object(c["h"])("div",Ec,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.sectionToShow.voices,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"flex flex-row pb-4 mb-4 items-center justify-between cursor-pointer",onClick:function(t){return a.openModal(e)}},[Object(c["h"])("div",Vc,[Object(c["h"])("span",Gc,Object(c["A"])(e.title),1),Object(c["h"])("span",Hc,Object(c["A"])(e.subtitle),1)]),Object(c["h"])(u,{type:"button",class:"relative my-auto ml-auto pointer-events-none transparent-button"},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{src:"/assets/button-icons/back.svg",className:"pointer-events-none width-17 height-17 rotate-180"})]})),_:1})],8,["onClick"])})),128))]),a.subsidiary?(Object(c["q"])(),Object(c["e"])(d,{key:0,subsidiary:a.subsidiary,onOnClose:a.closeSubsidiary},null,8,["subsidiary","onOnClose"])):Object(c["f"])("",!0)]})),_:1})}n("7db0");var Yc={class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:{height:"90px"}},Jc={class:"mx-8 flex flex-col relative z-10"},Kc={class:"flex flex-col mb-4"},Xc=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24 mb-2"},"Address",-1),Qc={class:"flex flex-col"},Zc={key:0,class:"relative flex mb-4"},eo={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},to={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},no=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," Phone ",-1),ro={key:1,class:"relative flex mb-4"},so={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},ao={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},co=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," Fax ",-1),oo={key:2,class:"relative flex mb-4"},io={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},lo={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},uo=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," E-mail ",-1);function bo(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("Title"),u=Object(c["y"])("square-container"),d=Object(c["y"])("ion-modal");return Object(c["q"])(),Object(c["e"])(d,{animated:"",showBackdrop:"","css-class":"custom-modal no-modal-shadow","is-open":s.isOpened,onDidDismiss:a.closeSubsidiary},{default:Object(c["D"])((function(){return[Object(c["h"])("div",{class:"w-full h-full relative pt-20 gradient-background relative",style:[{"min-width":"100%"},e.isIos?"margin-top:35px":""]},[Object(c["h"])("div",Yc,[Object(c["h"])(i,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.closeSubsidiary},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])]),Object(c["h"])("div",Jc,[Object(c["h"])(l,{titleClass:"pb-4 text-black font-helvetica-bold text-28 block"},{default:Object(c["D"])((function(){return[Object(c["g"])(Object(c["A"])(a.updatedSubsidiary.title),1)]})),_:1}),Object(c["h"])("div",Kc,[Xc,Object(c["h"])("p",{class:"m-0 paragraph font-helvetica text-16 text-mid-dark-grey spacing-1 line-24",innerHTML:a.updatedSubsidiary&&a.updatedSubsidiary.address?a.updatedSubsidiary.address:""},null,8,["innerHTML"])]),Object(c["h"])("div",Qc,[a.updatedSubsidiary&&a.updatedSubsidiary.phone?(Object(c["q"])(),Object(c["e"])("div",Zc,[Object(c["h"])("a",{href:"tel:"+a.updatedSubsidiary.phone,title:"phone",class:"absolute top-0 left-0 w-full h-full"},null,8,["href"]),Object(c["h"])(u,{bgClass:"bg-light-grey",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/phone-black.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",eo,[Object(c["h"])("span",to,Object(c["A"])(a.updatedSubsidiary.phone),1),no])])):Object(c["f"])("",!0),a.updatedSubsidiary&&a.updatedSubsidiary.fax?(Object(c["q"])(),Object(c["e"])("div",ro,[Object(c["h"])(u,{bgClass:"bg-light-grey",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/phone-black.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",so,[Object(c["h"])("span",ao,Object(c["A"])(a.updatedSubsidiary.fax),1),co])])):Object(c["f"])("",!0),a.updatedSubsidiary&&a.updatedSubsidiary.email?(Object(c["q"])(),Object(c["e"])("div",oo,[Object(c["h"])("a",{href:"mailto:"+a.updatedSubsidiary.email,title:"mail to",class:"absolute top-0 left-0 w-full h-full"},null,8,["href"]),Object(c["h"])(u,{bgClass:"bg-light-grey",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/mail-black.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",io,[Object(c["h"])("span",lo,Object(c["A"])(a.updatedSubsidiary.email),1),uo])])):Object(c["f"])("",!0)])])],4)]})),_:1},8,["is-open","onDidDismiss"])}var po={name:"Platformer",computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())}}};const ho=po;var fo=ho,mo={components:{IonImg:i["d"],Title:ae,SquareContainer:Xe},mixins:[fo],props:{subsidiary:Object},data:function(){return{isOpened:!1}},computed:{updatedSubsidiary:function(){return this.subsidiary}},methods:{closeSubsidiary:function(){this.isOpened=!1,this.$emit("onClose")}},watch:{updatedSubsidiary:function(e){e&&Object.keys(e).length?this.isOpened=!0:this.isOpened=!1}}};n("fc65");const go=d()(mo,[["render",bo]]);var Oo=go,jo={components:{Page:hr,Carousel:he,SectionButton:Jr,ContactsModal:Oo},data:function(){return{section:0,subsidiaryOpened:null,sections:[{id:1,title:"LimaCorporate",subsidiaries:[{image:"/assets/icon/italy.svg",title:"Limacorporate S.p.A.",location:"Udine, Italy",contacts:{address:"Via Nazionale, 52 <br/> 33038 Villanova di San Daniele del Friuli <br/> Udine - ITALY",phone:"(+39) 0432 945511",fax:"(+39) 0432 945511",mail:"info@limacorporate.com"}},{image:"/assets/icon/italy.svg",title:"Limacorporate S.p.A.",location:"Udine, Italy",contacts:{address:"Via Nazionale, 52 <br/> 33038 Villanova di San Daniele del Friuli <br/> Udine - ITALY",phone:"(+39) 0432 945511",fax:"(+39) 0432 945511",mail:"info@limacorporate.com"}}]},{id:2,title:"Southern America",subsidiaries:[{image:"/assets/icon/italy.svg",title:"Limacorporate S.p.A. AMERICA",location:"Udine, Italy",contacts:{address:"Via Nazionale, 52 <br/> 33038 Villanova di San Daniele del Friuli <br/> Udine - ITALY",phone:"(+39) 0432 945511",fax:"(+39) 0432 945511",mail:"info@limacorporate.com"}},{image:"/assets/icon/italy.svg",title:"Limacorporate S.p.A. AMERICA2",location:"Udine, Italy",contacts:{address:"Via Nazionale, 52 <br/> 33038 Villanova di San Daniele del Friuli <br/> Udine - ITALY",phone:"(+39) 0432 945511",fax:"(+39) 0432 945511",mail:"info@limacorporate.com"}}]}]}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:it.contacts,params:{}});case 3:n=t.sent,e.sections=n,t.next=11;break;case 7:t.prev=7,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:ot.errors.contacts,color:"danger"});case 11:case"end":return t.stop()}}),t,null,[[0,7]])})))()},computed:{formattedSections:function(){return this.sections.map((function(e,t){return Object(s["a"])(Object(s["a"])({},e),{},{id:t})}))},sectionsForCarousel:function(){return this.formattedSections.map((function(e){return{path:e.id,label:e.tab}}))},sectionToShow:function(){var e=this;return this.formattedSections.find((function(t){return t.id===e.section}))},subsidiary:function(){return this.subsidiaryOpened&&Object.keys(this.subsidiaryOpened).length?this.subsidiaryOpened:null}},methods:{changeSection:function(e){this.section=e},openModal:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r,s;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(r=e.id,!r){n.next=15;break}return n.prev=2,n.next=5,t.$http({method:"GET",url:it.contacts+"/"+r,params:{}});case 5:s=n.sent,t.subsidiaryOpened=s,n.next=13;break;case 9:n.prev=9,n.t0=n["catch"](2),console.error(n.t0),t.$toast({message:ot.errors.contactsDetail,color:"danger"});case 13:n.next=17;break;case 15:console.error("No contact id"),t.$toast({message:ot.errors.contactsDetail,color:"danger"});case 17:case"end":return n.stop()}}),n,null,[[2,9]])})))()},closeSubsidiary:function(){this.subsidiaryOpened=null}}};const vo=d()(jo,[["render",Wc]]);var yo=vo,xo={class:"flex flex-start items-center pointer-events-none px-8 w-full"},wo={class:"flex flex-col justify-between py-2"},ko={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Co={class:"font-helvetica text-grey text-14 spacing-44 line-24"};function So(e,t,n,r,s,a){var o=Object(c["y"])("square-container"),i=Object(c["y"])("ion-list"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{back:"/home",label:"News",filters:s.filters,filtersOptions:a.options,onOnFiltersChange:a.updateFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedNews.list,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4 cursor-pointer",key:t,onClick:function(t){return a.routeTo(e)}},[Object(c["h"])("div",xo,[Object(c["h"])(o,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 bg-no-repeat bg-cover bg-center",styles:"background-image:url('".concat(e.preview,"')")},null,8,["styles"]),Object(c["h"])("div",wo,[Object(c["h"])("p",ko,Object(c["A"])(e.title),1),Object(c["h"])("span",Co,Object(c["A"])(e.date),1)])])],8,["onClick"])})),128))]})),_:1})]})),_:1},8,["filters","filtersOptions","onOnFiltersChange"])}var _o={components:{Page:hr,IonList:i["f"],SquareContainer:Xe},data:function(){return{news:{list:[],filters:{}},filtersOptions:{},filters:{year:(new Date).getFullYear()}}},created:function(){this.getNews()},computed:{updatedNews:function(){return this.news},options:function(){return this.filtersOptions}},methods:{routeTo:function(e){var t="/news/".concat(e.id);this.$router.push(t)},updateFilters:function(e){this.filters=Object.assign({},e)},getNews:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,t.$http({method:"GET",url:it.news.list,params:e||t.filters});case 3:r=n.sent,t.news=r,t.filtersOptions=r.filters,n.next=12;break;case 8:n.prev=8,n.t0=n["catch"](0),console.error(n.t0),t.$toast({message:ot.errors.newsList,color:"danger"});case 12:case"end":return n.stop()}}),n,null,[[0,8]])})))()}},watch:{filters:function(e){this.getNews(e)}}};const qo=d()(_o,[["render",So]]);var Do=qo,$o=(n("a4d3"),n("e01a"),Object(c["G"])("data-v-6b1fe6c4"));Object(c["t"])("data-v-6b1fe6c4");var To={class:"flex my-8 justify-between items-start"};Object(c["r"])();var Ao=$o((function(e,t,n,r,s,a){var o=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(o,{withMargin:"",back:"/news",label:a.updatedNews.title},{default:$o((function(){return[Object(c["h"])("div",{class:"bg-white rounded-12 relative mr-4 gallery-container elevated-shadow overflow-hidden bg-cover bg-no-repeat bg-center",style:"background-image:url('".concat(a.updatedNews.preview,"')")},null,4),Object(c["h"])("div",To,[Object(c["h"])("p",{class:"m-0 paragraph font-helvetica text-16 line-24 spacing-1 text-mid-dark-grey",innerHTML:a.updatedNews.description},null,8,["innerHTML"])])]})),_:1},8,["label"])})),Io={name:"NewsDetail",components:{Page:hr},mixins:[Xa],data:function(){return{news:{}}},computed:{updatedNews:function(){return this.news},backPath:function(){return"/news/"}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=15;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:it.news.list+"/"+e.$route.params.id,params:{}});case 4:n=t.sent,e.news=n,e.logPage(n.title),t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:ot.errors.newsDetail,color:"danger"});case 13:t.next=18;break;case 15:console.error("No news id in route"),e.$toast({message:ot.errors.newsDetail,color:"danger"}),e.$router.back();case 18:case"end":return t.stop()}}),t,null,[[1,9]])})))()}};n("568b");const Ro=d()(Io,[["render",Ao],["__scopeId","data-v-6b1fe6c4"]]);var Po=Ro,Mo=Object(c["h"])("div",null," ",-1),Lo={class:"flex flex-col px-8 pt-8"};function No(e,t,n,r,s,a){var o=Object(c["y"])("section-button"),i=Object(c["y"])("carousel"),l=Object(c["y"])("document-list-item"),u=Object(c["y"])("add-button-and-modal"),d=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(d,{label:"Documents",back:""},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{id:"sections-carousel",classes:"pt-4 -my-4 pb-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.formattedSections,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,active:s.section===e.path,classes:[0===t?"ml-8":""," mr-4"],red:"us"===e.path,label:e.label,onOnClick:function(t){return a.changeSection(e.path)}},null,8,["active","classes","red","label","onOnClick"])})),128)),Mo]})),_:1}),Object(c["h"])("div",Lo,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.documentsToShow,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"mb-4",key:t},[Object(c["h"])(l,{document:e,type:a.updatedSection,actions:e.actions},null,8,["document","type","actions"])])})),128))]),"my"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(u,{key:0,title:"Documents"})):Object(c["f"])("",!0)]})),_:1})}var Bo=Object(c["G"])("data-v-16a99600"),Uo=Bo((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("new-folder-modal"),l=Object(c["y"])("new-file-modal");return Object(c["q"])(),Object(c["e"])("div",null,[Object(c["h"])("div",{onClick:t[1]||(t[1]=function(){return a.openAdd&&a.openAdd.apply(a,arguments)}),class:"fixed z-10 rounded-8 bg-black width-56 height-56 flex justify-center items-center cursor-pointer",style:{bottom:"92px",right:"23px"}},[Object(c["h"])(o,{src:"/assets/button-icons/plus-white.svg",class:"width-12 height-12 pointer-events-none"})]),s.isFolderModalOpened?(Object(c["q"])(),Object(c["e"])(i,{key:0,parent:a.computedParent,onOnClose:t[2]||(t[2]=function(e){return a.toggleModal("folder")})},null,8,["parent"])):Object(c["f"])("",!0),s.isUploadModalOpened?(Object(c["q"])(),Object(c["e"])(l,{key:1,parent:a.computedParent,onOnClose:t[3]||(t[3]=function(e){return a.toggleModal("file")})},null,8,["parent"])):Object(c["f"])("",!0)])})),Fo=Object(c["G"])("data-v-33b84af2");Object(c["t"])("data-v-33b84af2");var zo={class:"fixed top-0 left-0 w-full h-full flex justofy-center items-center"},Eo=Object(c["h"])("div",{class:"absolute top-0 left-0 bg-black opacity-50 w-full h-full pointer-events-none",style:{"z-index":"10"}},null,-1),Vo=Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-22 line-30 text-black mb-1 block"},"Create new folder",-1),Go={class:"mt-2 w-full flex justify-end items-center"},Ho=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16 spacing-5 line-24 m-auto normal-case "},"Cancel",-1),Wo=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case"},"Create",-1);Object(c["r"])();var Yo=Fo((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-input"),i=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])("div",zo,[Eo,Object(c["h"])("form",{class:"relative z-10 bg-white rounded-8 p-6 mx-auto ",style:{"min-width":"300px","max-width":"300px"},onSubmit:t[3]||(t[3]=function(){return a.createFolder&&a.createFolder.apply(a,arguments)})},[Vo,Object(c["h"])(o,{type:"text",placeholder:"Untitled folder",modelValue:s.name,"onUpdate:modelValue":t[1]||(t[1]=function(e){return s.name=e}),class:"input-filled font-helvetica text-16 spacing-5 line-28 text-black mt-2 mb-4 pb-4",required:""},null,8,["modelValue"]),Object(c["h"])("div",Go,[Object(c["h"])("div",{class:"bg-white\n            rounded-12 flex justify-center items-center height-56 w-auto px-2 ml-auto normal-case mr-4 shadow-none\n          ",onClick:t[2]||(t[2]=function(){return a.cancel&&a.cancel.apply(a,arguments)})},[Ho]),Object(c["h"])(i,{type:"submit",class:"bg-black\n            rounded-12 flex justify-center items-center height-56 w-auto normal-case px-2'\n          "},{default:Fo((function(){return[Wo]})),_:1})])],32)])})),Jo={components:{IonButton:i["b"],IonInput:i["e"]},props:{parent:[String,Number]},data:function(){return{name:""}},computed:{computedParent:function(){return this.parent}},methods:{cancel:function(){this.$emit("onClose")},createFolder:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(e.preventDefault(),!t.name||!t.name.length){n.next=16;break}return n.prev=2,n.next=5,t.$http({method:"POST",url:it.folders.create,data:{name:t.name,type:"my",parent:t.parent||null},loader:!0});case 5:r=n.sent,console.log(r),t.$router.go(),n.next=14;break;case 10:n.prev=10,n.t0=n["catch"](2),console.error(n.t0),n.t0&&n.t0.response&&400===n.t0.response.status&&(t.$toast({message:ot.errors.furtherFolders,color:"danger"}),t.$emit("onClose"));case 14:n.next=18;break;case 16:console.error("No folder in route"),t.$toast({message:ot.errors.folderDetail,color:"danger"});case 18:t.$emit("onClose");case 19:case"end":return n.stop()}}),n,null,[[2,10]])})))()}}};n("2d5f");const Ko=d()(Jo,[["render",Yo],["__scopeId","data-v-33b84af2"]]);var Xo=Ko,Qo=Object(c["G"])("data-v-6fc0db65");Object(c["t"])("data-v-6fc0db65");var Zo={class:"fixed top-0 left-0 w-full h-full flex justofy-center items-center"},ei=Object(c["h"])("div",{class:"absolute top-0 left-0 bg-black opacity-50 w-full h-full pointer-events-none",style:{"z-index":"10"}},null,-1),ti=Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-22 line-30 text-black mb-1 block"},"Upload new file",-1),ni={class:"relative w-full bg-white border-2 border-dashed border-grey rounded-8 flex flex-col justify-center items-center my-4 py-8 px-2"},ri={class:"text-center mx-auto font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mt-2 px-2 block",style:{"word-break":"break-all"}},si={class:"mt-2 w-full flex justify-end items-center"},ai=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16 spacing-5 line-24 m-auto normal-case "},"Cancel",-1),ci=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case"},"Upload",-1);Object(c["r"])();var oi=Qo((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-input"),i=Object(c["y"])("ion-img"),l=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])("div",Zo,[ei,Object(c["h"])("form",{class:"relative z-10 bg-white rounded-8 p-6 mx-auto ",style:{"min-width":"300px","max-width":"300px"},onSubmit:t[3]||(t[3]=function(){return a.uploadFile&&a.uploadFile.apply(a,arguments)})},[ti,Object(c["h"])(o,{type:"text",placeholder:"Untitled file",modelValue:s.name,"onUpdate:modelValue":t[1]||(t[1]=function(e){return s.name=e}),class:"input-filled font-helvetica text-16 spacing-5 line-28 text-black pb-4 mt-4"},null,8,["modelValue"]),Object(c["h"])("div",ni,[Object(c["h"])(o,{id:"fileInput",type:"file",placeholder:"",onChange:a.previewFiles,accept:"application/pdf,application/vnd.ms-excel",class:"font-helvetica text-16 spacing-5 line-28 text-black absolute w-full h-full top-0 left-0 opacity-0",required:""},null,8,["onChange"]),Object(c["h"])(i,{src:"/assets/button-icons/folder.svg",class:"pointer-events-none m-auto"}),Object(c["h"])("span",ri,Object(c["A"])(s.file&&s.file.name?s.file.name:""),1)]),Object(c["h"])("div",si,[Object(c["h"])("div",{class:"bg-white\n            rounded-12 flex justify-center items-center height-56 w-auto px-2 ml-auto normal-case mr-4 shadow-none cursor-pointer\n          ",onClick:t[2]||(t[2]=function(){return a.cancel&&a.cancel.apply(a,arguments)})},[ai]),Object(c["h"])(l,{disabled:!s.file,type:"submit",class:"bg-black\n            rounded-12 flex justify-center items-center height-56 w-auto normal-case px-2 cursor-pointer'\n          "},{default:Qo((function(){return[ci]})),_:1},8,["disabled"])])],32)])})),ii={components:{IonButton:i["b"],IonInput:i["e"]},props:{parent:[String,Number]},data:function(){return{name:"",file:null}},computed:{computedParent:function(){return this.parent||null}},methods:{cancel:function(){this.$emit("onClose")},previewFiles:function(e){var t=e.target.files[0];this.file=t,this.name&&this.name.length||(this.name=t.name)},uploadFile:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r,s;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(e.preventDefault(),!t.name||!t.name.length){n.next=19;break}return n.prev=2,r=new FormData,r.append("name",t.name),r.append("file",t.file),r.append("parent",t.computedParent),n.next=9,t.$http({method:"POST",url:it.documents.upload,data:r,headers:{"Content-Type":"multipart/form-data"},loader:!0});case 9:s=n.sent,console.log(s),t.$router.go(),n.next=17;break;case 14:n.prev=14,n.t0=n["catch"](2),console.error(n.t0);case 17:n.next=21;break;case 19:console.error("No file found"),t.$toast({message:ot.errors.fileUpload,color:"danger"});case 21:t.$emit("onClose");case 22:case"end":return n.stop()}}),n,null,[[2,14]])})))()}}};n("77c0");const li=d()(ii,[["render",oi],["__scopeId","data-v-6fc0db65"]]);var ui=li,di={components:{IonImg:i["d"],NewFolderModal:Xo,NewFileModal:ui},props:{title:String,parent:[Number,String]},data:function(){return{isFolderModalOpened:!1,isUploadModalOpened:!1}},computed:{computedParent:function(){return this.parent||null}},methods:{toggleModal:function(e){switch(e){case"folder":this.isFolderModalOpened=!this.isFolderModalOpened;break;case"file":this.isUploadModalOpened=!this.isUploadModalOpened;break}},openAdd:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,i["r"].create({header:"Add to "+e.title,animated:!0,cssClass:"document-action-menu",buttons:[{text:"Create new folder",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.toggleModal("folder");case 1:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()},{text:"Upload file",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.toggleModal("file");case 1:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}]});case 2:return n=t.sent,t.next=5,n.present();case 5:case"end":return t.stop()}}),t)})))()}}};n("b6b6");const bi=d()(di,[["render",Uo],["__scopeId","data-v-16a99600"]]);var pi=bi,hi={components:{Page:hr,Carousel:he,SectionButton:Jr,DocumentListItem:mn,AddButtonAndModal:pi},data:function(){return{section:"my",sections:[{path:"my",label:"My Docs"},{path:"shared",label:"Shared with me"}],documents:{my:[],shared:[],us:[]}}},computed:{formattedSections:function(){var e=this.sections;return this.$store.getters.showUS&&e.unshift({path:"us",label:"US"}),e},updatedDocuments:function(){var e=this.$store.getters.documents||[];return this.documents[this.updatedSection]&&this.documents[this.updatedSection].length&&(e[this.updatedSection]=this.documents[this.updatedSection]),e},updatedSection:function(){return this.section},documentsToShow:function(){return this.updatedDocuments[this.updatedSection]||[]}},methods:{changeSection:function(e){this.section=e,this.getDocuments()},getDocuments:function(){var e=arguments,t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r,s,a;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return r=e.length>0&&void 0!==e[0]&&e[0],n.prev=1,s="list_"+t.updatedSection,n.next=5,t.$http({method:"GET",url:it.documents[s],params:t.filters,loader:r});case 5:a=n.sent,t.documents[t.updatedSection]=a.list,n.next=13;break;case 9:n.prev=9,n.t0=n["catch"](1),console.error(n.t0),t.$toast({message:ot.errors.documents,color:"danger"});case 13:case"end":return n.stop()}}),n,null,[[1,9]])})))()}},mounted:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.$store.getters.showUS&&(e.section="us"),e.getDocuments(!0);case 2:case"end":return t.stop()}}),t)})))()}};const fi=d()(hi,[["render",No]]);var mi=fi,gi={class:"flex flex-col px-8 pt-8"};function Oi(e,t,n,r,s,a){var o=Object(c["y"])("document-list-item"),i=Object(c["y"])("add-button-and-modal"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{label:a.updatedDocuments.back.name||"Folder",back:""},{default:Object(c["D"])((function(){return[Object(c["h"])("div",gi,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedDocuments.list,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"mb-4",key:t},[Object(c["h"])(o,{document:e,type:a.documentsType,actions:e.actions},null,8,["document","type","actions"])])})),128))]),"my"===a.updatedDocuments.type?(Object(c["q"])(),Object(c["e"])(i,{key:0,title:a.updatedDocuments.back.name,parent:a.updatedDocuments.back.id},null,8,["title","parent"])):Object(c["f"])("",!0)]})),_:1},8,["label"])}var ji={name:"FolderDetail",components:{Page:hr,DocumentListItem:mn,AddButtonAndModal:pi},mixins:[Xa],data:function(){return{documents:{back:{},list:[],type:""}}},computed:{updatedDocuments:function(){var e=Object.assign({},this.documents);return e},documentsType:function(){return this.updatedDocuments.type||"us"!==this.$route.query.type?this.updatedDocuments.type||"":"us"}},methods:{getDocuments:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,r,s,a,c;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id||!e.$route.query.type){t.next=18;break}return n=e.$route.params.id,r=e.$route.query.type,t.prev=3,a="list_"+r,t.next=7,e.$http({method:"GET",url:it.documents[a]+"/"+n,params:e.filters});case 7:c=t.sent,e.documents=c,e.logPage((null===c||void 0===c||null===(s=c.back)||void 0===s?void 0:s.name)||"Folder detail"),t.next=16;break;case 12:t.prev=12,t.t0=t["catch"](3),console.error(t.t0),e.$toast({message:ot.errors.documents,color:"danger"});case 16:t.next=21;break;case 18:console.error("No documents id in route"),e.$toast({message:ot.errors.folderDetail,color:"danger"}),e.$router.push("/documents");case 21:case"end":return t.stop()}}),t,null,[[3,12]])})))()}},mounted:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.getDocuments();case 1:case"end":return t.stop()}}),t)})))()},watch:{"$route.params.id":function(){this.$router.currentRoute&&this.$router.currentRoute.value&&this.$router.currentRoute.value.path&&this.$router.currentRoute.value.path.includes("folder")&&(this.documents={back:{},list:[],type:""},this.getDocuments())}}};const vi=d()(ji,[["render",Oi]]);var yi=vi,xi={class:"flex flex-wrap -mx-4"},wi={class:"relative w-auto mx-auto overflow-y-visible flex justify-center w-full pt-10"},ki={class:"font-helvetica-medium text-black text-16 mt-4"};function Ci(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("grey-container"),l=Object(c["y"])("separator"),u=Object(c["y"])("document-list-item"),d=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(d,{label:e.$route.name,withMargin:""},{default:Object(c["D"])((function(){return[Object(c["h"])("div",xi,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(s.segments,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,onClick:function(t){return a.routeToSegment(e)},class:"w-1/2 pt-10 mt-8 cursor-pointer"},[Object(c["h"])(i,{vertical:"",rounded:"12",classes:"mx-4 overflow-y-visible px-6 py-4 pointer-events-none"},{default:Object(c["D"])((function(){return[Object(c["h"])("div",wi,[Object(c["h"])(o,{src:e.preview,class:"absolute bottom-0 w-3/4 sm:w-1/2 blend-mode-darken"},null,8,["src"])]),Object(c["h"])("span",ki,Object(c["A"])(e.name),1)]})),_:2},1024)],8,["onClick"])})),128))]),Object(c["h"])(l),s.catalogue?(Object(c["q"])(),Object(c["e"])(u,{key:0,document:s.catalogue},null,8,["document"])):Object(c["f"])("",!0)]})),_:1},8,["label"])}var Si={components:{Page:hr,GreyContainer:Oe,IonImg:i["d"],Separator:ns,DocumentListItem:mn},data:function(){return{segments:[],catalogue:null}},computed:{},created:function(){this.getProducts()},methods:{routeToSegment:function(e){var t="/products/".concat(e.id);this.$router.push(t)},getProducts:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:it.products.segments,params:{}});case 3:n=t.sent,n&&(n.categories&&(e.segments=n.categories),n.catalogue&&(e.catalogue=n.catalogue)),t.next=11;break;case 7:t.prev=7,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:ot.errors.segments,color:"danger"});case 11:case"end":return t.stop()}}),t,null,[[0,7]])})))()}}};const _i=d()(Si,[["render",Ci]]);var qi=_i,Di={class:"flex flex-start items-center pointer-events-none px-8 w-full"},$i={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"};function Ti(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("ion-list"),u=Object(c["y"])("separator"),d=Object(c["y"])("document-list-item"),b=Object(c["y"])("accordions-list"),p=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(p,{back:"/products",label:a.updatedSegment.category_name},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedSegment.categories,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4 cursor-pointer",key:t,onClick:function(t){return a.routeTo(e)}},[Object(c["h"])("div",Di,[Object(c["h"])(i,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 p-2"},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:e.preview},null,8,["src"])]})),_:2},1024),Object(c["h"])("span",$i,Object(c["A"])(e.name),1)])],8,["onClick"])})),128))]})),_:1}),Object(c["h"])(u),s.segment.thinkclinical.length?(Object(c["q"])(),Object(c["e"])(b,{key:0,classes:"mt-4 px-8",list:a.thinkClinical},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])(d,{document:t},null,8,["document"])]})),_:1},8,["list"])):Object(c["f"])("",!0)]})),_:1},8,["label"])}var Ai={key:0,class:"font-helvetica text-grey text-14 spacing-44 line-24 text-center"},Ii={class:"font-helvetica-medium text-12 text-white spacing-8 line-30 pointer-events-none"},Ri={key:0,class:"flex flex-col"},Pi={class:"flex justify-start items-center"},Mi={key:0,class:"flex flex-col"},Li={key:1,class:"-mt-2 mb-6"};function Ni(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("separator");return Object(c["q"])(),Object(c["e"])("div",{class:[n.classes||""," flex flex-col"]},[a.updatedList&&a.updatedList.length?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])("span",Ai,"No items found. ")),a.updatedList&&a.updatedList.length?(Object(c["q"])(),Object(c["e"])("div",{key:1,onClick:t[1]||(t[1]=function(){return a.expandAll&&a.expandAll.apply(a,arguments)}),class:[a.isExpandable?"":"pointer-events-none opacity-50"," bg-black rounded-6 px-2 mb-8 mr-auto cursor-pointer"]},[Object(c["h"])("span",Ii,Object(c["A"])(a.isAllExpanded?"Close all":"Expand all"),1)],2)):Object(c["f"])("",!0),(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedList,(function(t,n){return Object(c["q"])(),Object(c["e"])("div",{key:n,class:"flex flex-col"},[t.childs?(Object(c["q"])(),Object(c["e"])("div",Ri,[Object(c["h"])("div",{onClick:function(e){return a.expand(n)},class:"flex justify-between items-center mb-8 cursor-pointer"},[Object(c["h"])("div",Pi,[Object(c["h"])(o,{src:"/assets/button-icons/arrow-".concat(t.expanded?"up":"down",".svg"),class:"width-675"},null,8,["src"]),Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-22 line-30 ml-2 text-".concat(t.expanded?"grey":"black")},Object(c["A"])(t.name),3)]),t.count&&t.count>0?(Object(c["q"])(),Object(c["e"])(i,{key:0,bgClass:"".concat(t.expanded?"bg-light-grey":"bg-black"),squareSize:"24",rounded:"6",classes:"flex text-center justify-center items-center"},{default:Object(c["D"])((function(){return[Object(c["h"])("span",{class:[t.expanded?"text-grey":"text-white","font-helvetica-bold text-12"]},Object(c["A"])(t.count),3)]})),_:2},1032,["bgClass"])):Object(c["f"])("",!0)],8,["onClick"]),t.expanded?(Object(c["q"])(),Object(c["e"])("div",Mi,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(t.childs,(function(t,n){return Object(c["q"])(),Object(c["e"])("div",{key:n,class:"mb-4"},[Object(c["x"])(e.$slots,"default",{item:t})])})),128))])):Object(c["f"])("",!0)])):(Object(c["q"])(),Object(c["e"])("div",Li,[Object(c["x"])(e.$slots,"default",{item:t})])),Object(c["h"])(l,{bottomMargin:""})])})),128))],2)}n("cb29");var Bi={components:{IonImg:i["d"],Separator:ns,SquareContainer:Xe},props:{list:Array,classes:[String,Array]},data:function(){return{expanded:this.list&&this.list.length?new Array(this.list.length).fill(!1):[]}},computed:{isExpandable:function(){for(var e=0;e<this.updatedList.length;e++)if(this.updatedList[e]&&this.updatedList[e].childs&&this.updatedList[e].childs.length)return!0;return!1},updatedList:function(){var e=this;return this.list&&this.list.length?this.list.map((function(t,n){return Object(s["a"])(Object(s["a"])({},t),{},{expanded:e.expanded[n]})})):[]},isAllExpanded:function(){for(var e=0;e<this.updatedList.length;e++)if(!this.updatedList[e].expanded&&this.updatedList[e].childs&&this.updatedList[e].childs.length)return!1;return!0}},methods:{expandAll:function(){for(var e=this.expanded.map((function(e){return e})),t=0;t<e.length;t++)this.isAllExpanded?e[t]=!1:e[t]=!0;this.expanded=e},expand:function(e){var t=this.expanded.map((function(e){return e}));t[e]=!t[e],this.expanded=t}},watch:{list:function(e){e&&e.length&&(this.expanded=new Array(e.length).fill(!1))}}};const Ui=d()(Bi,[["render",Ni]]);var Fi=Ui,zi={name:"ProductsSegment",components:{Page:hr,IonList:i["f"],IonImg:i["d"],SquareContainer:Xe,Separator:ns,DocumentListItem:mn,AccordionsList:Fi},mixins:[Xa],data:function(){return{segment:{category_name:"Segment",categories:[],thinkclinical:[]}}},computed:{updatedSegment:function(){return this.segment},thinkClinical:function(){return[{name:"#ThinkClinical",childs:this.segment.thinkclinical}]}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.segment){t.next=15;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:it.products.segments+"/"+e.$route.params.segment,params:{}});case 4:n=t.sent,e.segment=n,e.logPage(n.category_name),t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:ot.errors.segmentProducts,color:"danger"});case 13:t.next=18;break;case 15:console.error("No segment id in route"),e.$toast({message:ot.errors.segmentProducts,color:"danger"}),e.$router.push("/products");case 18:case"end":return t.stop()}}),t,null,[[1,9]])})))()},methods:{routeTo:function(e){var t="/products/";this.isCategory(e)?t+="category/"+e.id:t+="detail/"+e.id,this.$router.push(t)},isCategory:function(e){return!(!e||"category"!==e.type)}}};const Ei=d()(zi,[["render",Ti]]);var Vi=Ei,Gi={class:"flex flex-start items-center pointer-events-none px-8 w-full"},Hi={class:"flex flex-col justify-between py-2"},Wi={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Yi={class:"font-helvetica text-grey text-14 spacing-44 line-24"};function Ji(e,t,n,r,s,a){var o=Object(c["y"])("square-container"),i=Object(c["y"])("ion-list"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{back:a.backLink,label:a.updatedCategory.category_name,filters:s.filters,filtersOptions:a.options,onOnFiltersChange:a.updateFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedCategory.list,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4 cursor-pointer",key:t,onClick:function(t){return a.routeTo(e)}},[Object(c["h"])("div",Gi,[Object(c["h"])(o,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 bg-no-repeat bg-contain bg-center",styles:"background-image:url('".concat(e.preview,"')")},null,8,["styles"]),Object(c["h"])("div",Hi,[Object(c["h"])("span",Wi,Object(c["A"])(e.name),1),Object(c["h"])("span",Yi,Object(c["A"])(e.category),1)])])],8,["onClick"])})),128))]})),_:1})]})),_:1},8,["back","label","filters","filtersOptions","onOnFiltersChange"])}var Ki={name:"ProductsCategory",components:{Page:hr,IonList:i["f"],SquareContainer:Xe},mixins:[Xa],data:function(){return{category:{parent_id:"0",parent_name:"Segment",category_name:"Category",list:[],filters:{}},filtersOptions:{},filters:{order:"",subcategory:""}}},created:function(){this.$route.params.category?(this.categoryID=this.$route.params.category,this.getCategoryProducts()):(console.error("No category id in route"),this.$toast({message:ot.errors.categoryProducts,color:"danger"}),this.$router.push("/products"))},computed:{backLink:function(){return this.updatedCategory.parent_id?"/products/"+this.updatedCategory.parent_id:"/products"},updatedCategory:function(){return this.category},options:function(){return this.filtersOptions}},methods:{routeTo:function(e){var t="/products/detail/".concat(e.id);this.$router.push(t)},updateFilters:function(e){this.filters=Object.assign({},e)},getCategoryProducts:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,r;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,n=e.categoryID||e.$route.params.category,t.next=4,e.$http({method:"GET",url:it.products.products+"/"+n,params:e.filters});case 4:r=t.sent,e.category=r,e.filtersOptions=r.filters,e.logPage(r.category_name),t.next=14;break;case 10:t.prev=10,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:ot.errors.categoryProducts,color:"danger"});case 14:case"end":return t.stop()}}),t,null,[[0,10]])})))()}},watch:{filters:function(e){this.getCategoryProducts(e)}}};const Xi=d()(Ki,[["render",Ji]]);var Qi=Xi;function Zi(e,t,n,r,s,a){var o=Object(c["y"])("Details"),i=Object(c["y"])("Components"),l=Object(c["y"])("Documents");return Object(c["q"])(),Object(c["e"])(c["a"],null,["details"===a.section?(Object(c["q"])(),Object(c["e"])(o,{key:0})):Object(c["f"])("",!0),"components"===a.section?(Object(c["q"])(),Object(c["e"])(i,{key:1})):Object(c["f"])("",!0),"documents"===a.section?(Object(c["q"])(),Object(c["e"])(l,{key:2})):Object(c["f"])("",!0)],64)}var el={key:0,class:"mx-8 mt-4 flex justify-start"},tl={class:"mx-8 rounded-12 pt-8 relative bg-light-grey flex flex-col overflow-hidden"},nl={class:"ml-4 font-helvetica text-16 text-mid-dark-grey spacing-5 line-26"},rl={class:"p-8 mx-8 mb-4 bg-light-grey rounded-12 "};function sl(e,t,n,r,s,a){var o=Object(c["y"])("image-gallery"),i=Object(c["y"])("section-button"),l=Object(c["y"])("detail-section"),u=Object(c["y"])("ion-img"),d=Object(c["y"])("video-gallery"),b=Object(c["y"])("product-layout");return Object(c["q"])(),Object(c["e"])(b,{section:"details",title:a.updatedProduct.name,productID:e.$route.params.id,parentID:a.updatedProduct.parent_id,isFirstLevel:a.updatedProduct.parent_first_level},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{gallery:a.updatedProduct.images},null,8,["gallery"]),Object(c["h"])(l,{label:"Description"},{default:Object(c["D"])((function(){return[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4",style:a.updatedReadMore?"":"display: -webkit-box;-webkit-line-clamp: 3;-webkit-box-orient: vertical;overflow: hidden;text-overflow: ellipsis;",innerHTML:a.formattedDescription},null,12,["innerHTML"]),a.formattedDescription&&a.formattedDescription.length?(Object(c["q"])(),Object(c["e"])("div",el,[Object(c["h"])(i,{label:a.updatedReadMore?"Read less":"Read more",onOnClick:a.readMore},null,8,["label","onOnClick"])])):Object(c["f"])("",!0)]})),_:1}),a.updatedProduct.benefits&&a.updatedProduct.benefits.length?(Object(c["q"])(),Object(c["e"])(l,{key:0,label:"Benefits"},{default:Object(c["D"])((function(){return[Object(c["h"])("div",tl,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedProduct.benefits,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"flex mb-4 justify-start items-baseline px-8"},[Object(c["h"])(u,{src:"/assets/button-icons/list-icon.svg",class:"width-11"}),Object(c["h"])("span",nl,Object(c["A"])(e),1)])})),128)),Object(c["h"])(u,{src:"/assets/hero-2.png",class:"w-full blend-mode-darken lg:-mt-32 -mt-20"})])]})),_:1})):Object(c["f"])("",!0),a.updatedProduct.videos&&a.updatedProduct.videos.length?(Object(c["q"])(),Object(c["e"])(l,{key:1,label:"Videos",noSeparator:""},{default:Object(c["D"])((function(){return[Object(c["h"])(d,{gallery:a.updatedProduct.videos},null,8,["gallery"])]})),_:1})):Object(c["f"])("",!0),a.showDisclaimer?(Object(c["q"])(),Object(c["e"])(l,{key:2,label:"Disclaimer"},{default:Object(c["D"])((function(){return[Object(c["h"])("div",rl,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedProduct.disclaimers,(function(e,t){return Object(c["q"])(),Object(c["e"])("p",{key:t,class:[0===t||"mt-4","font-helvetica text-mid-dark-grey text-12 spacing-38 line-20"]},Object(c["A"])(e),3)})),128))])]})),_:1})):Object(c["f"])("",!0)]})),_:1},8,["title","productID","parentID","isFirstLevel"])}var al=Object(c["G"])("data-v-60778f50");Object(c["t"])("data-v-60778f50");var cl={class:"image-container pointer-events-none relative bg-black flex justify-center items-center"},ol={key:0,class:"px-8 py-4 font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 m-0"},il=Object(c["h"])("div",null,"   ",-1);Object(c["r"])();var ll=al((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("carousel"),l=Object(c["y"])("video-modal");return Object(c["q"])(),Object(c["e"])(c["a"],null,[Object(c["h"])(i,{id:"video-gallery",classes:"-my-8 py-8"},{default:al((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.gallery,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:[0===t?"ml-8":"",!n.noText||"no-text image-container","bg-white rounded-12 relative mr-4 videogallery-container  overflow-hidden elevated-shadow"],onClick:function(t){return a.openVideo(e)}},[Object(c["h"])("div",cl,[Object(c["h"])(o,{src:e.preview,class:"w-full opacity-50"},null,8,["src"]),Object(c["h"])(o,{src:"/assets/button-icons/play-white.svg",class:"m-auto absolute z-10"})]),n.noText?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])("p",ol,Object(c["A"])(e.label),1))],10,["onClick"])})),128)),il]})),_:1}),Object(c["h"])(l,{open:s.isVideoOpen,video:s.video,onOnClose:a.closeVideo},null,8,["open","video","onOnClose"])],64)})),ul={components:{Carousel:he,IonImg:i["d"],VideoModal:$c},props:{gallery:{type:Array},noText:{type:Boolean,default:!1}},data:function(){return{video:null,isVideoOpen:!1}},methods:{openVideo:function(e){this.video=e,this.isVideoOpen=!0},closeVideo:function(){this.isVideoOpen=!1,this.video=null}}};n("670a");const dl=d()(ul,[["render",ll],["__scopeId","data-v-60778f50"]]);var bl=dl,pl=Object(c["G"])("data-v-230ae7b6");Object(c["t"])("data-v-230ae7b6");var hl={key:0,class:"absolute bottom-0 right-0 mb-4 mr-4 px-2 py-1 rounded-6 flex justify-center items-center bg-black-50 pointer-events-none"},fl={class:"font-helvetica-medium text-12 text-white spacing-38 line-24"},ml=Object(c["h"])("div",null,"   ",-1);Object(c["r"])();var gl=pl((function(e,t,n,r,s,a){var o=Object(c["y"])("carousel"),i=Object(c["y"])("image-modal");return Object(c["q"])(),Object(c["e"])(c["a"],null,[Object(c["h"])(o,{id:n.id,classes:"-my-4 py-8"},{default:pl((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedGallery,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:[0===t?a.margin:"",n.chatGallery?"chat-gallery mr-8 flex justify-center items-center":"mr-4","bg-white rounded-12 relative gallery-container overflow-hidden flex"]},[Object(c["h"])("img",{src:e.image?e.image:e.preview,class:"h-full w-auto pointer-events-none mx-auto"},null,8,["src"]),n.gallery.length&&n.gallery.length>1?(Object(c["q"])(),Object(c["e"])("div",hl,[Object(c["h"])("span",fl,Object(c["A"])("".concat(t+1," / ").concat(n.gallery.length)),1)])):Object(c["f"])("",!0)],2)})),128)),ml]})),_:1},8,["id"]),Object(c["h"])(i,{open:s.isOpenImage,index:a.computedIndex,gallery:a.updatedGallery,onOnClose:a.closeImage},null,8,["open","index","gallery","onOnClose"])],64)})),Ol={components:{Carousel:he,ImageModal:hc},props:{gallery:{type:Array},initMargin:{type:String},id:{type:String},chatGallery:{type:Boolean}},data:function(){return{isOpenImage:!1,index:0}},computed:{margin:function(){return this.initMargin||"ml-8"},computedIndex:function(){return this.index},updatedGallery:function(){var e=this.gallery?this.gallery.map((function(e){return"string"===typeof e?{image:e}:{image:e.image||e.preview}})):[];return e}},methods:{openImage:function(e){this.index=e,this.isOpenImage=!0},closeImage:function(){this.index=0,this.isOpenImage=!1}}};n("60e9");const jl=d()(Ol,[["render",gl],["__scopeId","data-v-230ae7b6"]]);var vl=jl,yl=Object(c["h"])("div",null," ",-1);function xl(e,t,n,r,s,a){var o=Object(c["y"])("section-button"),i=Object(c["y"])("carousel"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{label:n.title,back:a.backLink},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{id:"sections-carousel",classes:"pt-4 -my-4 pb-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(s.sections,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,active:n.section===e.path,classes:[0===t?"ml-8":""," mr-4"],label:e.label,onOnClick:function(t){return a.routeToSection(e.path)}},null,8,["active","classes","label","onOnClick"])})),128)),yl]})),_:1}),Object(c["x"])(e.$slots,"default")]})),_:3},8,["label","back"])}var wl={components:{Page:hr,Carousel:he,SectionButton:Jr},props:{title:String,productID:[Number,String],section:String,parentID:[Number,String],isFirstLevel:Boolean},data:function(){return{sections:[{label:"Details",path:"details"},{label:"Components",path:"components"},{label:"Documents",path:"documents"}]}},computed:{backLink:function(){return this.isFirstLevel?"/products/".concat(this.parentID):"/products/category/".concat(this.parentID)}},methods:{routeToSection:function(e){var t="/products/detail/".concat(this.productID,"/");e&&"details"!==e&&(t+=e),this.$router.push(t)}}};const kl=d()(wl,[["render",xl]]);var Cl=kl,Sl={name:"Details",components:{IonImg:i["d"],ImageGallery:vl,VideoGallery:bl,SectionButton:Jr,DetailSection:ls,ProductLayout:Cl},mixins:[Xa],data:function(){return{isReadMore:!1,product:{}}},computed:{updatedProduct:function(){return this.product},updatedReadMore:function(){return this.isReadMore},formattedDescription:function(){return this.updatedProduct.description&&this.updatedProduct.description.length?this.sanitizeManageText(this.updatedProduct.description):""},showDisclaimer:function(){return this.updatedProduct.disclaimers&&this.updatedProduct.disclaimers.length}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=16;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:it.products.product+"/"+e.$route.params.id+"/details",params:{}});case 4:n=t.sent,e.product=n,setTimeout((function(){e.cleanParagraphs()}),500),e.logPage(n.name+" (Product details)"),t.next=14;break;case 10:t.prev=10,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:ot.errors.productDetail,color:"danger"});case 14:t.next=19;break;case 16:console.error("No product id in route"),e.$toast({message:ot.errors.productDetail,color:"danger"}),e.$router.back();case 19:case"end":return t.stop()}}),t,null,[[1,10]])})))()},methods:{readMore:function(){this.isReadMore=!this.updatedReadMore}}};const _l=d()(Sl,[["render",sl]]);var ql=_l;function Dl(e,t,n,r,s,a){var o=Object(c["y"])("document-list-item"),i=Object(c["y"])("accordions-list"),l=Object(c["y"])("product-layout");return Object(c["q"])(),Object(c["e"])(l,{section:"documents",title:a.updatedProduct.name,productID:e.$route.params.id,parentID:a.updatedProduct.parent_id,isFirstLevel:a.updatedProduct.parent_first_level},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{classes:"mt-4 px-8",list:a.computedAttachments},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])(o,{document:t},null,8,["document"])]})),_:1},8,["list"])]})),_:1},8,["title","productID","parentID","isFirstLevel"])}var $l={name:"Documents",components:{ProductLayout:Cl,AccordionsList:Fi,DocumentListItem:mn},mixins:[Xa],data:function(){return{product:{}}},computed:{updatedProduct:function(){return this.product},computedAttachments:function(){return this.updatedProduct&&this.updatedProduct.attachments?this.updatedProduct.attachments.map((function(e){return{name:e.name,childs:e.files,count:e.files.length}})):[]}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=15;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:it.products.product+"/"+e.$route.params.id+"/attachments",params:{}});case 4:n=t.sent,e.product=n,e.logPage(n.name+" (Product documents)"),t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:ot.errors.productDetail,color:"danger"});case 13:t.next=18;break;case 15:console.error("No product id in route"),e.$toast({message:ot.errors.productDetail,color:"danger"}),e.$router.back();case 18:case"end":return t.stop()}}),t,null,[[1,9]])})))()}};const Tl=d()($l,[["render",Dl]]);var Al=Tl,Il={class:"flex flex-start items-center pointer-events-none w-full"},Rl={class:"flex flex-col justify-between py-2"},Pl={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Ml={class:"font-helvetica text-grey text-14 spacing-44 line-24"};function Ll(e,t,n,r,s,a){var o=Object(c["y"])("square-container"),i=Object(c["y"])("accordions-list"),l=Object(c["y"])("product-layout");return Object(c["q"])(),Object(c["e"])(l,{section:"components",title:a.updatedProduct.name,productID:e.$route.params.id,parentID:a.updatedProduct.parent_id,isFirstLevel:a.updatedProduct.parent_first_level},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{classes:"mt-4 px-8",list:a.updatedProduct.components},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])("div",{class:"flex flex-row justify-between items-center bg-transparent",onClick:function(e){return a.routeToComponent(t)}},[Object(c["h"])("div",Il,[Object(c["h"])(o,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 bg-no-repeat bg-contain bg-center",styles:"background-image:url('".concat(t.preview,"')")},null,8,["styles"]),Object(c["h"])("div",Rl,[Object(c["h"])("span",Pl,Object(c["A"])(t.title),1),Object(c["h"])("span",Ml,Object(c["A"])(t.subtitle),1)])])],8,["onClick"])]})),_:1},8,["list"])]})),_:1},8,["title","productID","parentID","isFirstLevel"])}var Nl={name:"Components",components:{ProductLayout:Cl,AccordionsList:Fi,SquareContainer:Xe},mixins:[Xa],data:function(){return{product:{}}},computed:{updatedProduct:function(){return this.product}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=15;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:it.products.product+"/"+e.$route.params.id+"/components",params:{}});case 4:n=t.sent,e.product=n,e.logPage(n.name+" (Product components)"),t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:ot.errors.productDetail,color:"danger"});case 13:t.next=18;break;case 15:console.error("No product id in route"),e.$toast({message:ot.errors.productDetail,color:"danger"}),e.$router.back();case 18:case"end":return t.stop()}}),t,null,[[1,9]])})))()},methods:{routeToComponent:function(e){var t="/products/detail/component/"+e.id;this.$router.push(t)}}};const Bl=d()(Nl,[["render",Ll]]);var Ul=Bl,Fl={name:"ProductsDetail",components:{Details:ql,Documents:Al,Components:Ul},data:function(){return{initSection:"details"}},computed:{section:function(){return this.$route.meta&&this.$route.meta.section?this.$route.meta.section:this.initSection}}};const zl=d()(Fl,[["render",Zi]]);var El=zl,Vl=Object(c["G"])("data-v-76e57e36");Object(c["t"])("data-v-76e57e36");var Gl={class:"bg-white rounded-12 relative gallery-container overflow-hidden"},Hl={class:"flex my-8 justify-between items-start"},Wl={class:"flex flex-col"},Yl=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-20"},"Material",-1),Jl={class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26"},Kl={class:"flex flex-col"},Xl=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-20"},"Sterile",-1),Ql={class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26"},Zl={key:0,class:"bg-light-grey rounded-12 p-4 flex flex-col mb-8"},eu=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-20"},"Notes",-1),tu={class:"m-0 pt-4 font-helvetica text-16 text-mid-dark-grey spacing-1 line-24"},nu={class:"flex justify-start items-stretch"},ru={class:"flex flex-col justify-between items-start"},su={class:"font-helvetica-medium text-dark-grey text-16 spacing-4 line-24"},au={class:"font-helvetica text-grey text-14 spacing-44 line-24"},cu={key:0,class:"bg-light-red rounded-6 px-2 ml-auto"},ou=Object(c["h"])("span",{class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"},"upon request",-1);Object(c["r"])();var iu=Vl((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("separator"),l=Object(c["y"])("detail-section"),u=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(u,{withMargin:"",label:a.updatedProduct.title,aboveTitle:a.aboveTitle,back:a.backPath},{default:Vl((function(){return[Object(c["h"])("div",Gl,[Object(c["h"])(o,{src:a.updatedProduct.gallery&&a.updatedProduct.gallery[0]?a.updatedProduct.gallery[0].big:"",class:"h-full w-auto pointer-events-none"},null,8,["src"])]),Object(c["h"])("div",Hl,[Object(c["h"])("div",Wl,[Yl,Object(c["h"])("span",Jl,Object(c["A"])(a.updatedProduct.material),1)]),Object(c["h"])("div",Kl,[Xl,Object(c["h"])("span",Ql,Object(c["A"])(a.updatedProduct.sterile?"Sterile":"Not sterile"),1)])]),a.updatedProduct.notes&&a.updatedProduct.notes.length?(Object(c["q"])(),Object(c["e"])("div",Zl,[eu,Object(c["h"])("p",tu,Object(c["A"])(a.updatedProduct.notes),1)])):Object(c["f"])("",!0),Object(c["h"])(i,{noYMargin:""}),(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedProduct.variants,(function(e,t){return Object(c["q"])(),Object(c["e"])(l,{key:t,label:e.title,noPadding:""},{default:Vl((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(e.variants,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"flex mb-8 justify-between items-center"},[Object(c["h"])("div",nu,[Object(c["h"])("div",{class:[e.upon_request?"bg-red":"bg-light-grey"," width-4 rounded-2 mr-4"]},null,2),Object(c["h"])("div",ru,[Object(c["h"])("span",su,Object(c["A"])(e.size),1),Object(c["h"])("span",au,Object(c["A"])(e.code),1)])]),e.upon_request?(Object(c["q"])(),Object(c["e"])("div",cu,[ou])):Object(c["f"])("",!0)])})),128))]})),_:2},1032,["label"])})),128))]})),_:1},8,["label","aboveTitle","back"])})),lu={name:"ComponentDetail",components:{IonImg:i["d"],Page:hr,Separator:ns,DetailSection:ls},mixins:[Xa],data:function(){return{product:{}}},computed:{updatedProduct:function(){return this.product},aboveTitle:function(){return this.updatedProduct.parent_name&&this.updatedProduct.parent_name.length?this.updatedProduct.parent_name+" /":null},backPath:function(){var e=this.updatedProduct.parent_id;return"/products/detail/".concat(e,"/components")}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=15;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:it.products.component+"/"+e.$route.params.id,params:{}});case 4:n=t.sent,e.product=n,e.logPage(n.title+" (Component detail)"),t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:ot.errors.componentDetail,color:"danger"});case 13:t.next=18;break;case 15:console.error("No component id in route"),e.$toast({message:ot.errors.componentDetail,color:"danger"}),e.$router.back();case 18:case"end":return t.stop()}}),t,null,[[1,9]])})))()}};n("e27d");const uu=d()(lu,[["render",iu],["__scopeId","data-v-76e57e36"]]);var du=uu,bu={class:"flex flex-start items-start pointer-events-none px-8 w-full"},pu={class:"flex flex-col justify-between pb-2"},hu={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},fu={class:"font-helvetica text-grey text-14 spacing-44 line-24"},mu={class:"bg-light-red rounded-6 px-2 mr-auto"},gu={class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"};function Ou(e,t,n,r,s,a){var o=Object(c["y"])("square-container"),i=Object(c["y"])("ion-list"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{label:"Congresses",back:"/home",filters:s.filters,filtersOptions:a.options,onOnFiltersChange:a.updateFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(s.congresses,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4",key:t,onClick:function(t){return a.routeToCongress(e)}},[Object(c["h"])("div",bu,[Object(c["h"])(o,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 bg-no-repeat bg-cover bg-center",styles:"background-image:url('".concat(e.preview,"')")},null,8,["styles"]),Object(c["h"])("div",pu,[Object(c["h"])("span",hu,Object(c["A"])(e.name),1),Object(c["h"])("span",fu,Object(c["A"])(e.subtitle),1),Object(c["h"])("div",mu,[Object(c["h"])("span",gu,Object(c["A"])(e.dates),1)])])])],8,["onClick"])})),128))]})),_:1})]})),_:1},8,["filters","filtersOptions","onOnFiltersChange"])}var ju={components:{Page:hr,IonList:i["f"],SquareContainer:Xe},data:function(){return{congresses:[{id:1,image:"/assets/test/congress-small.jpg",title:"ESSKA Congress",location:"Virtual event",date:"11 - 15 May"},{id:1,image:"/assets/test/congress-small.jpg",title:"ESSKA Congress",location:"Virtual event",date:"11 - 15 May"},{id:1,image:"/assets/test/congress-small.jpg",title:"ESSKA Congress",location:"Virtual event",date:"11 - 15 May"}],filtersOptions:{},filters:{year:(new Date).getFullYear()}}},computed:{options:function(){return this.filtersOptions}},created:function(){this.$route.query&&this.$route.query.year&&(this.filters.year=parseInt(this.$route.query.year)),this.getCongressesList()},methods:{routeToCongress:function(e){var t="/congresses/".concat(e.id);this.$router.push(t)},updateFilters:function(e){this.filters=Object.assign({},e)},getCongressesList:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return e.$router.push({path:e.$route.path,query:e.filters}),t.prev=1,t.next=4,e.$http({method:"GET",url:it.congresses.list,params:e.filters});case 4:n=t.sent,e.congresses=n.list,e.filtersOptions=n.filters||{},t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:ot.errors.congresses,color:"danger"});case 13:case"end":return t.stop()}}),t,null,[[1,9]])})))()}},watch:{filters:function(e){this.$router.push({path:this.$route.path,query:e}),this.getCongressesList(e)}}};const vu=d()(ju,[["render",Ou]]);var yu=vu;function xu(e,t,n,r,s,a){var o=Object(c["y"])("Info"),i=Object(c["y"])("Details"),l=Object(c["y"])("Hotels"),u=Object(c["y"])("DayByDay"),d=Object(c["y"])("Activities"),b=Object(c["y"])("KeyMessages"),p=Object(c["y"])("Downloads"),h=Object(c["y"])("Contacts"),f=Object(c["y"])("congress-layout");return Object(c["q"])(),Object(c["e"])(f,{section:a.updatedSection,sections:a.sectionsList,title:a.title,onChangeSection:a.selectSection},{default:Object(c["D"])((function(){return["info"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(o,{key:0,congress:a.updatedCongress.info},null,8,["congress"])):Object(c["f"])("",!0),"details"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(i,{key:1,isCongress:"",congress:a.updatedCongress.details},null,8,["congress"])):Object(c["f"])("",!0),"hotel"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(l,{key:2,isCongress:"",congress:a.updatedCongress.hotel},null,8,["congress"])):Object(c["f"])("",!0),"day"===s.section?(Object(c["q"])(),Object(c["e"])(u,{key:3,congress:a.updatedCongress.day},null,8,["congress"])):Object(c["f"])("",!0),"activities"===s.section?(Object(c["q"])(),Object(c["e"])(d,{key:4,congress:a.updatedCongress.activities},null,8,["congress"])):Object(c["f"])("",!0),"messages"===s.section?(Object(c["q"])(),Object(c["e"])(b,{key:5,congress:a.updatedCongress.messages},null,8,["congress"])):Object(c["f"])("",!0),"download"===s.section?(Object(c["q"])(),Object(c["e"])(p,{key:6,congress:a.updatedCongress.download},null,8,["congress"])):Object(c["f"])("",!0),"contacts"===s.section?(Object(c["q"])(),Object(c["e"])(h,{key:7,isCongress:"",congress:a.updatedCongress.contacts},null,8,["congress"])):Object(c["f"])("",!0)]})),_:1},8,["section","sections","title","onChangeSection"])}var wu=Object(c["G"])("data-v-2def688c");Object(c["t"])("data-v-2def688c");var ku={class:"flex flex-col"},Cu={class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26 px-8 mb-4"},Su={class:"flex flex-col bg-light-red rounded-12 p-6 mx-8"},_u={class:"flex justify-between items-start mb-4"},qu={class:"flex flex-col"},Du=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"From",-1),$u={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},Tu={class:"font-helvetica text-14 text-red spacing-2 line-24"},Au={class:"flex flex-col"},Iu=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"To",-1),Ru={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},Pu={class:"font-helvetica text-14 text-red spacing-2 line-24"},Mu={class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28"};Object(c["r"])();var Lu=wu((function(e,t,n,r,s,a){var o=Object(c["y"])("big-button"),i=Object(c["y"])("ion-img"),l=Object(c["y"])("square-container"),u=Object(c["y"])("detail-section");return Object(c["q"])(),Object(c["e"])("div",ku,[Object(c["h"])("div",{class:"ml-8 bg-white rounded-12 relative mr-4 gallery-container elevated-shadow overflow-hidden bg-contain bg-no-repeat bg-center",style:"background-image:url('".concat(a.updatedCongress.image,"')")},null,4),Object(c["h"])(u,{label:a.updatedCongress.name},{default:wu((function(){return[Object(c["h"])("span",Cu,Object(c["A"])(a.updatedCongress.subtitle),1),Object(c["h"])("div",Su,[Object(c["h"])("div",_u,[Object(c["h"])("div",qu,[Du,Object(c["h"])("span",$u,Object(c["A"])(a.updatedCongress.first_date),1),Object(c["h"])("span",Tu,Object(c["A"])(a.updatedCongress.first_date_time),1)]),Object(c["h"])("div",Au,[Iu,Object(c["h"])("span",Ru,Object(c["A"])(a.updatedCongress.last_date),1),Object(c["h"])("span",Pu,Object(c["A"])(a.updatedCongress.last_date_time),1)])]),a.updatedCongress.save_event&&a.updatedCongress.save_event.length?(Object(c["q"])(),Object(c["e"])(o,{key:0,label:"Save in calendar",onOnClick:a.saveEvent},null,8,["onOnClick"])):Object(c["f"])("",!0)]),a.updatedCongress.link&&a.updatedCongress.link.length?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:"flex mt-4 items-center relative mx-8",onClick:t[1]||(t[1]=function(){return a.openLink&&a.openLink.apply(a,arguments)})},[Object(c["h"])(l,{bgClass:"bg-light-grey",squareSize:"44",classes:"pointer-events-none flex"},{default:wu((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/open-link.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("span",Mu,Object(c["A"])(a.updatedCongress.link),1)])):Object(c["f"])("",!0)]})),_:1},8,["label"]),a.formattedDescription&&a.formattedDescription.length?(Object(c["q"])(),Object(c["e"])(u,{key:0,label:"Description",noSeparator:""},{default:wu((function(){return[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.formattedDescription},null,8,["innerHTML"])]})),_:1})):Object(c["f"])("",!0)])})),Nu={components:{DetailSection:ls,IonImg:i["d"],BigButton:Qt,SquareContainer:Xe},props:{congress:Object},data:function(){return{isReadMore:!0}},computed:{updatedCongress:function(){if(this.congress&&this.congress.content){var e=Object.assign({},this.congress.content);return e}return{}},updatedReadMore:function(){return this.isReadMore},formattedDescription:function(){return this.updatedReadMore?this.updatedCongress.description:this.updatedCongress.description_short}},methods:{readMore:function(){this.isReadMore=!this.updatedReadMore},saveEvent:function(){window.open(this.updatedCongress.save_event)},openLink:function(){window.open(this.updatedCongress.link)}}};n("831d");const Bu=d()(Nu,[["render",Lu],["__scopeId","data-v-2def688c"]]);var Uu=Bu,Fu=Object(c["G"])("data-v-d1ec28b0");Object(c["t"])("data-v-d1ec28b0");var zu={class:"flex flex-col"},Eu={class:"flex flex-col justify-start items-start mb-8 px-8"},Vu=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-20"}," Location ",-1),Gu=Object(c["h"])("span",{class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28"}," View on Google Maps ",-1),Hu={class:"flex flex-col bg-light-red rounded-12 p-6 mx-8"},Wu={class:"flex justify-between items-start"},Yu={class:"flex flex-col"},Ju=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-2"}," In ",-1),Ku={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},Xu={class:"flex flex-col"},Qu=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-2"}," Out ",-1),Zu={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},ed={key:1,class:"mx-8 mt-8 flex justify-start"},td={key:0,class:"flex flex-col bg-light-red rounded-12 p-6 mx-8"},nd={class:"flex justify-between items-start mb-4"},rd={class:"flex flex-col"},sd={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},ad={key:0,class:"font-helvetica text-14 text-red spacing-2 line-24"},cd={class:"flex flex-col"},od={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},id={key:0,class:"font-helvetica text-14 text-red spacing-2 line-24"},ld={key:1,class:"mx-8 flex justify-start"};Object(c["r"])();var ud=Fu((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("section-button"),u=Object(c["y"])("detail-section"),d=Object(c["y"])("big-button");return Object(c["q"])(),Object(c["e"])("div",zu,[Object(c["h"])("div",{class:"ml-8 bg-white rounded-12 relative mr-4 gallery-container elevated-shadow overflow-hidden bg-no-repeat bg-cover bg-center",style:"background-image:url('".concat(a.updatedHotel.image,"'")},null,4),Object(c["h"])(u,{label:a.updatedHotel.name},{default:Fu((function(){return[Object(c["h"])("div",Eu,[Vu,Object(c["h"])("span",{class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26",innerHTML:a.updatedHotel.address},null,8,["innerHTML"]),a.updatedHotel.googlemaps?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:"flex relative mt-2 mb-4 items-center",onClick:t[1]||(t[1]=function(e){return a.openLink(a.updatedHotel.googlemaps)})},[Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:Fu((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/pin.svg",class:"m-auto"})]})),_:1}),Gu])):Object(c["f"])("",!0)]),Object(c["h"])("div",Hu,[Object(c["h"])("div",Wu,[Object(c["h"])("div",Yu,[Ju,Object(c["h"])("span",Ku,Object(c["A"])(a.updatedHotel.checkin_date),1)]),Object(c["h"])("div",Xu,[Qu,Object(c["h"])("span",Zu,Object(c["A"])(a.updatedHotel.checkout_date),1)])])]),a.hotelDescription&&a.hotelDescription.length?(Object(c["q"])(),Object(c["e"])("p",{key:0,class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mt-8",style:a.updatedReadMore.hotel?"":"display: -webkit-box;-webkit-line-clamp: 3;-webkit-box-orient: vertical;overflow: hidden;text-overflow: ellipsis;",innerHTML:a.hotelDescription},null,12,["innerHTML"])):Object(c["f"])("",!0),a.hotelDescription&&a.hotelDescription.length&&a.hotelDescription.length>400?(Object(c["q"])(),Object(c["e"])("div",ed,[Object(c["h"])(l,{label:a.updatedReadMore.hotel?"Read less":"Read more",onOnClick:t[2]||(t[2]=function(e){return a.readMore("hotel")})},null,8,["label"])])):Object(c["f"])("",!0)]})),_:1},8,["label"]),a.updatedTransfer&&a.updatedTransfer.transfer_date&&a.updatedTransfer.transfer_return_date||a.transferDescription?(Object(c["q"])(),Object(c["e"])(u,{key:0,label:"Transfer",noSeparator:""},{default:Fu((function(){return[a.updatedTransfer.transfer_date&&a.updatedTransfer.transfer_return_date?(Object(c["q"])(),Object(c["e"])("div",td,[Object(c["h"])("div",nd,[Object(c["h"])("div",rd,[Object(c["h"])("span",sd,Object(c["A"])(a.updatedTransfer.transfer_date),1),a.showTransferTime?(Object(c["q"])(),Object(c["e"])("span",ad,Object(c["A"])(a.updatedTransfer.transfer_time?"".concat(a.updatedTransfer.transfer_time," "):""),1)):Object(c["f"])("",!0)]),Object(c["h"])("div",cd,[Object(c["h"])("span",od,Object(c["A"])(a.updatedTransfer.transfer_return_date),1),a.showTransferTime?(Object(c["q"])(),Object(c["e"])("span",id,Object(c["A"])(a.updatedTransfer.transfer_return_time?"".concat(a.updatedTransfer.transfer_return_time," "):""),1)):Object(c["f"])("",!0)])]),Object(c["h"])(d,{label:"Save in calendar",onOnClick:t[3]||(t[3]=function(e){return a.saveEvent("transfer")})})])):Object(c["f"])("",!0),Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-8",style:a.updatedReadMore.transfer?"":"display: -webkit-box;-webkit-line-clamp: 3;-webkit-box-orient: vertical;overflow: hidden;text-overflow: ellipsis;",innerHTML:a.transferDescription},null,12,["innerHTML"]),a.transferDescription&&a.transferDescription.length&&a.transferDescription.length>400?(Object(c["q"])(),Object(c["e"])("div",ld,[Object(c["h"])(l,{label:a.updatedReadMore.transfer?"Read less":"Read more",onOnClick:t[4]||(t[4]=function(e){return a.readMore("transfer")})},null,8,["label"])])):Object(c["f"])("",!0)]})),_:1})):Object(c["f"])("",!0)])})),dd={components:{SectionButton:Jr,DetailSection:ls,IonImg:i["d"],BigButton:Qt,SquareContainer:Xe},props:{congress:Object},data:function(){return{isReadMore:{hotel:!1,transfer:!1}}},computed:{updatedCongress:function(){var e=Object.assign({},this.congress.content);return e},updatedHotel:function(){return this.updatedCongress&&this.updatedCongress.hotel?this.updatedCongress.hotel:{}},updatedTransfer:function(){return this.updatedCongress&&this.updatedCongress.transfer?this.updatedCongress.transfer:{}},showTransferTime:function(){return!(!this.updatedTransfer||!this.updatedTransfer.transfer_return_time&&!this.updatedTransfer.transfer_time)},updatedReadMore:function(){return this.isReadMore},hotelDescription:function(){return this.updatedHotel.info||""},transferDescription:function(){return this.updatedTransfer.info||""}},methods:{openLink:function(e){window.open(e)},readMore:function(e){var t=Object.assign({},this.isReadMore);t[e]=!t[e],this.isReadMore=t},saveEvent:function(e){"transfer"===e?window.open(this.updatedTransfer.save_event):window.open(this.updatedHotel.save_event)}}};n("f756");const bd=d()(dd,[["render",ud],["__scopeId","data-v-d1ec28b0"]]);var pd=bd,hd={class:"flex flex-col"},fd={class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28"},md={class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28"},gd={class:"flex flex-col bg-light-red rounded-12 p-6 mx-8"},Od={class:"flex justify-between items-start mb-4"},jd={class:"flex flex-col"},vd=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"From",-1),yd={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},xd={class:"font-helvetica text-14 text-red spacing-2 line-24"},wd={class:"flex flex-col"},kd=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"To",-1),Cd={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},Sd={class:"font-helvetica text-14 text-red spacing-2 line-24"},_d={class:"mt-8"};function qd(e,t,n,r,s,a){var o=Object(c["y"])("image-gallery"),i=Object(c["y"])("ion-img"),l=Object(c["y"])("square-container"),u=Object(c["y"])("detail-section"),d=Object(c["y"])("big-button");return Object(c["q"])(),Object(c["e"])("div",hd,[Object(c["h"])(o,{gallery:a.updatedVenueGallery},null,8,["gallery"]),Object(c["h"])(u,{label:"".concat(n.isCongress?"Congress ":"","Venue")},{default:Object(c["D"])((function(){return[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.congressDescription},null,8,["innerHTML"]),a.congressMaps&&a.congressMaps.link&&a.congressMaps.link.length?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:"flex relative mb-4 mx-8 items-center",onClick:t[1]||(t[1]=function(e){return a.openLink(a.congressMaps.link)})},[Object(c["h"])(l,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/pin.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("span",fd,Object(c["A"])(a.congressMaps.label),1)])):Object(c["f"])("",!0),a.congressDownloadMaps&&a.congressDownloadMaps.link&&a.congressDownloadMaps.link.length?(Object(c["q"])(),Object(c["e"])("div",{key:1,class:"flex relative mx-8 items-center",onClick:t[2]||(t[2]=function(e){return a.openLink(a.congressDownloadMaps.link)})},[Object(c["h"])(l,{bgClass:"bg-light-grey",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/download.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("span",md,Object(c["A"])(a.congressDownloadMaps.label),1)])):Object(c["f"])("",!0)]})),_:1},8,["label"]),a.areThereCongressDates?(Object(c["q"])(),Object(c["e"])(u,{key:0,label:"Timing & Dates"},{default:Object(c["D"])((function(){return[Object(c["h"])("div",gd,[Object(c["h"])("div",Od,[Object(c["h"])("div",jd,[vd,Object(c["h"])("span",yd,Object(c["A"])(a.congressDates.from_date),1),Object(c["h"])("span",xd,Object(c["A"])(a.congressDates.from_time),1)]),Object(c["h"])("div",wd,[kd,Object(c["h"])("span",Cd,Object(c["A"])(a.congressDates.to_date),1),Object(c["h"])("span",Sd,Object(c["A"])(a.congressDates.to_time),1)])]),a.congressDates.save_event&&a.congressDates.save_event.length?(Object(c["q"])(),Object(c["e"])(d,{key:0,label:"Save in calendar",onOnClick:t[3]||(t[3]=function(e){return a.openLink(a.congressDates.save_event)})})):Object(c["f"])("",!0)]),Object(c["h"])("div",_d,[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.formattedDescriptionDates},null,8,["innerHTML"])])]})),_:1})):Object(c["f"])("",!0),a.isLimaBooth?(Object(c["q"])(),Object(c["e"])(u,{key:1,label:"Lima Booth"},{default:Object(c["D"])((function(){return[a.updatedCongress.lima_booth&&a.updatedCongress.lima_booth.gallery&&a.updatedCongress.lima_booth.gallery.length?(Object(c["q"])(),Object(c["e"])(o,{key:0,id:"booth",gallery:a.updatedCongress.lima_booth&&a.updatedCongress.lima_booth.gallery?a.updatedCongress.lima_booth.gallery:[]},null,8,["gallery"])):Object(c["f"])("",!0),Object(c["h"])("div",{class:a.updatedCongress.lima_booth&&a.updatedCongress.lima_booth.gallery&&a.updatedCongress.lima_booth.gallery.length?"mt-8":""},[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.formattedDescriptionBooth},null,8,["innerHTML"])],2)]})),_:1})):Object(c["f"])("",!0),a.formattedDescriptionInfo&&a.formattedDescriptionInfo.length?(Object(c["q"])(),Object(c["e"])(u,{key:2,label:"Useful information"},{default:Object(c["D"])((function(){return[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.formattedDescriptionInfo},null,8,["innerHTML"])]})),_:1})):Object(c["f"])("",!0)])}var Dd={components:{ImageGallery:vl,DetailSection:ls,IonImg:i["d"],SquareContainer:Xe,BigButton:Qt},props:{congress:Object,isCongress:Boolean},data:function(){return{isReadMore:{dates:!0,useful:!1},detailsObject:{congress_venue:{gallery:[],title:"",description:"",link_googlemaps:"",link_googlemaps_label:"",link_download:"",link_download_label:""},timing_dates:{title:"",description:"",from_date:"",from_time:"",to_date:"",to_time:"",save_event:""},lima_booth:{title:"",description:"",gallery:[]},useful_information:{title:"",description:""}}}},computed:{updatedCongress:function(){return this.congress&&this.congress.content?Object.assign({},this.congress.content):this.detailsObject},updatedVenueGallery:function(){return this.updatedCongress&&this.updatedCongress.congress_venue&&this.updatedCongress.congress_venue.gallery&&this.updatedCongress.congress_venue.gallery.length?this.updatedCongress.congress_venue.gallery:[]},updatedReadMore:function(){return this.isReadMore},congressDescription:function(){return this.updatedCongress.congress_venue&&this.updatedCongress.congress_venue.description?this.updatedCongress.congress_venue.description:""},formattedDescriptionDates:function(){return this.updatedReadMore.dates?this.updatedCongress.lima_booth&&this.congressDates.description?this.congressDates.description:"":this.congressDates&&this.congressDates.description_short?this.congressDates.description_short:""},formattedDescriptionBooth:function(){return this.updatedCongress.lima_booth?this.updatedCongress.lima_booth.description:""},formattedDescriptionInfo:function(){return this.updatedCongress.useful_information&&this.updatedCongress.useful_information.description?this.updatedCongress.useful_information.description:""},congressMaps:function(){return!!(this.updatedCongress.congress_venue&&this.updatedCongress.congress_venue.link_googlemaps&&this.updatedCongress.congress_venue.link_googlemaps.length)&&{link:this.updatedCongress.congress_venue.link_googlemaps,label:this.updatedCongress.congress_venue.link_googlemaps_label}},congressDownloadMaps:function(){return!!(this.updatedCongress.congress_venue&&this.updatedCongress.congress_venue.link_download&&this.updatedCongress.congress_venue.link_download.length)&&{link:this.updatedCongress.congress_venue.link_download,label:this.updatedCongress.congress_venue.link_download_label}},congressDates:function(){return this.updatedCongress&&this.updatedCongress.timing_dates?this.updatedCongress.timing_dates:{}},areThereCongressDates:function(){return!!(this.congressDates&&Object.keys(this.congressDates)&&Object.keys(this.congressDates).length)},isLimaBooth:function(){return!!this.updatedCongress.lima_booth&&(!(!this.updatedCongress.lima_booth.gallery||!this.updatedCongress.lima_booth.gallery.length)||!(!this.updatedCongress.lima_booth.description||!this.updatedCongress.lima_booth.description.length))}},methods:{openLink:function(e){window.open(e)},readMore:function(e){var t=Object.assign({},this.isReadMore);t[e]=!t[e],this.isReadMore=t}}};const $d=d()(Dd,[["render",qd]]);var Td=$d,Ad=Object(c["G"])("data-v-81c73fe8");Object(c["t"])("data-v-81c73fe8");var Id={class:"flex flex-col mx-8"},Rd={class:"relative flex mb-4"},Pd={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},Md={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},Ld=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," Name ",-1),Nd={class:"relative flex mb-4"},Bd={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},Ud={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},Fd=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," Phone ",-1),zd={class:"relative flex mb-4"},Ed={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},Vd={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},Gd=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," E-mail ",-1);Object(c["r"])();var Hd=Ad((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("detail-section");return Object(c["q"])(),Object(c["e"])("div",Id,[Object(c["h"])(l,{noPadding:"",label:"Main Contact"},{default:Ad((function(){return[Object(c["h"])("div",Rd,[Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:Ad((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/open-link-white.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",Pd,[Object(c["h"])("span",Md,Object(c["A"])(a.updatedCongress.name),1),Ld])]),Object(c["h"])("div",Nd,[Object(c["h"])("a",{href:"tel:"+a.updatedCongress.phone,title:"phone",class:"absolute top-0 left-0 w-full h-full"},null,8,["href"]),Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:Ad((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/phone-white.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",Bd,[Object(c["h"])("span",Ud,Object(c["A"])(a.updatedCongress.phone),1),Fd])]),Object(c["h"])("div",zd,[Object(c["h"])("a",{href:"mailto:"+a.updatedCongress.email,title:"mail to",class:"absolute top-0 left-0 w-full h-full"},null,8,["href"]),Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:Ad((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/mail-white.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",Ed,[Object(c["h"])("span",Vd,Object(c["A"])(a.updatedCongress.email),1),Gd])])]})),_:1}),Object(c["h"])(l,{noPadding:"",label:"".concat(n.isCongress?"Congress ":"","Venue")},{default:Ad((function(){return[Object(c["h"])("p",{class:"font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mb-4",innerHTML:a.updatedVenue},null,8,["innerHTML"])]})),_:1},8,["label"]),Object(c["h"])(l,{noPadding:"",label:"Hotel"},{default:Ad((function(){return[Object(c["h"])("p",{class:"font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mb-4",innerHTML:a.updatedHotel},null,8,["innerHTML"])]})),_:1}),Object(c["h"])(l,{noPadding:"",label:"Staff",noSeparator:""},{default:Ad((function(){return[Object(c["h"])("p",{class:"font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mb-4 staff",innerHTML:a.updatedStaff},null,8,["innerHTML"])]})),_:1})])})),Wd={components:{DetailSection:ls,IonImg:i["d"],SquareContainer:Xe},props:{congress:Object,isCongress:Boolean},mounted:function(){var e=this;setTimeout((function(){e.cleanParagraphs()}),500)},computed:{updatedCongress:function(){if(this.congress&&this.congress.content){var e=Object.assign({},this.congress.content);return e}return{}},updatedVenue:function(){return this.updatedCongress&&this.updatedCongress.congress_venue?this.sanitizeManageText(this.updatedCongress.congress_venue):{}},updatedHotel:function(){return this.updatedCongress&&this.updatedCongress.hotel?this.updatedCongress.hotel:{}},updatedStaff:function(){return this.updatedCongress&&this.updatedCongress.staff?this.updatedCongress.staff:""}},methods:{openLink:function(e){window.open(e)}}};n("125f");const Yd=d()(Wd,[["render",Hd],["__scopeId","data-v-81c73fe8"]]);var Jd=Yd,Kd={class:"flex flex-col"},Xd={class:"flex flex-col relative border-l border-grey mx-8 mb-4 mt-2"},Qd={class:"ml-8 relative p-4 bg-light-red rounded-8 flex flex-col mb-4 justify-between items-start"},Zd={class:"font-helvetica text-red text-14 spacing-2 line-24 mb-2"},eb={class:"font-helvetica-medium text-dark-grey text-16 spacing-4 line-24 mb-2"},tb={class:"font-helvetica text-grey text-14 spacing-44 line-20"};function nb(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("big-button"),l=Object(c["y"])("detail-section");return Object(c["q"])(),Object(c["e"])("div",Kd,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedCongress,(function(e,t){return Object(c["q"])(),Object(c["e"])(l,{key:t,label:e.date,noSeparator:""},{default:Object(c["D"])((function(){return[Object(c["h"])("div",Xd,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(e.events,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:[t>0?"mt-8":"","relative"]},[Object(c["h"])(o,{src:"/assets/button-icons/dot.svg",class:"absolute top-0",style:{width:"7px",height:"7px","margin-left":"-3.5px","margin-top":"1.35rem"}}),Object(c["h"])("div",Qd,[Object(c["h"])("span",Zd,Object(c["A"])(e.time),1),Object(c["h"])("span",eb,Object(c["A"])(e.title),1),Object(c["h"])("span",tb,Object(c["A"])(e.subtitle),1),e.save_event&&e.save_event.length?(Object(c["q"])(),Object(c["e"])(i,{key:0,bgClass:"mt-4 ",label:"Save in calendar",onOnClick:function(t){return a.saveEvent(e)}},null,8,["onOnClick"])):Object(c["f"])("",!0)]),Object(c["h"])("p",{class:"mmt-0 mb-0 mr-0 ml-8 font-helvetica text-16 text-mid-dark-grey spacing-1 line-24",innerHTML:e.description},null,8,["innerHTML"])],2)})),128))])]})),_:2},1032,["label"])})),128))])}var rb={components:{DetailSection:ls,IonImg:i["d"],BigButton:Qt},props:{congress:Object},computed:{updatedCongress:function(){return this.congress&&this.congress.content?this.congress.content:[]}},methods:{saveEvent:function(e){window.open(e.save_event)}}};const sb=d()(rb,[["render",nb]]);var ab=sb,cb={class:"flex flex-col px-8 pt-8"};function ob(e,t,n,r,s,a){var o=Object(c["y"])("document-list-item");return Object(c["q"])(),Object(c["e"])("div",cb,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.congressDocuments,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"mb-4",key:t},[Object(c["h"])(o,{document:e},null,8,["document"])])})),128))])}var ib={components:{DocumentListItem:mn},props:{congress:Object},computed:{congressDocuments:function(){return this.congress&&this.congress.content&&this.congress.content.length?this.congress.content:[]}}};const lb=d()(ib,[["render",ob]]);var ub=lb,db={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},bb={class:"font-helvetica text-grey text-14 spacing-44 line-24 mb-2"},pb={class:"flex justify-between items-center w-full"},hb={class:"bg-light-red rounded-6 px-2 mr-auto"},fb={class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"},mb={class:"flex ml-2"},gb={class:"flex justify-between items-center w-full pointer-events-none mt-4"};function Ob(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("big-button"),u=Object(c["y"])("accordions-list");return Object(c["q"])(),Object(c["e"])(u,{classes:"mt-4 px-8",list:a.congressActivities},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])("div",{class:"flex flex-col justify-between items-start bg-white rounded-12 elevated-shadow px-6 py-4",onClick:function(e){return a.routeToActivity(t)}},[Object(c["h"])("span",db,Object(c["A"])(t.title),1),Object(c["h"])("span",bb,Object(c["A"])(t.location),1),Object(c["h"])("div",pb,[Object(c["h"])("div",hb,[Object(c["h"])("span",fb,Object(c["A"])(t.date),1)]),Object(c["h"])("div",mb,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(t.experts,(function(e,t){return Object(c["q"])(),Object(c["e"])(i,{key:t,rounded:"6",squareSize:"24",classes:[e.image?"":"flex bg-red","ml-2"]},{default:Object(c["D"])((function(){return[e.image?(Object(c["q"])(),Object(c["e"])(o,{key:0,src:e.image},null,8,["src"])):Object(c["f"])("",!0)]})),_:2},1032,["classes"])})),128))])]),Object(c["h"])("div",gb,[Object(c["h"])(l,{label:"Read more"})])],8,["onClick"])]})),_:1},8,["list"])}var jb={components:{IonImg:i["d"],AccordionsList:Fi,SquareContainer:Xe,BigButton:Qt},props:{congress:Object},computed:{congressActivities:function(){if(this.congress&&this.congress.content&&this.congress.content.length){var e=this.congress.content.map((function(e){return{name:e.label,childs:e.events.map((function(e){return e})),count:e.events.length}}));return e}return[]}},methods:{routeToActivity:function(e){this.$router.push("/congresses/activities/".concat(e.id))}}};const vb=d()(jb,[["render",Ob]]);var yb=vb,xb={class:"flex flex-col pb-10"},wb=Object(c["h"])("div",{class:"absolute ml-8 mt-8 bg-light-grey h-full",style:{"border-radius":"0 12px 12px 12px",width:"calc(100% - 4rem)"}},null,-1),kb={class:"flex flex-col mx-16 mt-8 pt-8 relative z-10"},Cb={class:"font-helvetica-bold text-20 text-black spacing-2 line-28 mb-4"},Sb={key:0,class:"mt-4"};function _b(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("image-gallery");return Object(c["q"])(),Object(c["e"])("div",xb,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.congressMessages,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"relative flex flex-col mb-16"},[wb,Object(c["h"])(o,{src:"assets/button-icons/message-triangle.svg",class:"absolute ml-8 mt-8",style:{transform:"translateY(-100%)",width:"16px"}}),Object(c["h"])("div",kb,[Object(c["h"])("span",Cb,Object(c["A"])(e.title),1),Object(c["h"])("p",{class:"m-0 font-helvetica text-16 text-mid-dark-grey spacing-1 line-24",innerHTML:e.description},null,8,["innerHTML"])]),e.images&&e.images.length?(Object(c["q"])(),Object(c["e"])("div",Sb,[Object(c["h"])(i,{chatGallery:"",gallery:e.images,initMargin:"ml-16"},null,8,["gallery"])])):Object(c["f"])("",!0)])})),128))])}var qb={components:{IonImg:i["d"],ImageGallery:vl},props:{congress:Object},computed:{congressMessages:function(){return this.congress&&this.congress.content&&this.congress.content.length?this.congress.content:[]}}};const Db=d()(qb,[["render",_b]]);var $b=Db,Tb=Object(c["h"])("div",null," ",-1);function Ab(e,t,n,r,s,a){var o=Object(c["y"])("section-button"),i=Object(c["y"])("carousel"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{label:n.title,back:""},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{id:"sections-carousel",classes:"pt-4 -my-4 pb-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.sections,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,active:n.section===e.path,classes:[0===t?"ml-8":""," mr-4"],label:e.label,onOnClick:function(t){return a.changeSection(e.path)}},null,8,["active","classes","label","onOnClick"])})),128)),Tb]})),_:1}),Object(c["x"])(e.$slots,"default")]})),_:3},8,["label"])}var Ib={emits:["changeSection"],components:{Page:hr,Carousel:he,SectionButton:Jr},props:{title:String,congressID:Number,section:String,sections:Array},data:function(){return{}},methods:{changeSection:function(e){this.$emit("changeSection",e)}}};const Rb=d()(Ib,[["render",Ab]]);var Pb=Rb,Mb={name:"CongressDetail",components:{CongressLayout:Pb,Info:Uu,Details:Td,Hotels:pd,DayByDay:ab,Activities:yb,KeyMessages:$b,Downloads:ub,Contacts:Jd},mixins:[Xa],data:function(){return{section:"info",congress:{tabs:{info:{title:"Info",content:{}},details:{title:"Details",content:{congress_venue:{},timing_dates:{},lima_booth:{},useful_information:{}}},hotel:{title:"Hotel & Transfer",content:{hotel:{},transfer:{}}},day:{title:"Day by day",content:[]},activities:{title:"Activities",content:[]},key:{title:"Key messages",content:[]},downloads:{title:"Downloads",content:[]},contacts:{title:"Contacts",content:{}}}}}},computed:{title:function(){return this.updatedCongress&&this.updatedCongress.info&&this.updatedCongress.info.content&&this.updatedCongress.info.content.name?this.updatedCongress.info.content.name:"Congress details"},updatedCongress:function(){var e=Object.assign({},this.congress.tabs);return e},updatedSection:function(){return this.section},sectionsList:function(){for(var e=Object.keys(this.updatedCongress),t=[],n=0;n<e.length;n++)t.push({label:this.updatedCongress[e[n]].title,path:e[n]});return t}},methods:{selectSection:function(e){this.section=e}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,r,s,a,c;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=16;break}return n=e.$route.params.id,t.prev=2,t.next=5,e.$http({method:"GET",url:it.congresses.list+"/"+n,params:e.filters});case 5:c=t.sent,e.congress=c,e.logPage((null===c||void 0===c||null===(r=c.tabs)||void 0===r||null===(s=r.info)||void 0===s||null===(a=s.content)||void 0===a?void 0:a.name)+" (Congress details)"||!1),t.next=14;break;case 10:t.prev=10,t.t0=t["catch"](2),console.error(t.t0),e.$toast({message:ot.errors.congressDetail,color:"danger"});case 14:t.next=19;break;case 16:console.error("No congress id in route"),e.$toast({message:ot.errors.congressDetail,color:"danger"}),e.$router.push("/congresses");case 19:case"end":return t.stop()}}),t,null,[[2,10]])})))()}};const Lb=d()(Mb,[["render",xu]]);var Nb=Lb,Bb=Object(c["G"])("data-v-508bc22e");Object(c["t"])("data-v-508bc22e");var Ub={class:"flex flex-col my-8 "},Fb={class:"font-helvetica-bold text-20 spacing-2 line-28 text-black mb-2"},zb={class:"font-helvetica-medium text-16 spacing-4 line-24 text-dark-grey mb-4"},Eb={key:0,class:"flex flex-col"},Vb=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-20"},"Location",-1),Gb={class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26 mb-8"},Hb={class:"flex flex-col bg-light-red rounded-12 p-6"},Wb={class:"flex justify-between items-start mb-4"},Yb={class:"flex flex-col"},Jb=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"From",-1),Kb={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},Xb={class:"font-helvetica text-14 text-red spacing-2 line-24"},Qb={class:"flex flex-col"},Zb=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"To",-1),ep={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},tp={class:"font-helvetica text-14 text-red spacing-2 line-24"},np={class:"flex justify-start"},rp={class:"flex flex-col justify-between items-start pointer-events-none"},sp={class:"font-helvetica-medium text-16 spacing-5 line-28 text-black"},ap={class:"font-helvetica text-14 spacing-44 line-24 text-grey"};Object(c["r"])();var cp=Bb((function(e,t,n,r,s,a){var o=Object(c["y"])("big-button"),i=Object(c["y"])("separator"),l=Object(c["y"])("section-button"),u=Object(c["y"])("detail-section"),d=Object(c["y"])("IonImg"),b=Object(c["y"])("square-container"),p=Object(c["y"])("document-list-item"),h=Object(c["y"])("faculty-modal"),f=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(f,{back:"",withMargin:"",label:a.updatedActivity.title,aboveTitle:a.aboveTitle},{default:Bb((function(){return[Object(c["h"])("div",{class:"bg-white rounded-12 relative mr-4 gallery-container elevated-shadow overflow-hidden bg-cover bg-no-repeat bg-center",style:"background-image:url('".concat(a.updatedActivity.image,"'")},null,4),Object(c["h"])("div",Ub,[Object(c["h"])("span",Fb,Object(c["A"])(a.updatedActivity.subtitle1),1),Object(c["h"])("span",zb,Object(c["A"])(a.updatedActivity.subtitle2),1),a.updatedActivity.location?(Object(c["q"])(),Object(c["e"])("div",Eb,[Vb,Object(c["h"])("span",Gb,Object(c["A"])(a.updatedActivity.location),1)])):Object(c["f"])("",!0),Object(c["h"])("div",Hb,[Object(c["h"])("div",Wb,[Object(c["h"])("div",Yb,[Jb,Object(c["h"])("span",Kb,Object(c["A"])(a.updatedActivity.start_date),1),Object(c["h"])("span",Xb,Object(c["A"])(a.updatedActivity.start_date_time),1)]),Object(c["h"])("div",Qb,[Zb,Object(c["h"])("span",ep,Object(c["A"])(a.updatedActivity.end_date),1),Object(c["h"])("span",tp,Object(c["A"])(a.updatedActivity.end_date_time),1)])]),a.updatedActivity.save_event&&a.updatedActivity.save_event.length?(Object(c["q"])(),Object(c["e"])(o,{key:0,label:"Save in calendar",onOnClick:t[1]||(t[1]=function(e){return a.openLink(a.updatedActivity.save_event)})})):Object(c["f"])("",!0)])]),Object(c["h"])(i,{noYMargin:""}),Object(c["h"])(u,{label:"Description",noPadding:""},{default:Bb((function(){return[Object(c["h"])("p",{class:"p-children font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",style:a.updatedReadMore?"":"display: -webkit-box;-webkit-line-clamp: 3;-webkit-box-orient: vertical;overflow: hidden;text-overflow: ellipsis;",innerHTML:a.formattedDescription},null,12,["innerHTML"]),Object(c["h"])("div",np,[Object(c["h"])(l,{label:a.updatedReadMore?"Read less":"Read more",onOnClick:a.readMore},null,8,["label","onOnClick"])])]})),_:1}),a.updatedActivity.experts&&a.updatedActivity.experts.length?(Object(c["q"])(),Object(c["e"])(u,{key:0,label:"Faculties",noPadding:""},{default:Bb((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedActivity.experts,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:[t>0?"mt-4":""," flex justify-start items-center"],onClick:function(t){return a.openFaculty(e)}},[Object(c["h"])(b,{bgClass:"bg-white",squareSize:"64",classes:"mr-4 pointer-events-none"},{default:Bb((function(){return[Object(c["h"])(d,{src:e.preview},null,8,["src"])]})),_:2},1024),Object(c["h"])("div",rp,[Object(c["h"])("span",sp,Object(c["A"])(e.name),1),Object(c["h"])("span",ap,Object(c["A"])(e.subtitle),1)])],10,["onClick"])})),128))]})),_:1})):Object(c["f"])("",!0),a.updatedActivity.files&&a.updatedActivity.files.length?(Object(c["q"])(),Object(c["e"])(u,{key:1,label:"Download",noPadding:""},{default:Bb((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedActivity.files,(function(e,t){return Object(c["q"])(),Object(c["e"])(p,{bgClass:"bg-transparent",key:t,document:e},null,8,["document"])})),128))]})),_:1})):Object(c["f"])("",!0),Object(c["h"])(h,{faculty:s.faculty,onOnClose:a.closeFaculty},null,8,["faculty","onOnClose"])]})),_:1},8,["label","aboveTitle"])})),op=Object(c["G"])("data-v-5b06f461");Object(c["t"])("data-v-5b06f461");var ip={class:"w-full h-full relative pt-20 gradient-background"},lp={class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:{height:"90px"}},up={class:"mx-8 flex flex-col"},dp={class:"font-helvetica-medium text-16 text-dark-grey spacing-4 line-24 mb-8 block"};Object(c["r"])();var bp=op((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("square-container"),u=Object(c["y"])("Title"),d=Object(c["y"])("ion-modal");return Object(c["q"])(),Object(c["e"])(d,{animated:"",showBackdrop:"","css-class":"custom-modal","is-open":s.isOpened,onDidDismiss:t[1]||(t[1]=function(t){return e.$emit("onClose")})},{default:op((function(){return[Object(c["h"])("div",ip,[Object(c["h"])("div",lp,[Object(c["h"])(i,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.closeFaculty},{default:op((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])]),Object(c["h"])("div",up,[Object(c["h"])(l,{bgClass:"bg-white",squareSize:"64",classes:"mb-4"},{default:op((function(){return[Object(c["h"])(o,{src:a.computedFaculty.preview},null,8,["src"])]})),_:1}),Object(c["h"])(u,{titleClass:"pb-4 text-black font-helvetica-bold text-28 block"},{default:op((function(){return[Object(c["g"])(Object(c["A"])(a.computedFaculty.name),1)]})),_:1}),Object(c["h"])("span",dp,Object(c["A"])(a.computedFaculty.subtitle),1),Object(c["h"])("p",{class:"m-0 font-helvetica text-16 spacing-1 line-24 text-mid-dark-grey",innerHTML:a.computedFaculty.description},null,8,["innerHTML"])])])]})),_:1},8,["is-open"])})),pp={components:{Title:ae,IonImg:i["d"],IonModal:i["g"],SquareContainer:Xe,IonButton:i["b"]},props:{faculty:Object},data:function(){return{isOpened:!1}},computed:{computedFaculty:function(){return this.faculty}},methods:{closeFaculty:function(){this.$emit("onClose")}},watch:{computedFaculty:function(e){e&&Object.keys(e).length?this.isOpened=!0:this.isOpened=!1}}};n("9c9f");const hp=d()(pp,[["render",bp],["__scopeId","data-v-5b06f461"]]);var fp=hp,mp={name:"ActivityDetail",components:{IonImg:i["d"],Page:hr,Separator:ns,DetailSection:ls,SquareContainer:Xe,DocumentListItem:mn,SectionButton:Jr,BigButton:Qt,FacultyModal:fp},mixins:[Xa],data:function(){return{isReadMore:!1,faculty:null,activity:{}}},computed:{updatedActivity:function(){return this.activity},updatedReadMore:function(){return this.isReadMore},aboveTitle:function(){return this.updatedActivity.parent_name+" /"},formattedDescription:function(){return this.updatedActivity&&this.updatedActivity.description&&this.updatedActivity.description.length?this.sanitizeManageText(this.updatedActivity.description):""},backPath:function(){var e=this.updatedActivity.parent_id;return"/congresses/".concat(e,"?section=activities")},isFaculty:function(){return this.faculty}},methods:{readMore:function(){this.isReadMore=!this.isReadMore},openFaculty:function(e){this.faculty=Object.assign({},e)},closeFaculty:function(){this.faculty=null},openLink:function(e){window.open(e)}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,r;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=17;break}return n=e.$route.params.id,t.prev=2,t.next=5,e.$http({method:"GET",url:it.congresses.activity+"/"+n,params:{}});case 5:r=t.sent,r&&Object.keys(r).length&&(e.activity=r),setTimeout((function(){e.cleanParagraphs()}),500),e.logPage(r.title),t.next=15;break;case 11:t.prev=11,t.t0=t["catch"](2),console.error(t.t0),e.$toast({message:ot.errors.activityDetail,color:"danger"});case 15:t.next=20;break;case 17:console.error("No congress id in route"),e.$toast({message:ot.errors.activityDetail,color:"danger"}),e.$router.push("/congresses");case 20:case"end":return t.stop()}}),t,null,[[2,11]])})))()}};n("b118");const gp=d()(mp,[["render",cp],["__scopeId","data-v-508bc22e"]]);var Op=gp,jp={class:"flex flex-start items-start pointer-events-none px-8 w-full"},vp={class:"flex flex-col justify-between py-2"},yp={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},xp={class:"bg-light-red rounded-6 px-2 mr-auto"},wp={class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"};function kp(e,t,n,r,s,a){var o=Object(c["y"])("square-container"),i=Object(c["y"])("ion-list"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{label:"Sales Training",back:"/home",filters:s.filters,filtersOptions:a.options,onOnFiltersChange:a.updateFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(s.list,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4",key:t,onClick:function(t){return a.routeToTraining(e)}},[Object(c["h"])("div",jp,[Object(c["h"])(o,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 bg-no-repeat bg-cover bg-center",styles:"background-image:url('".concat(e.preview,"')")},null,8,["styles"]),Object(c["h"])("div",vp,[Object(c["h"])("span",yp,Object(c["A"])(e.name),1),Object(c["h"])("span",{class:"font-helvetica text-grey text-14 spacing-44 line-24",innerHTML:e.subtitle},null,8,["innerHTML"]),Object(c["h"])("div",xp,[Object(c["h"])("span",wp,Object(c["A"])(e.dates),1)])])])],8,["onClick"])})),128))]})),_:1})]})),_:1},8,["filters","filtersOptions","onOnFiltersChange"])}var Cp={components:{Page:hr,IonList:i["f"],SquareContainer:Xe},data:function(){return{list:[],filtersOptions:{},filters:{year:(new Date).getFullYear()}}},computed:{options:function(){return this.filtersOptions}},created:function(){this.$route.query&&this.$route.query.year&&(this.filters.year=parseInt(this.$route.query.year)),this.getTrainingList()},methods:{routeToTraining:function(e){var t="/training/".concat(e.id);this.$router.push(t)},updateFilters:function(e){this.filters=Object.assign({},e)},getTrainingList:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return e.$router.push({path:e.$route.path,query:e.filters}),t.prev=1,t.next=4,e.$http({method:"GET",url:it.training.list,params:e.filters});case 4:n=t.sent,e.list=n.list,e.filtersOptions=n.filters||{},t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:ot.errors.training,color:"danger"});case 13:case"end":return t.stop()}}),t,null,[[1,9]])})))()}},watch:{filters:function(e){this.$router.push({path:this.$route.path,query:e}),this.getTrainingList(e)}}};const Sp=d()(Cp,[["render",kp]]);var _p=Sp;function qp(e,t,n,r,s,a){var o=Object(c["y"])("Info"),i=Object(c["y"])("Testimonials"),l=Object(c["y"])("Details"),u=Object(c["y"])("Hotels"),d=Object(c["y"])("DayByDay"),b=Object(c["y"])("Activities"),p=Object(c["y"])("Downloads"),h=Object(c["y"])("Contacts"),f=Object(c["y"])("congress-layout");return Object(c["q"])(),Object(c["e"])(f,{section:a.updatedSection,sections:a.sectionsList,title:a.title,onChangeSection:a.selectSection},{default:Object(c["D"])((function(){return["info"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(o,{key:0,instance:a.updatedTraining.info},null,8,["instance"])):Object(c["f"])("",!0),"messages"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(i,{key:1,instance:a.updatedTraining.messages},null,8,["instance"])):Object(c["f"])("",!0),"details"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(l,{key:2,instance:a.updatedTraining.details},null,8,["instance"])):Object(c["f"])("",!0),"hotel"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(u,{key:3,congress:a.updatedTraining.hotel},null,8,["congress"])):Object(c["f"])("",!0),"day"===s.section?(Object(c["q"])(),Object(c["e"])(d,{key:4,instance:a.updatedTraining.day},null,8,["instance"])):Object(c["f"])("",!0),"activities"===s.section?(Object(c["q"])(),Object(c["e"])(b,{key:5,instance:a.updatedTraining.activities},null,8,["instance"])):Object(c["f"])("",!0),"download"===s.section?(Object(c["q"])(),Object(c["e"])(p,{key:6,congress:a.updatedTraining.download},null,8,["congress"])):Object(c["f"])("",!0),"contacts"===s.section?(Object(c["q"])(),Object(c["e"])(h,{key:7,instance:a.updatedTraining.contacts},null,8,["instance"])):Object(c["f"])("",!0)]})),_:1},8,["section","sections","title","onChangeSection"])}var Dp=Object(c["G"])("data-v-277b0ce6");Object(c["t"])("data-v-277b0ce6");var $p={class:"flex flex-col"},Tp={class:"flex flex-col bg-light-red rounded-12 p-6 mx-8"},Ap={class:"flex justify-between items-start mb-4"},Ip={class:"flex flex-col"},Rp=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"From",-1),Pp={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},Mp={class:"font-helvetica text-14 text-red spacing-2 line-24"},Lp={class:"flex flex-col"},Np=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"To",-1),Bp={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},Up={class:"font-helvetica text-14 text-red spacing-2 line-24"},Fp={class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26 px-8"},zp={class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28"};Object(c["r"])();var Ep=Dp((function(e,t,n,r,s,a){var o=Object(c["y"])("big-button"),i=Object(c["y"])("detail-section"),l=Object(c["y"])("ion-img"),u=Object(c["y"])("square-container");return Object(c["q"])(),Object(c["e"])("div",$p,[Object(c["h"])("div",{class:"ml-8 bg-white rounded-12 relative mr-4 gallery-container elevated-shadow overflow-hidden bg-contain bg-no-repeat bg-center",style:"background-image:url('".concat(a.training.image,"')")},null,4),Object(c["h"])(i,{label:a.training.name},{default:Dp((function(){return[Object(c["h"])("span",{class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26 px-8 mb-4",innerHTML:a.training.subtitle},null,8,["innerHTML"]),Object(c["h"])("div",Tp,[Object(c["h"])("div",Ap,[Object(c["h"])("div",Ip,[Rp,Object(c["h"])("span",Pp,Object(c["A"])(a.training.first_date),1),Object(c["h"])("span",Mp,Object(c["A"])(a.training.first_date_time),1)]),Object(c["h"])("div",Lp,[Np,Object(c["h"])("span",Bp,Object(c["A"])(a.training.last_date),1),Object(c["h"])("span",Up,Object(c["A"])(a.training.last_date_time),1)])]),a.training.save_event&&a.training.save_event.length?(Object(c["q"])(),Object(c["e"])(o,{key:0,label:"Save in calendar",onOnClick:a.saveEvent},null,8,["onOnClick"])):Object(c["f"])("",!0)])]})),_:1},8,["label"]),a.training.description&&a.training.description.length?(Object(c["q"])(),Object(c["e"])(i,{key:0,label:"Description"},{default:Dp((function(){return[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mt-0",innerHTML:a.training.description},null,8,["innerHTML"])]})),_:1})):Object(c["f"])("",!0),a.training.link&&a.training.link.length?(Object(c["q"])(),Object(c["e"])(i,{key:1,label:"Link for Registration",noSeparator:""},{default:Dp((function(){return[Object(c["h"])("span",Fp,Object(c["A"])(a.training.text_over_website),1),Object(c["h"])("div",{class:"flex mt-2 items-center relative mx-8",onClick:t[1]||(t[1]=function(){return a.openLink&&a.openLink.apply(a,arguments)})},[Object(c["h"])(u,{bgClass:"bg-light-grey",squareSize:"44",classes:"pointer-events-none flex"},{default:Dp((function(){return[Object(c["h"])(l,{src:"/assets/button-icons/open-link.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("span",zp,Object(c["A"])(a.training.link),1)])]})),_:1})):Object(c["f"])("",!0)])})),Vp={components:{DetailSection:ls,IonImg:i["d"],BigButton:Qt,SquareContainer:Xe},props:{instance:Object},computed:{training:function(){if(this.instance&&this.instance.content){var e=Object.assign({},this.instance.content);return e}return{}}},methods:{saveEvent:function(){window.open(this.training.save_event)},openLink:function(){window.open(this.training.link)}}};n("46a2");const Gp=d()(Vp,[["render",Ep],["__scopeId","data-v-277b0ce6"]]);var Hp=Gp,Wp={class:"flex flex-col"},Yp={class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28"},Jp={class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28"};function Kp(e,t,n,r,s,a){var o=Object(c["y"])("image-gallery"),i=Object(c["y"])("ion-img"),l=Object(c["y"])("square-container"),u=Object(c["y"])("detail-section");return Object(c["q"])(),Object(c["e"])("div",Wp,[Object(c["h"])(o,{gallery:a.updatedVenueGallery},null,8,["gallery"]),Object(c["h"])(u,{label:"Venue"},{default:Object(c["D"])((function(){return[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.congressDescription},null,8,["innerHTML"]),a.congressMaps&&a.congressMaps.link&&a.congressMaps.link.length?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:"flex relative mb-4 mx-8 items-center",onClick:t[1]||(t[1]=function(e){return a.openLink(a.congressMaps.link)})},[Object(c["h"])(l,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/pin.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("span",Yp,Object(c["A"])(a.congressMaps.label),1)])):Object(c["f"])("",!0),a.congressDownloadMaps&&a.congressDownloadMaps.link&&a.congressDownloadMaps.link.length?(Object(c["q"])(),Object(c["e"])("div",{key:1,class:"flex relative mx-8 items-center",onClick:t[2]||(t[2]=function(e){return a.openLink(a.congressDownloadMaps.link)})},[Object(c["h"])(l,{bgClass:"bg-light-grey",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/download.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("span",Jp,Object(c["A"])(a.congressDownloadMaps.label),1)])):Object(c["f"])("",!0)]})),_:1}),Object(c["h"])(u,{label:"Main Topics"},{default:Object(c["D"])((function(){return[a.training.lima_booth&&a.training.lima_booth&&a.training.lima_booth.gallery&&!a.training.lima_booth.gallery?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])(o,{key:0,gallery:a.training.lima_booth.gallery},null,8,["gallery"])),Object(c["h"])("div",{class:a.training.lima_booth&&a.training.lima_booth.gallery&&a.training.lima_booth.gallery.length?"mt-8":""},[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.training.lima_booth.description},null,8,["innerHTML"])],2)]})),_:1}),a.formattedDescriptionInfo&&a.formattedDescriptionInfo.length?(Object(c["q"])(),Object(c["e"])(u,{key:0,label:"Useful information"},{default:Object(c["D"])((function(){return[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.training.useful_information.description},null,8,["innerHTML"])]})),_:1})):Object(c["f"])("",!0)])}var Xp={components:{ImageGallery:vl,DetailSection:ls,IonImg:i["d"],SquareContainer:Xe},props:{instance:Object},computed:{training:function(){return this.instance&&this.instance.content?Object.assign({},this.instance.content):{}},updatedVenueGallery:function(){return this.training&&this.training.congress_venue&&this.training.congress_venue.gallery&&this.training.congress_venue.gallery.length?this.training.congress_venue.gallery:[]},congressDescription:function(){return this.training.congress_venue&&this.training.congress_venue.description?this.training.congress_venue.description:""},formattedDescriptionInfo:function(){return this.training.useful_information&&this.training.useful_information.description?this.training.useful_information.description:""},mainTopics:function(){return this.training.useful_information&&this.training.useful_information.description?this.training.useful_information.description:""},congressMaps:function(){return!!(this.training.congress_venue&&this.training.congress_venue.link_googlemaps&&this.training.congress_venue.link_googlemaps.length)&&{link:this.training.congress_venue.link_googlemaps,label:this.training.congress_venue.link_googlemaps_label}},congressDownloadMaps:function(){return!!(this.training.congress_venue&&this.training.congress_venue.link_download&&this.training.congress_venue.link_download.length)&&{link:this.training.congress_venue.link_download,label:this.training.congress_venue.link_download_label}}},methods:{openLink:function(e){window.open(e)}}};const Qp=d()(Xp,[["render",Kp]]);var Zp=Qp,eh=Object(c["G"])("data-v-0f54a5d2");Object(c["t"])("data-v-0f54a5d2");var th={class:"flex flex-col mx-8"},nh={class:"relative flex mb-4"},rh={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},sh={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},ah=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," Name ",-1),ch={class:"relative flex mb-4"},oh={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},ih={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},lh=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," Phone ",-1),uh={class:"relative flex mb-4"},dh={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},bh={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},ph=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," E-mail ",-1),hh={key:0,class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26 mt-4"},fh={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},mh={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"};Object(c["r"])();var gh=eh((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("detail-section");return Object(c["q"])(),Object(c["e"])("div",th,[Object(c["h"])(l,{noPadding:"",label:"Main Contact"},{default:eh((function(){return[Object(c["h"])("div",nh,[Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:eh((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/open-link-white.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",rh,[Object(c["h"])("span",sh,Object(c["A"])(a.training.name),1),ah])]),Object(c["h"])("div",ch,[Object(c["h"])("a",{href:"tel:"+a.training.phone,title:"phone",class:"absolute top-0 left-0 w-full h-full"},null,8,["href"]),Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:eh((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/phone-white.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",oh,[Object(c["h"])("span",ih,Object(c["A"])(a.training.phone),1),lh])]),Object(c["h"])("div",uh,[Object(c["h"])("a",{href:"mailto:"+a.training.email,title:"mail to",class:"absolute top-0 left-0 w-full h-full"},null,8,["href"]),Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:eh((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/mail-white.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",dh,[Object(c["h"])("span",bh,Object(c["A"])(a.training.email),1),ph])]),a.training.text_over_website&&a.training.text_over_website.length?(Object(c["q"])(),Object(c["e"])("span",hh,Object(c["A"])(a.training.text_over_website),1)):Object(c["f"])("",!0),a.training.website&&a.training.website.length?(Object(c["q"])(),Object(c["e"])("div",{key:1,onClick:t[1]||(t[1]=function(e){return a.openLink(a.training.website)}),class:"relative flex items-center mt-2 mb-4"},[Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:eh((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/open-link-white.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",fh,[Object(c["h"])("span",mh,Object(c["A"])(a.training.website),1)])])):Object(c["f"])("",!0)]})),_:1}),Object(c["h"])(l,{noPadding:"",label:"Venue"},{default:eh((function(){return[Object(c["h"])("p",{class:"font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mb-4",innerHTML:a.updatedVenue},null,8,["innerHTML"])]})),_:1}),a.updatedHotel?(Object(c["q"])(),Object(c["e"])(l,{key:0,noPadding:"",label:"Hotel"},{default:eh((function(){return[Object(c["h"])("p",{class:"font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mb-4",innerHTML:a.updatedHotel},null,8,["innerHTML"])]})),_:1})):Object(c["f"])("",!0),a.updatedStaff?(Object(c["q"])(),Object(c["e"])(l,{key:1,noPadding:"",label:"Staff",noSeparator:""},{default:eh((function(){return[Object(c["h"])("p",{class:"font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mb-4 staff",innerHTML:a.updatedStaff},null,8,["innerHTML"])]})),_:1})):Object(c["f"])("",!0)])})),Oh={components:{DetailSection:ls,IonImg:i["d"],SquareContainer:Xe},props:{instance:Object},mounted:function(){var e=this;setTimeout((function(){e.cleanParagraphs()}),500)},computed:{training:function(){if(this.instance&&this.instance.content){var e=Object.assign({},this.instance.content);return e}return{}},updatedVenue:function(){return this.training&&this.training.congress_venue?this.sanitizeManageText(this.training.congress_venue):{}},updatedHotel:function(){return this.training&&this.training.hotel?this.training.hotel:""},updatedStaff:function(){return this.training&&this.training.staff?this.training.staff:""}},methods:{openLink:function(e){window.open(e)}}};n("f93f");const jh=d()(Oh,[["render",gh],["__scopeId","data-v-0f54a5d2"]]);var vh=jh,yh={class:"flex flex-col relative border-l border-grey mx-4 mb-4 mt-2"},xh={class:"ml-8 relative p-4 bg-light-red rounded-8 flex flex-col mb-4 justify-between items-start"},wh={class:"font-helvetica text-red text-14 spacing-2 line-24 mb-2"},kh={class:"font-helvetica-medium text-dark-grey text-16 spacing-4 line-24 mb-2"},Ch={class:"font-helvetica text-grey text-14 spacing-44 line-20"};function Sh(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("accordions-list");return Object(c["q"])(),Object(c["e"])(i,{classes:"mt-4 px-8",list:a.computedInstance},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])("div",yh,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(t,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:[t>0?"mt-8":"","relative"]},[Object(c["h"])(o,{src:"/assets/button-icons/dot.svg",class:"absolute top-0",style:{width:"7px",height:"7px","margin-left":"-3.5px","margin-top":"1.35rem"}}),Object(c["h"])("div",xh,[Object(c["h"])("span",wh,Object(c["A"])(e.time),1),Object(c["h"])("span",kh,Object(c["A"])(e.title),1),Object(c["h"])("span",Ch,Object(c["A"])(e.subtitle),1)]),Object(c["h"])("p",{class:"mmt-0 mb-0 mr-0 ml-8 font-helvetica text-16 text-mid-dark-grey spacing-1 line-24",innerHTML:e.description},null,8,["innerHTML"])],2)})),128))])]})),_:1},8,["list"])}var _h={components:{AccordionsList:Fi,IonImg:i["d"]},props:{instance:Object},computed:{computedInstance:function(){if(this.instance&&this.instance.content){var e=this.instance.content.map((function(e){return{name:e.date,childs:[e.events],count:e.events.length}}));return e}return[]}},methods:{saveEvent:function(e){window.open(e.save_event)}}};const qh=d()(_h,[["render",Sh]]);var Dh=qh,$h={class:"flex flex-col justify-between items-start bg-white rounded-12 elevated-shadow px-6 py-4"},Th={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Ah={class:"font-helvetica text-grey text-14 spacing-44 line-24 mb-2"},Ih={class:"flex justify-between items-center w-full"},Rh={class:"bg-light-red rounded-6 px-2 mr-auto"},Ph={class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"},Mh={class:"flex ml-2"},Lh=Object(c["h"])("span",{class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28"}," Open in Maps ",-1);function Nh(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("accordions-list");return Object(c["q"])(),Object(c["e"])(l,{classes:"mt-4 px-8",list:a.activities},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])("div",$h,[Object(c["h"])("span",Th,Object(c["A"])(t.title),1),Object(c["h"])("span",Ah,Object(c["A"])(t.location),1),Object(c["h"])("div",Ih,[Object(c["h"])("div",Rh,[Object(c["h"])("span",Ph,Object(c["A"])(t.date),1)]),Object(c["h"])("div",Mh,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(t.experts,(function(e,t){return Object(c["q"])(),Object(c["e"])(i,{key:t,rounded:"6",squareSize:"24",classes:[e.image?"":"flex bg-red","ml-2"]},{default:Object(c["D"])((function(){return[e.image?(Object(c["q"])(),Object(c["e"])(o,{key:0,src:e.image},null,8,["src"])):Object(c["f"])("",!0)]})),_:2},1032,["classes"])})),128))])]),"lunch"!==t.type?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:"flex mt-4 items-center relative",onClick:function(e){return a.openLink(t.googlemaps)}},[Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/pin.svg",class:"m-auto"})]})),_:1}),Lh],8,["onClick"])):Object(c["f"])("",!0)])]})),_:1},8,["list"])}var Bh={components:{IonImg:i["d"],AccordionsList:Fi,SquareContainer:Xe},props:{instance:Object},computed:{activities:function(){if(this.instance&&this.instance.content&&this.instance.content.length){var e=this.instance.content.map((function(e){return{name:e.label,childs:e.events.map((function(e){return e})),count:e.events.length}}));return e}return[]}},methods:{openLink:function(e){window.open(e)}}};const Uh=d()(Bh,[["render",Nh]]);var Fh=Uh,zh={class:"flex flex-col pb-10"},Eh=Object(c["h"])("div",{class:"absolute ml-8 mt-8 bg-light-grey h-full",style:{"border-radius":"0 12px 12px 12px",width:"calc(100% - 4rem)"}},null,-1),Vh={class:"flex flex-col mx-16 mt-8 pt-8 relative z-10"},Gh={class:"font-helvetica-bold text-20 text-black spacing-2 line-28 mb-4"},Hh={key:0,class:"mt-4"};function Wh(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("image-gallery");return Object(c["q"])(),Object(c["e"])("div",zh,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.messages,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"relative flex flex-col mb-16"},[Eh,Object(c["h"])(o,{src:"assets/button-icons/message-triangle.svg",class:"absolute ml-8 mt-8",style:{transform:"translateY(-100%)",width:"16px"}}),Object(c["h"])("div",Vh,[Object(c["h"])("span",Gh,Object(c["A"])(e.title),1),Object(c["h"])("p",{class:"m-0 font-helvetica text-16 text-mid-dark-grey spacing-1 line-24",innerHTML:e.description},null,8,["innerHTML"])]),e.images&&e.images.length?(Object(c["q"])(),Object(c["e"])("div",Hh,[Object(c["h"])(i,{chatGallery:"",gallery:e.images,initMargin:"ml-16"},null,8,["gallery"])])):Object(c["f"])("",!0)])})),128))])}var Yh={components:{IonImg:i["d"],ImageGallery:vl},props:{instance:Object},computed:{messages:function(){return this.instance&&this.instance.content&&this.instance.content.length?this.instance.content:[]}}};const Jh=d()(Yh,[["render",Wh]]);var Kh=Jh,Xh={name:"SalesTrainingDetail",components:{CongressLayout:Pb,Info:Hp,Details:Zp,Hotels:pd,DayByDay:Dh,Activities:Fh,Testimonials:Kh,Downloads:ub,Contacts:vh},mixins:[Xa],data:function(){return{section:"info",training:{tabs:{info:{title:"Info",content:{}},details:{title:"Details",content:{congress_venue:{},timing_dates:{},lima_booth:{},useful_information:{}}},hotel:{title:"Hotel & Transfer",content:{hotel:{},transfer:{}}},day:{title:"Day by day",content:[]},activities:{title:"Activities",content:[]},key:{title:"Key messages",content:[]},downloads:{title:"Downloads",content:[]},contacts:{title:"Contacts",content:{}}}}}},computed:{title:function(){return this.updatedTraining&&this.updatedTraining.info&&this.updatedTraining.info.content&&this.updatedTraining.info.content.name?this.updatedTraining.info.content.name:"Training details"},updatedTraining:function(){var e=Object.assign({},this.training.tabs);return e},updatedSection:function(){return this.section},sectionsList:function(){for(var e=Object.keys(this.updatedTraining),t=[],n=0;n<e.length;n++)t.push({label:this.updatedTraining[e[n]].title,path:e[n]});return t}},methods:{selectSection:function(e){this.section=e}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,r,s,a,c;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=16;break}return n=e.$route.params.id,t.prev=2,t.next=5,e.$http({method:"GET",url:it.training.list+"/"+n,params:e.filters});case 5:c=t.sent,e.training=c,e.logPage((null===c||void 0===c||null===(r=c.tabs)||void 0===r||null===(s=r.info)||void 0===s||null===(a=s.content)||void 0===a?void 0:a.name)+" (Sales Training details)"||!1),t.next=14;break;case 10:t.prev=10,t.t0=t["catch"](2),console.error(t.t0),e.$toast({message:ot.errors.trainingDetail,color:"danger"});case 14:t.next=19;break;case 16:console.error("No training id in route"),e.$toast({message:ot.errors.trainingDetail,color:"danger"}),e.$router.push("/training");case 19:case"end":return t.stop()}}),t,null,[[2,10]])})))()}};const Qh=d()(Xh,[["render",qp]]);var Zh=Qh,ef=Object(c["G"])("data-v-2be63ce4");Object(c["t"])("data-v-2be63ce4");var tf={class:"my-8"},nf=Object(c["h"])("p",{class:"m-0 paragraph font-helvetica-bold text-black mb-2 text-20 pb-1 line-24 spacing-1"}," We believe in offering Surgeons more than just a simple course. ",-1);Object(c["r"])();var rf=ef((function(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("big-button"),l=Object(c["y"])("video-modal"),u=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(u,{withMargin:"",back:"/menu",label:"Let's L.E.A.R.N. together"},{default:ef((function(){return[Object(c["h"])("div",{class:"bg-black rounded-12 relative mr-4 gallery-container elevated-shadow overflow-hidden flex justify-center items-center cursor-pointer",onClick:t[1]||(t[1]=function(){return a.openVideo&&a.openVideo.apply(a,arguments)})},[Object(c["h"])(o,{src:"/assets/learn.jpeg",class:"w-full opacity-50 pointer-events-none"}),Object(c["h"])(o,{src:"/assets/button-icons/play-white.svg",class:"m-auto absolute z-10 elevated-shadow pointer-events-none"})]),Object(c["h"])(i,{color:"secondary",bgClass:"mt-8",label:"Go to L.E.A.R.N. calendar",onClick:a.routeToCalendar},null,8,["onClick"]),Object(c["h"])("div",tf,[nf,Object(c["h"])("p",{class:"m-0 paragraph font-helvetica-medium text-16 mb-2 pb-1 line-24 spacing-1 text-dark-grey",innerHTML:s.subtitle},null,8,["innerHTML"]),Object(c["h"])("p",{class:"m-0 paragraph font-helvetica text-16 line-24 spacing-1 text-mid-dark-grey",innerHTML:s.text},null,8,["innerHTML"])]),Object(c["h"])(l,{direct:"",video:s.video,open:s.isVideoOpen,onOnClose:a.closeVideo},null,8,["video","open","onOnClose"])]})),_:1})})),sf={components:{Page:hr,BigButton:Qt,VideoModal:$c},data:function(){return{video:{url:"https://limacorporate.com/video/learn/learn_for_surgeon_limacorporate_web_app.mp4"},subtitle:"WHAT IS L.E.A.R.N.?<br/>LimaCorporate's Education and Resource Network is a new medical education experience.",text:"We are all driven by the same goal: to restore the eMotion of Motion and together we always look for the best outcomes for patients.<br>Accordingly to your personal educational needs you will be able to establish your own pathway, choose virtual or in person training and establish a new network.<br>So let’s L.E.A.R.N. together, let’s L.E.A.R.N. from each other.",isVideoOpen:!1}},methods:{routeToCalendar:function(){this.$router.push("/learn/list")},openVideo:function(){this.isVideoOpen=!0},closeVideo:function(){this.isVideoOpen=!1}}};n("ea7e");const af=d()(sf,[["render",rf],["__scopeId","data-v-2be63ce4"]]);var cf=af,of={class:"flex flex-start items-center pointer-events-none px-8 w-full"};function lf(e,t,n,r,s,a){var o=Object(c["y"])("CourseCard"),i=Object(c["y"])("ion-list"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{back:"/learn",label:"L.E.A.R.N.",filters:s.filters,filtersOptions:s.filtersOptions,onOnFiltersChange:a.updateFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(s.list,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-2",key:t,onClick:function(t){return a.routeTo(e)}},[Object(c["h"])("div",of,[Object(c["h"])(o,{instance:e},null,8,["instance"])])],8,["onClick"])})),128))]})),_:1})]})),_:1},8,["filters","filtersOptions","onOnFiltersChange"])}var uf={class:"flex flex-col rounded-12 w-full p-6 pb-4 elevated-shadow bg-white"},df={class:"flex no-wrap mb-2 overflow-hidden"},bf={key:0,class:"inline-block font-helvetica-medium text-12 py-1 px-2 rounded-6 border border-grey text-grey whitespace-nowrap spacing-34 line-18"},pf={class:"block font-helvetica-medium text-black text-16 spacing-22 line-24"},hf={key:0,class:"block font-helvetica text-grey mt-2 text-14 spacing-44 line-24"},ff={key:1,class:"mr-auto my-2"},mf={class:"block font-helvetica-medium bg-light-red py-1 px-2 text-red text-12 spacing-34 line-18"},gf={class:"flex no-wrap overflow-hidden"},Of={key:0,class:"flex no-wrap py-2 pr-2"},jf={class:"uppercase text-grey text-10 m-auto"},vf={key:1,class:"border-l border-grey my-2",style:{width:"1px"}},yf={key:2,class:"flex no-wrap py-2 px-2"},xf={key:3,class:"border-l border-grey my-2",style:{width:"1px"}},wf={key:4,class:"flex no-wrap py-2 px-2"};function kf(e,t,n,r,s,a){var o=Object(c["y"])("square-container");return Object(c["q"])(),Object(c["e"])("div",uf,[Object(c["h"])("div",df,[Object(c["h"])("span",{class:["inline-block font-helvetica-medium text-12 py-1 px-2 rounded-6 text-white mr-2 whitespace-nowrap  spacing-34 line-18",a.bgColor]},Object(c["A"])(a.categoryName),3),n.instance.typology?(Object(c["q"])(),Object(c["e"])("span",bf,Object(c["A"])(n.instance.typology),1)):Object(c["f"])("",!0)]),Object(c["h"])("span",pf,Object(c["A"])(n.instance.title),1),n.instance.subtitle&&n.instance.subtitle.length?(Object(c["q"])(),Object(c["e"])("span",hf,Object(c["A"])(n.instance.subtitle),1)):Object(c["f"])("",!0),n.instance.print_date&&n.instance.print_date.length?(Object(c["q"])(),Object(c["e"])("div",ff,[Object(c["h"])("span",mf,Object(c["A"])(n.instance.print_date),1)])):Object(c["f"])("",!0),Object(c["h"])("div",gf,[n.instance.language?(Object(c["q"])(),Object(c["e"])("div",Of,[Object(c["h"])(o,{classes:"bg-white flex",squareSize:24},{default:Object(c["D"])((function(){return[Object(c["h"])("span",jf,Object(c["A"])(n.instance.language),1)]})),_:1})])):Object(c["f"])("",!0),n.instance.language?(Object(c["q"])(),Object(c["e"])("div",vf)):Object(c["f"])("",!0),n.instance.segment?(Object(c["q"])(),Object(c["e"])("div",yf,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.instance.segment,(function(e){return Object(c["q"])(),Object(c["e"])(o,{classes:"bg-white overflow-hidden",key:e.id,squareSize:24},{default:Object(c["D"])((function(){return[Object(c["h"])("img",{src:e.image,class:"w-full h-full"},null,8,["src"])]})),_:2},1024)})),128))])):Object(c["f"])("",!0),n.instance.segment&&n.instance.speakers&&n.instance.speakers.length?(Object(c["q"])(),Object(c["e"])("div",xf)):Object(c["f"])("",!0),n.instance.speakers?(Object(c["q"])(),Object(c["e"])("div",wf,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.instance.speakers,(function(e){return Object(c["q"])(),Object(c["e"])(o,{classes:"bg-white overflow-hidden mr-2",key:e,squareSize:24},{default:Object(c["D"])((function(){return[Object(c["h"])("img",{src:e.image,class:"w-full h-full"},null,8,["src"])]})),_:2},1024)})),128))])):Object(c["f"])("",!0)])])}var Cf={name:"CourseCard",components:{SquareContainer:Xe},props:{instance:{type:Object,default:function(){}}},computed:{bgColor:function(){if(this.instance&&this.instance.category)switch(this.instance.category.class){case"course":return"bg-orange";case"online":return"bg-green";case"third":return"bg-cyan";default:return"bg-light-grey"}return"bg-light-grey"},categoryName:function(){if(this.instance&&this.instance.category)switch(this.instance.category.class){case"course":return"Course";case"online":return"Online course";case"third":return"3rd-Party event";default:return"Other"}return"Other"}}};const Sf=d()(Cf,[["render",kf]]);var _f=Sf,qf={components:{Page:hr,IonList:i["f"],CourseCard:_f},data:function(){return{list:[],filtersOptions:{},filters:{year:(new Date).getFullYear()}}},created:function(){this.fetchCourses()},methods:{routeTo:function(e){this.$router.push("/learn/".concat(e.id))},fetchCourses:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return e.$router.push({path:e.$route.path,query:e.filters}),t.prev=1,t.next=4,e.$http({method:"GET",url:it.learn.list,params:e.filters});case 4:n=t.sent,n&&(e.list=n.list,e.filtersOptions=n.filters||{}),t.next=12;break;case 8:t.prev=8,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:ot.errors.learn,color:"danger"});case 12:case"end":return t.stop()}}),t,null,[[1,8]])})))()},updateFilters:function(e){this.filters=e}},watch:{filters:function(e){this.$router.push({path:this.$route.path,query:e}),this.fetchCourses(e)}}};const Df=d()(qf,[["render",lf]]);var $f=Df,Tf=Object(c["h"])("div",{class:"mb-2"},null,-1),Af=Object(c["h"])("div",null," ",-1);function If(e,t,n,r,s,a){var o=Object(c["y"])("section-button"),i=Object(c["y"])("carousel"),l=Object(c["y"])("Detail"),u=Object(c["y"])("Agenda"),d=Object(c["y"])("register-modal"),b=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(b,{back:"/learn/list",share:a.shareObject,aboveTitle:a.typeName,customGradient:a.gradient,label:s.course.title||"Course"},{"above-title":Object(c["D"])((function(){return[Object(c["h"])("span",{class:["font-helvetica-medium text-12 py-1 px-2 rounded-6 text-white whitespace-nowrap spacing-34 line-18",a.bgColor]},Object(c["A"])(a.typeName),3),Tf]})),default:Object(c["D"])((function(){return[s.course.show_tabs?(Object(c["q"])(),Object(c["e"])(i,{key:0,id:"sections-carousel",classes:"pt-4 -my-4 pb-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(s.sections,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,label:e.label,active:s.section===e.path,classes:[0===t?"ml-8":""," mr-4"],onOnClick:function(t){return a.routeToSection(e.path)}},null,8,["label","active","classes","onOnClick"])})),128)),Af]})),_:1})):Object(c["f"])("",!0),"info"===s.section?(Object(c["q"])(),Object(c["e"])(l,{key:1,course:s.course,onRegister:a.onRegister},null,8,["course","onRegister"])):Object(c["f"])("",!0),"agenda"===s.section?(Object(c["q"])(),Object(c["e"])(u,{key:2,course:s.course,onRegister:a.onRegister},null,8,["course","onRegister"])):Object(c["f"])("",!0),Object(c["h"])(d,{course:s.course,open:s.isRegisterOpened,"selected-day":s.selectedDay,onOnClose:a.onClose},null,8,["course","open","selected-day","onOnClose"])]})),_:1},8,["share","aboveTitle","customGradient","label"])}n("a15b");var Rf={class:"flex flex-col"},Pf={class:"mx-8 my-4 flex flex-col"},Mf={class:"mb-2 flex no-wrap"},Lf={class:"w-1/2"},Nf=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"}," Course type ",-1),Bf={class:"block font-helvetica text-16 spacing-2 line-26 text-mid-dark-grey mr-4"},Uf={class:"w-1/2"},Ff=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"}," Segment ",-1),zf={class:"block font-helvetica text-16 spacing-2 line-26 text-mid-dark-grey"},Ef={class:"mb-2 flex no-wrap"},Vf={class:"w-1/2"},Gf=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"}," Location ",-1),Hf={class:"block font-helvetica text-16 spacing-2 line-26 text-mid-dark-grey mr-4"},Wf={class:"w-1/2"},Yf=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"}," Language ",-1),Jf={class:"block font-helvetica text-16 spacing-2 line-26 text-mid-dark-grey"},Kf={key:0,class:"flex no-wrap"},Xf={class:"w-1/2"},Qf=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"}," Level ",-1),Zf={class:"block font-helvetica text-16 spacing-2 line-26 text-mid-dark-grey mr-4"},em=Object(c["h"])("div",{class:"w-1/2"},null,-1),tm={key:0,class:"mb-8"},nm={key:1,class:"mx-8 flex flex-col bg-light-red rounded-12 p-6"},rm={class:"flex justify-between items-start"},sm={class:"flex flex-col"},am=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-2"}," From ",-1),cm={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},om={class:"font-helvetica text-14 text-red spacing-2 line-24"},im={class:"flex flex-col"},lm=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-2"}," To ",-1),um={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},dm={class:"font-helvetica text-14 text-red spacing-2 line-24"},bm={key:2,class:"mx-8 mt-4"},pm={class:"flex flex-start items-center pointer-events-none"},hm=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16"}," Register to this course ",-1),fm={class:"flex flex-start items-center pointer-events-none"},mm=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16"}," Registration open on Evenium Platform ",-1),gm={key:2,class:"relative flex flex-row justify-between items-center bg-transparent py-2"},Om=Object(c["h"])("a",{href:"mailto:learn@limacorporate.com",class:"absolute top-0 left-0 w-full h-full",target:"_blank"},null,-1),jm={class:"flex flex-start items-center pointer-events-none"},vm=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16"}," Ask for more information ",-1),ym={class:"mx-8"},xm={key:0,class:"mx-8 mt-4 flex justify-start"},wm={class:"flex flex-start items-center pointer-events-none px-8 w-full"},km={class:"flex flex-col justify-between items-start"},Cm={class:"font-helvetica-medium text-dark-grey text-16 spacing-5 line-28"},Sm={class:"font-helvetica text-grey text-14 spacing-44 line-24"},_m={key:0,class:"mx-8 mt-2 flex justify-start"},qm={class:"mx-8 flex flex-col pt-8"};function Dm(e,t,n,r,s,a){var o=Object(c["y"])("video-gallery"),i=Object(c["y"])("big-button"),l=Object(c["y"])("ion-img"),u=Object(c["y"])("square-container"),d=Object(c["y"])("ion-list"),b=Object(c["y"])("separator"),p=Object(c["y"])("section-button"),h=Object(c["y"])("detail-section"),f=Object(c["y"])("image-gallery"),m=Object(c["y"])("document-list-item");return Object(c["q"])(),Object(c["e"])("div",Rf,[Object(c["h"])("div",Pf,[Object(c["h"])("div",Mf,[Object(c["h"])("div",Lf,[Nf,Object(c["h"])("span",Bf,Object(c["A"])(n.course.category?n.course.category.label:""),1)]),Object(c["h"])("div",Uf,[Ff,Object(c["h"])("span",zf,Object(c["A"])(n.course.segment&&n.course.segment.length?n.course.segment.join(", "):""),1)])]),Object(c["h"])("div",Ef,[Object(c["h"])("div",Vf,[Gf,Object(c["h"])("span",Hf,Object(c["A"])(n.course.location||"Online"),1)]),Object(c["h"])("div",Wf,[Yf,Object(c["h"])("span",Jf,Object(c["A"])(n.course.language||""),1)])]),n.course.course_level?(Object(c["q"])(),Object(c["e"])("div",Kf,[Object(c["h"])("div",Xf,[Qf,Object(c["h"])("span",Zf,Object(c["A"])(n.course.course_level||""),1)]),em])):Object(c["f"])("",!0)]),a.videoGallery&&a.videoGallery.length?(Object(c["q"])(),Object(c["e"])("div",tm,[Object(c["h"])(o,{"no-text":"",gallery:a.videoGallery},null,8,["gallery"])])):Object(c["f"])("",!0),n.course.save_outlook?(Object(c["q"])(),Object(c["e"])("div",nm,[Object(c["h"])("div",rm,[Object(c["h"])("div",sm,[am,Object(c["h"])("span",cm,Object(c["A"])(n.course.save_outlook.start_date.date),1),Object(c["h"])("span",om,Object(c["A"])(n.course.save_outlook.start_date.time),1)]),Object(c["h"])("div",im,[lm,Object(c["h"])("span",um,Object(c["A"])(n.course.save_outlook.end_date.date),1),Object(c["h"])("span",dm,Object(c["A"])(n.course.save_outlook.end_date.time),1)])]),n.course.save_outlook&&n.course.save_outlook.link?(Object(c["q"])(),Object(c["e"])(i,{key:0,bgClass:"mt-4",label:"Save in calendar",onOnClick:t[1]||(t[1]=function(e){return a.saveEvent()})})):Object(c["f"])("",!0)])):Object(c["f"])("",!0),n.course.show_register||n.course.evenium||n.course.show_learn_contact?(Object(c["q"])(),Object(c["e"])("div",bm,[Object(c["h"])(d,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[n.course.show_register?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:" flex flex-row justify-between items-center bg-transparent py-2",onClick:t[2]||(t[2]=function(t){return e.$emit("register")})},[Object(c["h"])("div",pm,[Object(c["h"])(u,{bgClass:"bg-light-grey",classes:"mr-2",squareSize:"44"},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{src:"/assets/button-icons/register-black.svg"})]})),_:1}),hm])])):Object(c["f"])("",!0),n.course.evenium?(Object(c["q"])(),Object(c["e"])("div",{key:1,class:" flex flex-row justify-between items-center bg-transparent py-2",onClick:t[3]||(t[3]=function(){return a.openLink&&a.openLink.apply(a,arguments)})},[Object(c["h"])("div",fm,[Object(c["h"])(u,{bgClass:"bg-light-grey",classes:"mr-2",squareSize:"44"},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{src:"/assets/button-icons/evenium-black.svg"})]})),_:1}),mm])])):Object(c["f"])("",!0),n.course.show_learn_contact?(Object(c["q"])(),Object(c["e"])("div",gm,[Om,Object(c["h"])("div",jm,[Object(c["h"])(u,{bgClass:"bg-light-grey",classes:"mr-2",squareSize:"44"},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{src:"/assets/button-icons/letter-black.svg"})]})),_:1}),vm])])):Object(c["f"])("",!0)]})),_:1})])):Object(c["f"])("",!0),Object(c["h"])("div",ym,[Object(c["h"])(b,{topMargin:""})]),a.formattedDescription&&a.formattedDescription.length?(Object(c["q"])(),Object(c["e"])(h,{key:3,label:"Description"},{default:Object(c["D"])((function(){return[Object(c["h"])("p",{class:["px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4",s.isReadMore||"clamped"],innerHTML:a.formattedDescription},null,10,["innerHTML"]),a.formattedDescription&&a.formattedDescription.length?(Object(c["q"])(),Object(c["e"])("div",xm,[Object(c["h"])(p,{label:s.isReadMore?"Read less":"Read more",onOnClick:t[4]||(t[4]=function(e){return s.isReadMore=!s.isReadMore})},null,8,["label"])])):Object(c["f"])("",!0)]})),_:1})):Object(c["f"])("",!0),n.course.speakers&&n.course.speakers.length?(Object(c["q"])(),Object(c["e"])(h,{key:4,label:"Speakers"},{default:Object(c["D"])((function(){return[Object(c["h"])(d,{class:"bg-transparent pb-0 mb-0"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.speakersArray,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent mb-4",key:t},[Object(c["h"])("div",wm,[Object(c["h"])(u,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 overflow-hidden"},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{src:e.preview,class:"w-full h-full"},null,8,["src"])]})),_:2},1024),Object(c["h"])("div",km,[Object(c["h"])("span",Cm,Object(c["A"])(e.name),1),Object(c["h"])("span",Sm,Object(c["A"])(e.country),1)])])])})),128))]})),_:1}),a.showViewAll?(Object(c["q"])(),Object(c["e"])("div",_m,[Object(c["h"])(p,{label:s.isViewAll?"View less":"View all",onOnClick:t[5]||(t[5]=function(e){return s.isViewAll=!s.isViewAll})},null,8,["label"])])):Object(c["f"])("",!0)]})),_:1})):Object(c["f"])("",!0),a.imageGallery&&a.imageGallery.length?(Object(c["q"])(),Object(c["e"])(h,{key:5,label:"Images"},{default:Object(c["D"])((function(){return[Object(c["h"])(f,{gallery:a.imageGallery},null,8,["gallery"])]})),_:1})):Object(c["f"])("",!0),n.course.files&&n.course.files.length?(Object(c["q"])(),Object(c["e"])(h,{key:6,label:"Documents"},{default:Object(c["D"])((function(){return[Object(c["h"])("div",qm,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.course.files,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"mb-4",key:t},[Object(c["h"])(m,{type:"my",document:e,actions:e.actions},null,8,["document","actions"])])})),128))])]})),_:1})):Object(c["f"])("",!0)])}var $m={components:{IonImg:i["d"],IonList:i["f"],Separator:ns,BigButton:Qt,ImageGallery:vl,VideoGallery:bl,SectionButton:Jr,DetailSection:ls,SquareContainer:Xe,DocumentListItem:mn},props:{course:{type:Object}},data:function(){return{isReadMore:!1,isViewAll:!1}},computed:{formattedDescription:function(){return this.course.description&&this.course.description.length?this.sanitizeManageText(this.course.description):""},showViewAll:function(){return this.course.speakers&&this.course.speakers.length>3},speakersArray:function(){return this.showViewAll&&!this.isViewAll?this.course.speakers.slice(0,3):this.course.speakers||[]},imageGallery:function(){return this.course.images||[]},videoGallery:function(){return this.course.videos||[]}},methods:{saveEvent:function(){window.open(this.course.save_outlook.link)},openLink:function(){window.open(this.course.evenium)}}};const Tm=d()($m,[["render",Dm]]);var Am=Tm,Im={class:"flex flex-col"},Rm={class:"p-8 bg-light-red flex flex-col rounded-8 mb-4"},Pm={class:"block mb-2 font-helvetica text-14 text-red spacing-2 line-24"},Mm={class:"block mb-4 font-helvetica-medium text-16 text-dark-grey spacing-4 line-24"},Lm={class:"flex flex-start items-center pointer-events-none w-full"},Nm={class:"flex flex-col justify-between items-start"},Bm={class:"font-helvetica-medium text-dark-grey text-16 spacing-5 line-28"},Um={class:"font-helvetica text-grey text-14 spacing-44 line-24"},Fm={class:"flex flex-col pt-8"};function zm(e,t,n,r,s,a){var o=Object(c["y"])("separator"),i=Object(c["y"])("ion-img"),l=Object(c["y"])("square-container"),u=Object(c["y"])("ion-list"),d=Object(c["y"])("big-button"),b=Object(c["y"])("document-list-item"),p=Object(c["y"])("accordions-list");return Object(c["q"])(),Object(c["e"])(p,{classes:"mt-4 px-8",list:a.list},{default:Object(c["D"])((function(t){var r=t.item;return[Object(c["h"])("div",Im,[Object(c["h"])("div",Rm,[Object(c["h"])("div",null,[Object(c["h"])("span",Pm,Object(c["A"])(r.time),1),Object(c["h"])("span",Mm,Object(c["A"])(r.title),1)]),r.speakers&&r.speakers.length?(Object(c["q"])(),Object(c["e"])(o,{key:0,noYMargin:""})):Object(c["f"])("",!0),Object(c["h"])(u,{class:"bg-transparent py-0 mt-4"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(r.speakers,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:["flex flex-row justify-between items-center bg-transparent",t===r.speakers.length-1||"mb-4"],key:t},[Object(c["h"])("div",Lm,[Object(c["h"])(l,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 overflow-hidden"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:e.preview,class:"w-full h-full"},null,8,["src"])]})),_:2},1024),Object(c["h"])("div",Nm,[Object(c["h"])("span",Bm,Object(c["A"])(e.name),1),Object(c["h"])("span",Um,Object(c["A"])(e.country),1)])])],2)})),128))]})),_:2},1024),n.course.show_register?(Object(c["q"])(),Object(c["e"])(o,{key:1,noYMargin:""})):Object(c["f"])("",!0),n.course.show_register?(Object(c["q"])(),Object(c["e"])(d,{key:2,bgClass:"mt-4",label:"Register to this course",onOnClick:function(t){return e.$emit("register",r)}},null,8,["onOnClick"])):Object(c["f"])("",!0)]),Object(c["h"])("p",{class:"font-helvetica-normal text-mid-dark-grey text-16 spacing-1 line-24 mt-4",innerHTML:r.description},null,8,["innerHTML"]),Object(c["h"])("div",Fm,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(r.files,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"mb-4",key:t},[Object(c["h"])(b,{type:"my",document:e,actions:e.actions},null,8,["document","actions"])])})),128))])])]})),_:1},8,["list"])}var Em={name:"Agenda",components:{BigButton:Qt,Separator:ns,AccordionsList:Fi,SquareContainer:Xe,DocumentListItem:mn},props:{course:{type:Object}},computed:{list:function(){if(this.course&&this.course.days&&this.course.days.length){var e=this.course.days.map((function(e){return{name:e.date_text,childs:[Object(s["a"])({},e)],count:null}}));return console.log(e),e}return[]}}};const Vm=d()(Em,[["render",zm]]);var Gm=Vm,Hm={key:0,class:"fixed top-0 left-0 w-full h-full",style:{"z-index":"50"}},Wm={class:"w-full h-full relative pt-20 gradient-background"},Ym={class:"flex flex-col px-8"},Jm=Object(c["g"])(" Register to this course "),Km={class:"relative flex flex-col"},Xm=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"},[Object(c["g"])(" Select days"),Object(c["h"])("span",{class:"text-red"},"*")],-1),Qm={class:"flex flex-wrap mt-1 mb-2 text-black"},Zm={class:"square rounded-4 mr-2 width-24 height-24 relative flex"},eg={class:"block text-black font-helvetica-medium text-16 spacing-5 line-30"},tg={class:"flex flex-col mb-2"},ng=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"},[Object(c["g"])(" Your name"),Object(c["h"])("span",{class:"text-red"},"*")],-1),rg={class:"flex flex-col mb-2"},sg=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"},[Object(c["g"])(" Email"),Object(c["h"])("span",{class:"text-red"},"*")],-1),ag={class:"flex flex-col mb-2"},cg=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"}," Hospital ",-1),og={class:"flex flex-col mb-2"},ig=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"}," Category ",-1),lg={class:"mx-8"},ug={class:"mb-4"},dg={class:"block text-black font-helvetica-normal text-14 spacing-4 line-18"},bg=Object(c["g"])(" I read the "),pg=Object(c["g"])(" and I authorize the use of personal data under the Reg.UE 2016/679 (GDPR)"),hg=Object(c["h"])("span",{class:"text-red"},"*",-1),fg={class:"mb-4"},mg={class:"block text-black font-helvetica-normal text-14 spacing-4 line-18"},gg=Object(c["g"])(" I read the "),Og=Object(c["g"])(" and I authorize the use of personal data under the Reg.UE 2016/679 (GDPR)"),jg=Object(c["h"])("span",{class:"text-red"},"*",-1),vg={class:"w-full px-8 pb-4"};function yg(e,t,n,r,s,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("Title"),u=Object(c["y"])("ion-input"),d=Object(c["y"])("custom-select"),b=Object(c["y"])("custom-checkbox"),p=Object(c["y"])("big-button");return s.isOpened?(Object(c["q"])(),Object(c["e"])("div",Hm,[Object(c["h"])("div",Wm,[Object(c["h"])("div",{class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;min-height:70px;":"height:90px;min-height:90px;"},[Object(c["h"])(i,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.close},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])],4),Object(c["h"])("form",{class:"flex h-full flex-col justify-between",onSubmit:t[10]||(t[10]=function(){return a.onSubmit&&a.onSubmit.apply(a,arguments)})},[Object(c["h"])("div",Ym,[Object(c["h"])(l,{titleClass:"pb-8 text-black font-helvetica-bold text-28 block"},{default:Object(c["D"])((function(){return[Jm]})),_:1}),Object(c["h"])("div",Km,[Xm,Object(c["h"])("div",Qm,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.daysOptions,(function(e){return Object(c["q"])(),Object(c["e"])("div",{key:e.label,class:[(s.form.days||[]).includes(e.value)?"bg-white course-card-internal-shadow selected":"bg-light-grey","mr-2 mb-2 px-4 py-2 rounded-8 flex no-wrap items-center checkbox cursor-pointer"],onClick:function(t){return a.selectDay(e)}},[Object(c["h"])("div",Zm,[Object(c["h"])(o,{src:"/assets/button-icons/check-white.svg",class:"check"})]),Object(c["h"])("span",eg,Object(c["A"])(e.label),1)],10,["onClick"])})),128))])]),Object(c["h"])("div",tg,[ng,Object(c["h"])(u,{required:"",type:"text",class:"input-filled font-helvetica text-16 spacing-5 line-28 text-black my-2",modelValue:s.form.name,"onUpdate:modelValue":t[1]||(t[1]=function(e){return s.form.name=e})},null,8,["modelValue"])]),Object(c["h"])("div",rg,[sg,Object(c["h"])(u,{required:"",type:"email",class:"input-filled font-helvetica text-16 spacing-5 line-28 text-black my-2",modelValue:s.form.email,"onUpdate:modelValue":t[2]||(t[2]=function(e){return s.form.email=e})},null,8,["modelValue"])]),Object(c["h"])("div",ag,[cg,Object(c["h"])(u,{type:"text",class:"input-filled font-helvetica text-16 spacing-5 line-28 text-black my-2",modelValue:s.form.hospital,"onUpdate:modelValue":t[3]||(t[3]=function(e){return s.form.hospital=e})},null,8,["modelValue"])]),Object(c["h"])("div",og,[ig,Object(c["h"])(d,{name:"category",classes:"input-filled font-helvetica text-16 spacing-5 line-28 text-black my-2",value:s.form.category,options:s.categoryOptions,onOnChange:t[4]||(t[4]=function(e){return s.form.category=e})},null,8,["value","options"])])]),Object(c["h"])("div",lg,[Object(c["h"])("div",ug,[Object(c["h"])(b,{required:"",modelValue:s.privacy,"onUpdate:modelValue":t[6]||(t[6]=function(e){return s.privacy=e})},{label:Object(c["D"])((function(){return[Object(c["h"])("span",dg,[bg,Object(c["h"])("span",{class:"text-black font-helvetica-medium",onClick:t[5]||(t[5]=function(){return a.routeToPrivacy&&a.routeToPrivacy.apply(a,arguments)})}," Privacy Policy "),pg,hg])]})),_:1},8,["modelValue"])]),Object(c["h"])("div",fg,[Object(c["h"])(b,{required:"",modelValue:s.audio,"onUpdate:modelValue":t[8]||(t[8]=function(e){return s.audio=e})},{label:Object(c["D"])((function(){return[Object(c["h"])("span",mg,[gg,Object(c["h"])("span",{class:"text-black font-helvetica-medium",onClick:t[7]||(t[7]=function(){return a.routeToPrivacy&&a.routeToPrivacy.apply(a,arguments)})}," Privacy Policy "),Og,jg])]})),_:1},8,["modelValue"])]),Object(c["h"])(b,{modelValue:s.form.newsletter,"onUpdate:modelValue":t[9]||(t[9]=function(e){return s.form.newsletter=e}),label:"I would like to receive information about products, services and events"},null,8,["modelValue"])]),Object(c["h"])("div",vg,[Object(c["h"])(p,{type:"Register",label:"Done",disabled:!a.canSubmitForm},null,8,["disabled"])])],32)])])):Object(c["f"])("",!0)}var xg=n("2909"),wg={class:"square rounded-4 mr-2 width-24 height-24 relative flex"},kg={class:"block text-black font-helvetica-normal text-14 spacing-4 line-18"},Cg={key:0,class:"text-red"};function Sg(e,t,n,r,s,a){var o=Object(c["y"])("ion-img");return Object(c["q"])(),Object(c["e"])("div",{class:[!n.modelValue||"selected","mb-2 flex items-start checkbox cursor-pointer"],onClick:t[1]||(t[1]=function(){return a.onClick&&a.onClick.apply(a,arguments)})},[Object(c["h"])("div",wg,[Object(c["h"])(o,{src:"/assets/button-icons/check-white.svg",class:"check"})]),Object(c["x"])(e.$slots,"label",{},(function(){return[Object(c["h"])("span",kg,[Object(c["g"])(Object(c["A"])(n.label),1),n.required?(Object(c["q"])(),Object(c["e"])("span",Cg,"*")):Object(c["f"])("",!0)])]}))],2)}var _g={name:"CustomCheckbox",components:{IonImg:i["d"]},props:{required:{type:Boolean},modelValue:{type:Boolean},label:{type:String}},methods:{onClick:function(e){e.preventDefault(),this.$emit("update:modelValue",!this.modelValue)}}};const qg=d()(_g,[["render",Sg]]);var Dg=qg,$g={components:{Title:ae,IonImg:i["d"],IonInput:i["e"],BigButton:Qt,IonButton:i["b"],CustomSelect:Wn,CustomCheckbox:Dg},props:{course:{type:Object},selectedDay:{type:Object},open:{type:Boolean}},data:function(){return{form:{},audio:!1,privacy:!1,isOpened:!1,categoryOptions:[{value:"surgeon",label:"Surgeon"},{value:"staff",label:"Staff"}]}},computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())},daysOptions:function(){return this.course&&this.course.days?this.course.days.map((function(e){return{value:e.date_value,label:e.date_text}})):[]},canSubmitForm:function(){return this.form.days&&this.form.days.length&&this.form.name&&this.form.email&&this.privacy&&this.audio}},methods:{routeToPrivacy:function(){this.$store.commit("setModalOpen",!1),this.$router.push("/privacy")},close:function(){this.$store.commit("setModalOpen",!1),this.$emit("onClose")},onSubmit:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r,a;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return e.preventDefault(),r=Object(s["a"])(Object(s["a"])({},t.form),{},{id:t.course.id}),n.prev=2,n.next=5,t.$http({method:"POST",url:it.learn.register,data:r});case 5:a=n.sent,console.debug(a),t.$toast({message:ot.learnRegisterSuccessful,color:"dark"}),t.close(),n.next=15;break;case 11:n.prev=11,n.t0=n["catch"](2),console.error(n.t0),t.$toast({message:ot.errors.learnRegister,color:"danger"});case 15:case"end":return n.stop()}}),n,null,[[2,11]])})))()},selectDay:function(e){if(this.form.days&&this.form.days.length){var t=Object(xg["a"])(this.form.days),n=this.form.days.indexOf(e.value);n>-1?t.splice(n,1):t.push(e.value),this.form.days=t}else this.form.days=[e.value]}},watch:{open:function(e){this.$store.commit("setModalOpen",e),this.isOpened=e,e&&this.selectedDay&&this.selectedDay.date_value&&(this.form.days=[this.selectedDay.date_value])}}};const Tg=d()($g,[["render",yg]]);var Ag=Tg,Ig={name:"CourseDetail",components:{Page:hr,Detail:Am,Agenda:Gm,Carousel:he,RegisterModal:Ag,SectionButton:Jr},mixins:[Xa],data:function(){return{course:{},section:"info",sections:[{label:"Info",path:"info"},{label:"Agenda",path:"agenda"}],selectedDay:null,isRegisterOpened:!1}},computed:{gradient:function(){if(this.course&&this.course.category)switch(this.course.category.class){case"course":return"gradient-background-orange";case"online":return"gradient-background-green";case"third":return"gradient-background-cyan";default:return""}return""},typeName:function(){if(this.course&&this.course.category)switch(this.course.category.class){case"course":return"Course";case"online":return"Online course";case"third":return"3rd-Party event";default:return"Other"}return"Other"},bgColor:function(){if(this.course&&this.course.category)switch(this.course.category.class){case"course":return"bg-orange";case"online":return"bg-green";case"third":return"bg-cyan";default:return"bg-light-grey"}return"bg-light-grey"},shareObject:function(){var e=(this.course.title||"course").toLowerCase().replace(/[^\w ]+/g,"").replace(/ +/g,"-");return{title:this.course.title,text:'Look at the course "'.concat(this.course.title,'"'),url:"https://limacorporate.com/en/learn-event/".concat(this.course.id,"/").concat(e,".html"),dialogTitle:"Share course"}}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=15;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:it.learn.list+"/"+e.$route.params.id,params:{}});case 4:n=t.sent,n&&(e.course=n,setTimeout((function(){e.cleanParagraphs()}),500)),e.logPage(n&&n.title?n.title+" (Learn detail)":"Learn detail"),t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:ot.errors.learnDetail,color:"danger"});case 13:t.next=18;break;case 15:console.error("No course id in route"),e.$toast({message:ot.errors.learnDetail,color:"danger"}),e.$router.back();case 18:case"end":return t.stop()}}),t,null,[[1,9]])})))()},methods:{onRegister:function(e){this.selectedDay=e,this.isRegisterOpened=!0},onClose:function(){this.isRegisterOpened=!1},routeToSection:function(e){this.section=e}}};const Rg=d()(Ig,[["render",If]]);var Pg=Rg,Mg=n("5502");function Lg(e,t,n,r,s,a){if(t)e.$router.push("/terms");else if(n)e.$router.push("/onboarding");else if(r)e.$router.push("/new/update/"+r);else if(s){var c=s;e.$store.commit("setLaunchUrl",null),e.$router.push(c)}else if(a){var o=a;e.$store.commit("setNotificationToShow",null),e.$router.push(o)}else e.$router.push("/home")}function Ng(e){return Bg.apply(this,arguments)}function Bg(){return Bg=Object(a["a"])(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(e.prev=0,S["a"].getPlatform()&&"web"===S["a"].getPlatform()){e.next=4;break}return e.next=4,t.dispatch("syncOneSignal",t);case 4:e.next=9;break;case 6:e.prev=6,e.t0=e["catch"](0),console.error(e.t0);case 9:console.log("state",t,t.state),Lg(this.$app,t.getters.needToAcceptTerms,t.getters.needOnboarding,t.getters.gotUpdatesToShow,t.getters.formattedLaunchUrl,t.getters.gotNotificationToShow);case 11:case"end":return e.stop()}}),e,this,[[0,6]])}))),Bg.apply(this,arguments)}function Ug(e,t){return Fg.apply(this,arguments)}function Fg(){return Fg=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:this.$app.$matomo.setScreen(n),this.$app.$matomo.trackView();case 2:case"end":return e.stop()}}),e,this)}))),Fg.apply(this,arguments)}function zg(e){e.commit("setUserData",!1),this.$app.$matomo.reset(),this.$app.$matomo.logEvent("logout"),window.localStorage.setItem("JWT",""),this.$app.$router.push("/login")}function Eg(e,t){return Vg.apply(this,arguments)}function Vg(){return Vg=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var r,a,c;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.prev=0,n=Object(s["a"])({},n),e.next=4,this.$app.$http({method:"POST",url:it.auth.login,data:n,loader:!1});case 4:if(r=e.sent,a=Object.assign({},r.user),t.commit("setUserData",a),t.commit("setNeedToAcceptTerms",r.need_accept_terms),t.commit("setOnboarding",r.onboarding),t.commit("setNotifications",r.push),t.commit("setAppUpdates",r.update_id),window.localStorage.setItem("JWT",r.jwt),c=a.id,this.$app.$matomo.setUserId(c),this.$app.$matomo.logEvent("login",{}),e.prev=15,S["a"].getPlatform()&&"web"===S["a"].getPlatform()){e.next=27;break}return e.prev=17,e.next=20,this.$app.$matomo.logEvent("login",{});case 20:e.next=25;break;case 22:e.prev=22,e.t0=e["catch"](17),console.error("LOGIN MATOMO ERROR",e.t0);case 25:return e.next=27,t.dispatch("syncOneSignal",t);case 27:e.next=32;break;case 29:e.prev=29,e.t1=e["catch"](15),console.error(e.t1);case 32:Lg(this.$app,t.getters.needToAcceptTerms,t.getters.needOnboarding,t.getters.gotUpdatesToShow,t.getters.formattedLaunchUrl,t.getters.gotNotificationToShow),e.next=39;break;case 35:throw e.prev=35,e.t2=e["catch"](0),this.$app.$toast({message:ot.errors.cannotLogin,color:"danger"}),e.t2;case 39:case"end":return e.stop()}}),e,this,[[0,35],[15,29],[17,22]])}))),Vg.apply(this,arguments)}function Gg(e){return Hg.apply(this,arguments)}function Hg(){return Hg=Object(a["a"])(regeneratorRuntime.mark((function e(t){var n,r,s,a,c=arguments;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=c.length>1&&void 0!==c[1]&&c[1],e.prev=1,e.next=4,this.$app.$http({method:"POST",url:it.auth.loginWithToken,loader:!1});case 4:if(r=e.sent,console.debug("WELCOME"),s=Object.assign({},r.user),t.commit("setUserData",s),t.commit("setNeedToAcceptTerms",r.need_accept_terms),t.commit("setOnboarding",r.onboarding),t.commit("setNotifications",r.push),t.commit("setAppUpdates",r.update_id),window.localStorage.setItem("JWT",r.jwt),n||(a=s.id,this.$app.$matomo.setUserId(a),this.$app.$matomo.logEvent("login",{})),e.prev=14,n||S["a"].getPlatform()&&"web"===S["a"].getPlatform()){e.next=27;break}if(n){e.next=25;break}return e.prev=17,e.next=20,this.$app.$matomo.logEvent("login",{});case 20:e.next=25;break;case 22:e.prev=22,e.t0=e["catch"](17),console.error("LOGIN MATOMO ERROR",e.t0);case 25:return e.next=27,t.dispatch("syncOneSignal",t);case 27:e.next=32;break;case 29:e.prev=29,e.t1=e["catch"](14),console.error(e.t1);case 32:Lg(this.$app,t.getters.needToAcceptTerms,t.getters.needOnboarding,t.getters.gotUpdatesToShow,t.getters.formattedLaunchUrl,t.getters.gotNotificationToShow),e.next=39;break;case 35:throw e.prev=35,e.t2=e["catch"](1),this.$app.$toast({message:ot.errors.cannotLogin,color:"danger"}),e.t2;case 39:case"end":return e.stop()}}),e,this,[[1,35],[14,29],[17,22]])}))),Hg.apply(this,arguments)}function Wg(){return Yg.apply(this,arguments)}function Yg(){return Yg=Object(a["a"])(regeneratorRuntime.mark((function e(){var t,n,r,s,a;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.$app.$onesignal.getUID();case 3:return t=e.sent,e.next=6,this.$app.$device.getInfo();case 6:return n=e.sent,e.next=9,this.$app.$device.getId();case 9:return r=e.sent,e.next=12,this.$app.$device.getAppInfo();case 12:return s=e.sent,e.next=15,this.$app.$http({method:"POST",url:it.users.deviceInfo,loader:!1,data:{uuid:r.uuid,os:n.platform,device:"".concat(n.platform," ").concat(n.osVersion," - ").concat(n.model),push_id:t,browser:window.navigator.userAgent||window.navigator.appVersion,app_version:s.version}});case 15:a=e.sent,console.debug(a),e.next=23;break;case 19:e.prev=19,e.t0=e["catch"](0),console.error(e.t0),this.$app.$toast({message:ot.errors.deviceInfo,color:"danger"});case 23:case"end":return e.stop()}}),e,this,[[0,19]])}))),Yg.apply(this,arguments)}function Jg(e){return Kg.apply(this,arguments)}function Kg(){return Kg=Object(a["a"])(regeneratorRuntime.mark((function e(t){var n,r;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=[],e.prev=1,e.next=4,this.$app.$http({method:"GET",url:it.notifications.list,params:{}});case 4:r=e.sent,n=r,e.next=11;break;case 8:e.prev=8,e.t0=e["catch"](1),this.$app.$toast({message:ot.errors.home,color:"danger"});case 11:t.commit("setNotifications",n);case 12:case"end":return e.stop()}}),e,this,[[1,8]])}))),Kg.apply(this,arguments)}function Xg(e){return Qg.apply(this,arguments)}function Qg(){return Qg=Object(a["a"])(regeneratorRuntime.mark((function e(t){var n,r,s,a,c,o,i,l,u,d,b,p,h;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=[],r=[],s=[],a=[],c={my:[],shared:[]},e.prev=5,e.next=8,this.$app.$http({method:"GET",url:it.products.segments,params:{},loader:!1});case 8:return o=e.sent,o&&o.categories&&(n=o.categories),e.next=12,this.$app.$http({method:"GET",url:it.congresses.home,params:{},loader:!1});case 12:return i=e.sent,r=i,e.next=16,this.$app.$http({method:"GET",url:it.notifications.list,params:{},loader:!1});case 16:return l=e.sent,s=l,e.next=20,this.$app.$http({method:"GET",url:it.news.home,params:{},loader:!1});case 20:return u=e.sent,a=u,e.next=24,this.$app.$http({method:"GET",url:it.documents.list_my,params:{},loader:!1});case 24:return d=e.sent,c.my=d.list,e.next=28,this.$app.$http({method:"GET",url:it.documents.list_shared,params:{},loader:!1});case 28:return b=e.sent,c.shared=b.list,e.next=32,this.$app.$http({method:"GET",url:it.documents.list_us,params:{},loader:!1});case 32:p=e.sent,c.us=p.list,e.next=39;break;case 36:e.prev=36,e.t0=e["catch"](5),this.$app.$toast({message:ot.errors.home,color:"danger"});case 39:h={products:n,congresses:r,news:a,documents:{my:c.my.slice(0,3),shared:c.shared.slice(0,3),us:c.us.slice(0,3)}},t.commit("setHome",h),t.commit("setDocuments",c),t.commit("setNotifications",s);case 43:case"end":return e.stop()}}),e,this,[[5,36]])}))),Qg.apply(this,arguments)}function Zg(e,t){return eO.apply(this,arguments)}function eO(){return eO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var r;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.$app.$http({method:"GET",url:"".concat(it.list.messages).concat(t.getters.roundId?"?roundId=".concat(t.getters.roundId):""),loader:!!t.getters.roundId});case 3:r=e.sent,t.commit("setMessages",(r||{}).data||{}),e.next=10;break;case 7:e.prev=7,e.t0=e["catch"](0),this.$app.$toast({message:ot.errors.cannotGetMessages,color:"danger"});case 10:n&&n.target.complete&&n.target.complete();case 11:case"end":return e.stop()}}),e,this,[[0,7]])}))),eO.apply(this,arguments)}function tO(e,t){return nO.apply(this,arguments)}function nO(){return nO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var r,s,a;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return r=n.id,s=n.status,a=void 0===s?1:s,e.next=3,this.$app.$http({method:"POST",url:it.list.messages,loader:!1,data:{messageId:r,status:a}});case 3:case"end":return e.stop()}}),e,this)}))),nO.apply(this,arguments)}function rO(e,t){return sO.apply(this,arguments)}function sO(){return sO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var r,s;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return r=n.id,s=n.reply,e.next=3,this.$app.$http({method:"POST",url:it.list.reply,data:{messageId:r,reply:s}});case 3:case"end":return e.stop()}}),e,this)}))),sO.apply(this,arguments)}var aO=window.localStorage.getItem("userData"),cO={state:{user:{data:aO?JSON.parse(aO):{},types:[],notificationsAllowed:"unknown"},home:{products:[],documents:{},meded:[],congresses:[],news:[]},messages:[],documents:{},launchUrl:null,notifications:[],appUpdates:null,onboarding:null,isModalOpen:!1,notificationToShow:null,need_accept_terms:null},mutations:{setUserData:function(e,t){if(!1===t||void 0===t)return window.localStorage.removeItem("userData"),void(e.user.data={});t.teams&&t.teams.constructor===String&&(t.teamsId=t.teams,delete t.teams),e.user.data=Object(s["a"])(Object(s["a"])({},e.user.data),t),window.localStorage.setItem("userData",JSON.stringify(e.user.data))},setMessages:function(e,t){e.messages.list=t},setNotifications:function(e,t){e.notifications=t},setNotificationToShow:function(e,t){e.notificationToShow=t},setOnboarding:function(e,t){e.onboarding=t},setNeedToAcceptTerms:function(e,t){e.need_accept_terms=t},setAppUpdates:function(e,t){e.appUpdates=t},setHome:function(e,t){e.home=t},setDocuments:function(e,t){e.documents=t},setModalOpen:function(e,t){e.isModalOpen=t},setLaunchUrl:function(e,t){e.launchUrl=t},setNotificationsAllowState:function(e,t){var n="no",r=t&&!0===t.hasPrompted&&(t.status>1||t.state>1);(this.$app.$device.getPlatform("ios")&&r||this.$app.$device.getPlatform("android"))&&(n="yes"),e.user.notificationsAllowed=n}},actions:r,getters:{notifError:function(e){return"no"===e.user.notificationsAllowed},loggedIn:function(e){return!!Object.keys(e.user.data).length||!1},messages:function(e){return e.messages.list||[]},roundId:function(e){return e.rounds.id},userData:function(e){var t=Object(s["a"])({},e.user.data)||{};for(var n in t)qs.userDataBlacklist.includes(n)&&delete t[n];return t},needToAcceptTerms:function(e){return e.need_accept_terms||void 0===e.need_accept_terms},needOnboarding:function(e){return e.onboarding},gotNotifications:function(e){return e.notifications},showUS:function(e){return!!Object.keys(e.user.data).length&&"US"===e.user.data.certificate||!1},areNotificationsNotRead:function(e){var t=0;if(e.notifications&&e.notifications.length)for(var n=0;n<e.notifications.length;n++)e.notifications[n]&&!e.notifications[n].read&&(t+=1);return t},gotUpdatesToShow:function(e){return e.appUpdates},gotNotificationToShow:function(e){return e.notificationToShow},homeData:function(e){return e.home||{products:[],documents:{},meded:[],congresses:[],news:[]}},homeProducts:function(e){return e&&e.home&&e.home.products?e.home.products:[]},homeCongresses:function(e){return e&&e.home&&e.home.congresses?e.home.congresses:[]},homeNews:function(e){return e&&e.home&&e.home.news?e.home.news:[]},homeDocuments:function(e){return e&&e.home&&e.home.documents?e.home.documents:{my:[],shared:[],us:[]}},documents:function(e){return e&&e.documents?e.documents:[]},username:function(e){return e.user.data.username||""},userTypes:function(e){return e.user.types||[]},formattedLaunchUrl:function(e){return e.launchUrl?e.launchUrl.includes("limasales")?e.launchUrl.split("limasales:/")[1]:e.launchUrl:null}}},oO=Object(Mg["a"])(cO),iO=[{path:"",redirect:"/login"},{path:"/login",component:U,children:[{path:"",name:"Login",component:Ts}]},{path:"/home",component:P,meta:{refreshAction:["getHome","loginWithToken"]},children:[{path:"",name:"Home",component:Sn}]},{path:"/terms",component:U,children:[{path:"",name:"Terms And Conditions",component:pa}]},{path:"/onboarding",component:U,children:[{path:"",name:"OnBoarding",component:Ks}]},{path:"/useful",component:D,children:[{path:"",name:"Useful Links",component:Bs,meta:{showBack:!0}}]},{path:"/news",component:D,children:[{path:"/news/:id",name:"News Detail",component:Po,meta:{showBack:!0,customName:!0}},{path:"",name:"News",component:Do,meta:{showBack:!0}}]},{path:"/multimedia",component:D,children:[{path:"",name:"Multimedia",component:Mc}]},{path:"/new/update/:id",component:U,children:[{path:"",name:"Update",component:ec,meta:{customName:!0}}]},{path:"/new",component:D,children:[{path:"",name:"What's New",component:Wa,meta:{showBack:!0}}]},{path:"/menu",component:D,children:[{path:"",name:"Menu",component:gr,meta:{showWizard:!0}}]},{path:"/search",component:D,children:[{path:"",name:"Search",component:bs}]},{path:"/privacy",component:D,children:[{path:"",name:"Privacy",component:Fc}]},{path:"/contacts",component:D,children:[{path:"",name:"Contacts",component:yo}]},{path:"/documents",component:D,children:[{path:"/documents/folder/:id",name:"Folder",component:yi,meta:{showBack:!0,customName:!0}},{path:"",name:"Documents",component:mi,meta:{showBack:!0}}]},{path:"/products",component:D,children:[{path:"/products/detail/:id/components",name:"Products Detail Components",component:El,meta:{showBack:!0,customName:!0,section:"components"}},{path:"/products/detail/:id/documents",name:"Products Detail Documents",component:El,meta:{showBack:!0,customName:!0,section:"documents"}},{path:"/products/detail/:id",name:"Products Detail",component:El,meta:{showBack:!0,customName:!0}},{path:"/products/detail/component/:id",name:"Component Detail",component:du,meta:{showBack:!0,customName:!0}},{path:"/products/category/:category",name:"Product Category",component:Qi,meta:{showBack:!0,customName:!0}},{path:"/products/:segment",name:"Product Segment",component:Vi,meta:{showBack:!0,customName:!0}},{path:"",name:"Products",component:qi}]},{path:"/congresses",component:D,children:[{path:"/congresses/activities/:id",name:"Activity Detail",component:Op,meta:{showBack:!0,customName:!0}},{path:"/congresses/:id/",name:"Congress Detail",component:Nb,meta:{showBack:!0,customName:!0}},{path:"",name:"Congresses",component:yu}]},{path:"/training",component:D,children:[{path:"/training/:id/",name:"Sales Training Detail",component:Zh,meta:{showBack:!0,customName:!0}},{path:"",name:"Sales Training",component:_p}]},{path:"/learn",component:D,children:[{path:"/learn/list/:id/",name:"Course Detail",component:Pg,meta:{showBack:!0,customName:!0}},{path:"/learn/:id/",name:"Course Detail",component:Pg,meta:{showBack:!0,customName:!0}},{path:"/learn/list",name:"Course List",component:$f},{path:"/learn",name:"Learn Landing",component:cf}]},{path:"/:catchAll(.*)",redirect:"/home"}],lO=Object(f["a"])({history:Object(i["t"])("capacitor")?Object(f["c"])("/"):Object(f["b"])(),routes:iO});lO.beforeEach((function(e,t,n){var r;"/login"===e.path||"/privacy"===e.path||oO.getters.loggedIn||oO.dispatch("logout"),null!==e&&void 0!==e&&null!==(r=e.meta)&&void 0!==r&&r.customName||oO.dispatch("logScreenView",e),n()}));var uO=lO,dO=n("e2c7");n("4b63"),n("4041"),n("51ef"),n("a237"),n("e09e"),n("46e5"),n("98b6"),n("2d22"),n("66b0"),n("ce1f"),n("8c28"),n("f1c0"),n("ab74"),n("51df");function bO(e,t){return pO.apply(this,arguments)}function pO(){return pO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var r;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return r=n.to,e.next=3,t.$store.dispatch("newNotificationsState",r);case 3:case"end":return e.stop()}}),e)}))),pO.apply(this,arguments)}function hO(e,t){return fO.apply(this,arguments)}function fO(){return fO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var r;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:console.log("Notification received",t,n),n.notification&&n.notification&&n.notification.launchURL?(r=n.notification.launchURL,r=r.split("limasales:/")[1],t.$router.push(r)):t.$bg.wakeUp();case 2:case"end":return e.stop()}}),e)}))),fO.apply(this,arguments)}function mO(e,t){return gO.apply(this,arguments)}function gO(){return gO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var r,s;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:console.log("Opened notification",t,n),n.notification&&(r=n.notification,r&&r.launchURL&&(s=r.launchURL,console.log("NOTIFICATION",r,t.$store.getters.loggedIn,s),s=s.split("limasales:/")[1],t.$store.getters.loggedIn?(t.$router.push(s),t.$store.commit("setLaunchUrl",s)):(t.$store.commit("setLaunchUrl",r.launchURL),t.$store.commit("setNotificationToShow",s))));case 2:case"end":return e.stop()}}),e)}))),gO.apply(this,arguments)}function OO(e,t){return jO.apply(this,arguments)}function jO(){return jO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(!0!==n.isActive||t.$store.getters.loggedIn||!window.localStorage.getItem("JWT")){e.next=3;break}return e.next=3,t.$store.dispatch("loginWithToken");case 3:if(!0!==n.isActive||!t.$store.getters.loggedIn||!0!==t.$route.meta.refreshOnOpen){e.next=6;break}return e.next=6,t.$store.dispatch("getMessages");case 6:case"end":return e.stop()}}),e)}))),jO.apply(this,arguments)}function vO(e,t,n){"background"===e.$route.meta.backAction?e.$bg.moveToBg():"exit"===e.$route.meta.backAction&&n.exitApp()}n("498a"),n("a630"),n("3ca3"),n("4e82");function yO(e){return e.charAt(0).toUpperCase()+e.slice(1)}function xO(e){try{var t=new Date(e/1e4),n=new Date(3939,0,1),r=t.getTime()-n.getTime(),s=new Date(r);return"".concat(s.toLocaleDateString()," ").concat(s.toLocaleTimeString())}catch(a){console.warn("Cannot convert timestamp",e)}}function wO(e){return!e||e.length>200||/[<>]/.test(e)?"":e.constructor===Array?e.length?e[0].description:"":e.trim()||""}function kO(e){return!e||"web"!==e}function CO(){var e=document.getElementsByTagName("p"),t=Array.from(e),n=t.filter((function(e){return 0===e.textContent.trim().length}));n.map((function(e){return e.remove()})),console.debug("Empty paragraphs have been cleaned. See you next Wednesday!")}function SO(e){if(e&&e.length){var t=e.replace(/(<br><\/p>|<\/br><\/p>|<br\/><\/p>)/gm,"</p>");return t=t.replace(/(<br>|<\/br>|<br\/>)/gm,"\n"),t=t.replace(/^\s/gm,""),t=t.replace(/\n/gm,"<br>"),t}return""}function _O(e){var t=["open","rename","download","internal_share","external_share","save_to_mydocs","move_to_mydocs","move","delete"];return e&&e.length?e.sort((function(e,n){return t.indexOf(e)-t.indexOf(n)})):[]}var qO={install:function(e){e.mixin({methods:{capitalizeFirstLetter:yO,ticksToString:xO,checkIsApp:kO,cleanParagraphs:CO,sanitizeManageText:SO,sortActions:_O,validateErrorResponse:wO,valIsArray:function(e){return e instanceof Array}}})}},DO=n("15fd"),$O=n("bc3a"),TO=n.n($O),AO=["mode"],IO=["auth","loader","notifyErrors","baseUrl","url","headers"],RO=function(){return window.localStorage.getItem("JWT")||!1},PO=function(e){return window.localStorage.setItem("JWT",e)},MO={install:function(e,t){var n=t.mode,r=void 0===n?"dev":n,c=Object(DO["a"])(t,AO),o=function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){var t,n,a,o,i,l,u,d,b,p,h,f,m,g,O,j,v,y=arguments;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(t=y.length>0&&void 0!==y[0]?y[0]:{},n=t.auth,a=void 0===n||n,o=t.loader,i=void 0===o||o,l=t.notifyErrors,u=void 0!==l&&l,d=t.baseUrl,b=void 0===d?it.baseUrl[r]:d,p=t.url,h=void 0===p?"":p,f=t.headers,m=void 0===f?{}:f,g=Object(DO["a"])(t,IO),O={},a&&(j=RO(),j&&(O.headers=Object(s["a"])({Authorization:"Bearer ".concat(j)},m))),O.headers||(O.headers=m),!i){e.next=7;break}return e.next=7,this.$loading.show();case 7:return e.prev=7,e.next=10,TO()(Object(s["a"])(Object(s["a"])(Object(s["a"])(Object(s["a"])({},c),O),g),{},{url:"".concat(b).concat(h)}));case 10:v=e.sent,v.data&&v.data.jwt&&PO(v.data.jwt),e.next=30;break;case 14:if(e.prev=14,e.t0=e["catch"](7),!e.t0.request||401!==e.t0.request.status){e.next=23;break}if(this.$store.dispatch("logout"),this.$toast({message:ot.errors.loginNecessary,color:"danger"}),!i){e.next=22;break}return e.next=22,this.$loading.hide();case 22:return e.abrupt("return",{});case 23:if(!i){e.next=26;break}return e.next=26,this.$loading.hide();case 26:if(!u){e.next=29;break}return this.$toast({message:ot.errors.cannotPerform,color:"error"}),e.abrupt("return",console.error(e.t0));case 29:throw e.t0;case 30:return e.next=32,this.$loading.hide();case 32:return e.abrupt("return",v.data);case 33:case"end":return e.stop()}}),e,this,[[7,14]])})));return function(){return e.apply(this,arguments)}}();e.config.globalProperties.$http=o}},LO={install:function(e,t){var n=!1,r=0;e.config.globalProperties.$loading={show:function(){return Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(r++,1===r){e.next=3;break}return e.abrupt("return");case 3:return e.next=5,i["u"].create(t);case 5:return n=e.sent,e.abrupt("return",n.present());case 7:case"end":return e.stop()}}),e)})))()},hide:function(){return Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(r--,!1===n&&r>0&&console.warn("Have you awaited the show function?"),0!==r||!n){e.next=6;break}return e.next=5,n.dismiss();case 5:setTimeout(Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,n.dismiss();case 3:e.next=8;break;case 5:e.prev=5,e.t0=e["catch"](0),console.debug("Loader already dismissed",e.t0);case 8:case"end":return e.stop()}}),e,null,[[0,5]])}))),1500);case 6:case"end":return e.stop()}}),e)})))()}}}},NO={install:function(e,t){e.config.globalProperties.$toast=function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(n){var r;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,i["v"].create(Object(s["a"])(Object(s["a"])({},t),n));case 2:return r=e.sent,e.abrupt("return",r.present());case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()}},BO=function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,i["s"].create(Object(s["a"])({cssClass:"alert",header:"Warning",buttons:["Ok"]},t));case 2:return n=e.sent,e.next=5,n.present();case 5:return e.next=7,n.onDidDismiss();case 7:return e.abrupt("return",e.sent);case 8:case"end":return e.stop()}}),e)})));function t(t){return e.apply(this,arguments)}return t}(),UO={install:function(e){return Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.config.globalProperties.$alert=BO;case 1:case"end":return t.stop()}}),t)})))()}},FO=n("aefb"),zO={install:function(e){var t=arguments;return Object(a["a"])(regeneratorRuntime.mark((function n(){var r,s,c,o,l,u;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:r=t.length>1&&void 0!==t[1]?t[1]:{},c=r.events||{},o=c.onForeground,l=c.onBackButton,o&&h["a"].addListener("appStateChange",(function(t){return o(e.config.globalProperties,t)})),l&&Object(i["w"])(-1,(function(t){return l(e.config.globalProperties,t,h["a"])})),u={getId:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",FO["a"].getId());case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),getAppInfo:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",h["a"].getInfo());case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),getInfo:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(s){e.next=4;break}return e.next=3,FO["a"].getInfo();case 3:s=e.sent;case 4:return e.abrupt("return",s);case 5:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),getBattery:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",FO["a"].getBatteryInfo());case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),getPlatform:function(){return i["t"].apply(void 0,arguments)}},e.config.globalProperties.$device=u;case 6:case"end":return n.stop()}}),n)})))()}},EO=(n("d3b7"),n("5cc6"),n("9a8c"),n("a975"),n("735e"),n("c1ac"),n("d139"),n("3a7b"),n("d5d6"),n("82f8"),n("e91f"),n("60bd"),n("5f96"),n("3280"),n("3fcc"),n("ca91"),n("25a1"),n("cd26"),n("3c5d"),n("2954"),n("649e"),n("219c"),n("170b"),n("b39a"),n("72f7"),n("84c6")),VO=n("17b6"),GO=n("de86"),HO=function(e){return function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(n){var r,s,c,o,i,l,u,d=arguments;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return o=function(e){for(var t="",n=new Uint8Array(e),r=n.byteLength,s=0;s<r;s++)t+=String.fromCharCode(n[s]);return window.btoa(t)},r=d.length>1&&void 0!==d[1]?d[1]:"Document",t.next=4,e.$loading.show();case 4:return t.next=6,e.$http({method:"GET",baseUrl:n,auth:!1,headers:{Accept:"application/pdf"},responseType:"arraybuffer"});case 6:if(s=t.sent,s){t.next=9;break}throw new Error("Cannot open pdf");case 9:return c=o(s),t.next=12,EO["a"].writeFile(EO["a"].dataDirectory,"".concat(r,".pdf"),c,{replace:!0});case 12:return t.next=14,e.$loading.hide();case 14:return i=function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,VO["b"].writeFile({path:"".concat(r,".pdf"),data:c,directory:VO["a"].Cache});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),t.next=17,i();case 17:return l=t.sent,u=l.uri,t.abrupt("return",new Promise((function(){GO["a"].open({filePath:u,contentType:"application/pdf",openWithDefault:!0})})));case 20:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()},WO={install:function(e){e.config.globalProperties.$docviewer=HO(e.config.globalProperties)}},YO=n("ebd2"),JO=n.n(YO);function KO(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};JO.a.setAppId(t.appId,t.firebaseId);var n=t.events||{},r=n.notifOpened,s=n.notifReceived;return JO.a.setNotificationOpenedHandler((function(t){return r(e,t)})),JO.a.setNotificationWillShowInForegroundHandler((function(t){return s(e,t)})),JO.a}var XO={install:function(e,t){var n=KO(e.config.globalProperties,t);e.config.globalProperties.$onesignal={getUID:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",new Promise((function(e,t){n.getDeviceState((function(n){if(console.log(n),!n.userId)return t(new Error("NO_USERID"));e(n.userId)}))})));case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}()}}},QO=n("3c98"),ZO=function(e){return function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(n){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,e.$loading.show();case 2:return QO["a"].write({string:n}),t.next=5,e.$loading.hide();case 5:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()},ej={install:function(e){e.config.globalProperties.$clipboard=ZO(e.config.globalProperties)}},tj={install:function(e){return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:n={canShare:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",Qe["a"].canShare());case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),share:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,this.canShare();case 2:if(n=e.sent,!n){e.next=5;break}return e.abrupt("return",Qe["a"].share(t));case 5:return e.abrupt("return",!1);case 6:case"end":return e.stop()}}),e,this)})));function t(t){return e.apply(this,arguments)}return t}()},e.config.globalProperties.$share=n;case 2:case"end":return t.stop()}}),t)})))()}},nj={install:function(e){return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:n={setUserId:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",window._paq.push(["setUserId",t]));case 1:case"end":return e.stop()}}),e)})));function t(t){return e.apply(this,arguments)}return t}(),reset:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",window._paq.push(["resetUserId"]));case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),setScreen:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:console.log("[matomo] overriding :",t),window._paq.push(["setCustomUrl",t.path]),window._paq.push(["setDocumentTitle",t.name]);case 3:case"end":return e.stop()}}),e)})));function t(t){return e.apply(this,arguments)}return t}(),logEvent:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t){var n,r=arguments;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=r.length>1&&void 0!==r[1]?r[1]:{},console.log("[matomo] triggering event",t,n),e.abrupt("return",window._paq.push(["trackEvent","page","action",t,JSON.stringify(n)]));case 3:case"end":return e.stop()}}),e)})));function t(t){return e.apply(this,arguments)}return t}(),logPage:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return console.log("[matomo] triggering pageView",t,n),e.abrupt("return",window._paq.push(["trackEvent","page","view",t,n]));case 2:case"end":return e.stop()}}),e)})));function t(t,n){return e.apply(this,arguments)}return t}(),trackView:function(){return console.log("[matomo] triggering page view"),window._paq.push(["trackPageView"])},trackSearch:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return window._paq.push(["trackSiteSearch",e,n,t])}},e.config.globalProperties.$matomo=n;case 2:case"end":return t.stop()}}),t)})))()}};function rj(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if(e&&e.includes("token")){var t=e.split("token=")[1].split("#")[0];window.azureToken=t,console.log("received url: "+e,t),window.localStorage.setItem("JWT",t)}}function sj(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if(e&&e.includes("path")){var t=e.split("path=")[1];window.pathToReach=t,console.log("received url: "+e,t),window.localStorage.setItem("PATH",t)}}function aj(){return cj.apply(this,arguments)}function cj(){return cj=Object(a["a"])(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,dO["a"].show();case 2:return window.handleOpenURL=function(e){rj(e),sj(e)},t=Object(c["d"])(p).use(i["q"]).use(uO).use(oO).use(qO).use(MO,{mode:qs.mode}).use(UO).use(LO).use(WO).use(ej).use(tj).use(nj).use(NO,{duration:3e3,color:"primary"}),S["a"].getPlatform()&&"web"===S["a"].getPlatform()||t.use(XO,Object(s["a"])({events:{permissionChange:bO,notifOpened:mO,notifReceived:hO}},qs.oneSignal)),t.use(zO,{events:{onForeground:OO,onBackButton:vO}}),oO.$app=t.config.globalProperties,e.next=9,uO.isReady();case 9:t.mount("#app"),setTimeout((function(){dO["a"].hide()}),500);case 11:case"end":return e.stop()}}),e)}))),cj.apply(this,arguments)}aj(),h["a"].addListener("appUrlOpen",(function(e){var t=e.url;t&&(rj(t),sj(t))}))},"57e4":function(e,t,n){"use strict";n("e7a0")},5921:function(e,t,n){"use strict";n("a362")},"5a76":function(e,t,n){},"5dd6":function(e,t,n){},"60e9":function(e,t,n){"use strict";n("c6b7")},"670a":function(e,t,n){"use strict";n("38b3")},"6a05":function(e,t,n){},"6bf4":function(e,t,n){"use strict";n("73ec")},"6da2":function(e,t,n){"use strict";n("a189")},"73ec":function(e,t,n){},"77c0":function(e,t,n){"use strict";n("6a05")},7848:function(e,t,n){},"7dc5":function(e){e.exports=JSON.parse('{"mode":"prod","oneSignal":{"appId":"3bc8b116-7b53-4e1d-8e5b-fa2a785113e0","firebaseId":"517810307555"},"userDataBlacklist":[]}')},8123:function(e,t,n){"use strict";n("1089")},"831d":function(e,t,n){"use strict";n("b61b")},"8c28":function(e,t,n){},"8c97":function(e,t,n){},9344:function(e,t,n){},9923:function(e,t,n){"use strict";n("4c8d")},"9c9f":function(e,t,n){"use strict";n("4c1f")},"9d00":function(e,t,n){},"9e7e":function(e,t,n){},a189:function(e,t,n){},a362:function(e,t,n){},a43b:function(e){e.exports=JSON.parse('{"baseUrl":{"dev":"https://app-api-staging.limacorporate.com/api","prod":"https://app-api.limacorporate.com/api"},"contacts":"/contacts","auth":{"loginCheck":"/users/check-domain","login":"/users/login","azureLogin":"/users/login-azure","loginWithToken":"/users/get-data"},"search":"/search","products":{"segments":"/products/categories","products":"/products","product":"/product","component":"/product/component"},"congresses":{"home":"/congresses/home","list":"/congresses","activity":"/congresses/activity"},"training":{"home":"/training/home","list":"/training","activity":"/training/activity"},"learn":{"list":"/learn","register":"/learn/register"},"documents":{"list":"/documents","list_my":"/documents/my","list_shared":"/documents/shared","list_us":"/usadocs","save_in_mydocs":"/documents/favorite","remove_from_my":"/documents/remove","move":"/documents/move","share":"/documents/share","storage_share":"/documents/storage-share","upload":"/documents/upload"},"folders":{"create":"/folders","list":"/folders/list","move":"/folders/move","share":"/folders/share","move_to_mydocs":"/folders/mydocs"},"news":{"home":"/news/home","list":"/news"},"notifications":{"list":"/push","updates":"/updates"},"multimedia":{"videos":"/multimedia/video","images":"/multimedia/images"},"users":{"shareList":"/users/share-list","acceptTerms":"/users/accept-terms","onBoarding":"/users/onboarding","deviceInfo":"/users/register-device"},"usefulLinks":"/useful-links"}')},a4c4:function(e,t,n){},a9b5:function(e,t,n){},aa55:function(e,t,n){var r={"./ion-action-sheet.entry.js":["6618","chunk-504c4825"],"./ion-alert.entry.js":["f06c","chunk-008cd3d6"],"./ion-app_8.entry.js":["c215","chunk-34f7327c"],"./ion-avatar_3.entry.js":["cf12","chunk-59d4c87c"],"./ion-back-button.entry.js":["4b35","chunk-69eb8776"],"./ion-backdrop.entry.js":["429d","chunk-2d0c073f"],"./ion-button_2.entry.js":["4453","chunk-25d83ca8"],"./ion-card_5.entry.js":["070b","chunk-541ea42d"],"./ion-checkbox.entry.js":["dfd8","chunk-09162720"],"./ion-chip.entry.js":["430d","chunk-09155df3"],"./ion-col_3.entry.js":["6a8a","chunk-2d0da04a"],"./ion-datetime_3.entry.js":["c15b","chunk-21a76241"],"./ion-fab_3.entry.js":["dd47","chunk-3ed29de3"],"./ion-img.entry.js":["9588","chunk-2d0e5812"],"./ion-infinite-scroll_2.entry.js":["d1e5","chunk-2d21da73"],"./ion-input.entry.js":["d111","chunk-37f2300e"],"./ion-item-option_3.entry.js":["1bb3","chunk-5ff96a24"],"./ion-item_8.entry.js":["69da","chunk-5a8ac886"],"./ion-loading.entry.js":["53a5","chunk-6d375f34"],"./ion-menu_3.entry.js":["cb00","chunk-097e0872"],"./ion-modal.entry.js":["1ad0","chunk-f858ef4e"],"./ion-nav_2.entry.js":["e44f","chunk-c53d26f0"],"./ion-popover.entry.js":["4285","chunk-1f3fa45a"],"./ion-progress-bar.entry.js":["9b72","chunk-1dbc15a2"],"./ion-radio_2.entry.js":["beb3","chunk-0e93a01c"],"./ion-range.entry.js":["719f","chunk-54bbd082"],"./ion-refresher_2.entry.js":["0a47","chunk-d8413eac"],"./ion-reorder_2.entry.js":["6672","chunk-d0e8aa0a"],"./ion-ripple-effect.entry.js":["c8da","chunk-2d218068"],"./ion-route_4.entry.js":["10e8","chunk-858cd918"],"./ion-searchbar.entry.js":["8625","chunk-a9395c36"],"./ion-segment_2.entry.js":["0c02","chunk-462c869e"],"./ion-select_3.entry.js":["d25f","chunk-79f1dac7"],"./ion-slide_2.entry.js":["05dd","chunk-2d0a463b"],"./ion-spinner.entry.js":["e11b","chunk-8bb7f81e"],"./ion-split-pane.entry.js":["aae8","chunk-2d213189"],"./ion-tab-bar_2.entry.js":["a2bb","chunk-02c995b5"],"./ion-tab_2.entry.js":["6725","chunk-c567cc2a"],"./ion-text.entry.js":["ed3b","chunk-30dd9750"],"./ion-textarea.entry.js":["8798","chunk-eaa2b130"],"./ion-toast.entry.js":["c1a5","chunk-41c0f7a4"],"./ion-toggle.entry.js":["bef2","chunk-7548ca2d"],"./ion-virtual-scroll.entry.js":["5fd7","chunk-2d0d43da"]};function s(e){if(!n.o(r,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=r[e],s=t[0];return n.e(t[1]).then((function(){return n(s)}))}s.keys=function(){return Object.keys(r)},s.id="aa55",e.exports=s},ab00:function(e,t,n){var r={"./ion-icon.entry.js":["7059","chunk-2d0d5c33"]};function s(e){if(!n.o(r,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=r[e],s=t[0];return n.e(t[1]).then((function(){return n(s)}))}s.keys=function(){return Object.keys(r)},s.id="ab00",e.exports=s},ab74:function(e,t,n){},aba4:function(e,t,n){},b118:function(e,t,n){"use strict";n("467f")},b61b:function(e,t,n){},b6b6:function(e,t,n){"use strict";n("9d00")},b7e3:function(e,t,n){"use strict";n("5a76")},b8c9:function(e,t,n){},c5a9:function(e,t,n){"use strict";n("f64b")},c64f:function(e,t,n){},c6b7:function(e,t,n){},c791:function(e,t,n){},cffe:function(e,t,n){"use strict";n("c791")},d136:function(e,t,n){},e27d:function(e,t,n){"use strict";n("a4c4")},e644:function(e,t,n){"use strict";n("9344")},e7a0:function(e,t,n){},ea7e:function(e,t,n){"use strict";n("5dd6")},eaa6:function(e,t,n){},eba1:function(e){e.exports=JSON.parse('{"loginSuccessful":"Ruccessful login!","messageSent":"Reply sent","recoverMailSent":"Recover mail sent successfully","learnRegisterSuccessful":"You have been registered to the course","errors":{"checkEmail":"An error occurred while checking the email domain. Retry later","cannotLogin":"Login failed","loginNecessary":"Please sign in","home":"An error occurred while getting all the informations","onboarding":"An error occurred while getting you on board. Try again later","acceptTerms":"An error occurred while saving your consent. Try again later","updates":"An error occurred while showing you the last addition to the app. Check in \\"What\'s new\\"","shareList":"An error occurred while retrieving the recipients. Write the email or try again later","news":"An error occurred while retrieving the news","newsDetail":"An error occurred while retrieving this news","contacts":"An error occurred while retrieving the contacts","notifications":"An error occurred while retrieving the notifications","notificationDetail":"An error occurred while retrieving this notification","deviceInfo":"An error occurred while checking the user device","appUpdates":"An error occurred while checking the latest app updates","segments":"An error occurred while retrieving the segments","segmentProducts":"An error occurred while retrieving the products of this segment","productDetail":"An error occurred while getting the product","categoryProducts":"An error occurred while retrieving the products of this category","congresses":"An error occurred while retrieving the congresses","congressDetail":"An error occurred while retrieving the congress information","activityDetail":"An error occurred while retrieving the activity information","training":"An error occurred while retrieving the training","trainingDetail":"An error occurred while retrieving the training information","learn":"An error occurred while retrieving the courses","learnDetail":"An error occurred while retrieving the course information","learnRegister":"An error occurred while registering","documents":"An error occurred while retrieving the documents. Retry later","folderDetail":"An error occurred while retrieving the folder","file":"An error occurred while obtaining the file","notInternal":"The user associated with that e-mail was not found. Check again the e-mail or try an external share.","furtherFolders":"You cannot create further folders, you have reached max depth level","fileUpload":"An error occurred while uploading the file. Check the name and the file","fileSystem":"An error occurred while obtaining the file. Retry later or check the permissions","search":"An error occurred while searching","usefulLinks":"An error occured while getting the links","missingMailPassword":"Insert email and password","cannotPerform":"Cannot perform operation","cannotGetRounds":"Failed to get rounds","cannotGetMessages":"Failed to get messages","cannotGetUserData":"Failed to get user data","cannotResetPassword":"Failed to reset password","cannotEnableNotifs":"Failed to enable notifications service","cannotChangePassword":"Failed to change password","failedUserRegistration":"Failed to register new user to team","cannotGetUserTypes":"Failed to fetch user types","notifError":{"title":"Missing notification permissions","message":"Please reinstall app or go to settings and accept notification permissions"}},"success":{"shared":"The document has been successfully shared with"}}')},ebb0:function(e,t,n){},f1c0:function(e,t,n){},f64b:function(e,t,n){},f756:function(e,t,n){"use strict";n("292d")},f93f:function(e,t,n){"use strict";n("003a")},fc65:function(e,t,n){"use strict";n("8c97")}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,