(function(e){function t(t){for(var s,c,o=t[0],i=t[1],l=t[2],u=0,b=[];u<o.length;u++)c=o[u],Object.prototype.hasOwnProperty.call(r,c)&&r[c]&&b.push(r[c][0]),r[c]=0;for(s in i)Object.prototype.hasOwnProperty.call(i,s)&&(e[s]=i[s]);d&&d(t);while(b.length)b.shift()();return a.push.apply(a,l||[]),n()}function n(){for(var e,t=0;t<a.length;t++){for(var n=a[t],s=!0,c=1;c<n.length;c++){var i=n[c];0!==r[i]&&(s=!1)}s&&(a.splice(t--,1),e=o(o.s=n[0]))}return e}var s={},r={app:0},a=[];function c(e){return o.p+"js/"+({"polyfills-core-js":"polyfills-core-js","polyfills-dom":"polyfills-dom"}[e]||e)+"."+{"chunk-008cd3d6":"b41757d5","chunk-02c995b5":"94c321d8","chunk-09155df3":"f9029e36","chunk-09162720":"0a4b8a6f","chunk-097e0872":"924cb888","chunk-0e93a01c":"2a03864d","chunk-1dbc15a2":"d4ea55a8","chunk-1f3fa45a":"bfc8b673","chunk-21a76241":"56c5b776","chunk-25d83ca8":"77968906","chunk-2d0a3ffc":"033341ab","chunk-2d0a463b":"e0d56be5","chunk-2d0a4885":"44477eab","chunk-2d0c073f":"75c8948f","chunk-2d0c8407":"97f4bdb4","chunk-2d0d43da":"98e5d41e","chunk-2d0d5c33":"d98bbfcf","chunk-2d0d6f0e":"6d90b37a","chunk-2d0da04a":"5a12f00d","chunk-2d0e5812":"3a337311","chunk-2d0f0050":"09f1b677","chunk-2d208e4e":"f0965e8f","chunk-2d212be3":"4900f968","chunk-2d213189":"f8291c06","chunk-2d218068":"0dd720d9","chunk-2d21da73":"18c16efc","chunk-30dd9750":"5998ca9d","chunk-34f7327c":"fb05cd76","chunk-37f2300e":"b40e49a7","chunk-3ed29de3":"c39a3d9d","chunk-41c0f7a4":"1a6ecd8a","chunk-462c869e":"534524f9","chunk-504c4825":"c9a2d163","chunk-541ea42d":"4cd7b395","chunk-54bbd082":"c812a52b","chunk-59d4c87c":"81f265f9","chunk-5a8ac886":"7f4f1ff1","chunk-5ff96a24":"4d8b0386","chunk-69eb8776":"cd873c98","chunk-6d375f34":"2e1da4ac","chunk-7548ca2d":"394aba2a","chunk-79f1dac7":"f5516dfd","chunk-858cd918":"7c7d6d68","chunk-8bb7f81e":"bab595d0","chunk-a9395c36":"acb6d4db","chunk-c53d26f0":"ac72f8d0","chunk-c567cc2a":"68364b0e","chunk-d0e8aa0a":"75ac617e","chunk-d8413eac":"5276bc60","chunk-eaa2b130":"344a8632","chunk-f858ef4e":"e07e88d3","polyfills-core-js":"12be3461","polyfills-dom":"662760da","chunk-2d0b62ff":"b9c47961","chunk-2d0b33e3":"2e69defc","chunk-2d0bd1c8":"5808fd24","chunk-2d0c1ca1":"54c24b51","chunk-2d0e19fd":"776759ed","chunk-2d209619":"b117e2af","chunk-2d2376e6":"a05b70ee"}[e]+".js"}function o(t){if(s[t])return s[t].exports;var n=s[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.e=function(e){var t=[],n=r[e];if(0!==n)if(n)t.push(n[2]);else{var s=new Promise((function(t,s){n=r[e]=[t,s]}));t.push(n[2]=s);var a,i=document.createElement("script");i.charset="utf-8",i.timeout=120,o.nc&&i.setAttribute("nonce",o.nc),i.src=c(e);var l=new Error;a=function(t){i.onerror=i.onload=null,clearTimeout(u);var n=r[e];if(0!==n){if(n){var s=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;l.message="Loading chunk "+e+" failed.\n("+s+": "+a+")",l.name="ChunkLoadError",l.type=s,l.request=a,n[1](l)}r[e]=void 0}};var u=setTimeout((function(){a({type:"timeout",target:i})}),12e4);i.onerror=i.onload=a,document.head.appendChild(i)}return Promise.all(t)},o.m=e,o.c=s,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)o.d(n,s,function(t){return e[t]}.bind(null,s));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="/",o.oe=function(e){throw console.error(e),e};var i=window["webpackJsonp"]=window["webpackJsonp"]||[],l=i.push.bind(i);i.push=t,i=i.slice();for(var u=0;u<i.length;u++)t(i[u]);var d=l;a.push([0,"chunk-vendors"]),n()})({0:function(e,t,n){e.exports=n("56d7")},"003a":function(e,t,n){},"0857":function(e,t,n){"use strict";n("b8c9")},"125f":function(e,t,n){"use strict";n("56b3")},1306:function(e,t,n){"use strict";n("9259")},1712:function(e,t,n){"use strict";n("8120")},"1c05":function(e,t,n){"use strict";n("eaa6")},"1e56":function(e,t,n){},"20cf":function(e,t,n){},"225b":function(e,t,n){"use strict";n("20cf")},2628:function(e){e.exports=JSON.parse('{"order":{"span":"Order by","placeholder":"Order by","name":"order"},"type":{"span":"Type","placeholder":"Select type","name":"type"},"subcategories":{"span":"Subcategories","placeholder":"Select cat.","name":"subcategory"},"categories":{"span":"Categories","placeholder":"Select cat.","name":"category"},"category":{"span":"Category","placeholder":"Select cat.","name":"category"},"faculties":{"span":"Faculty","placeholder":"Select faculty","name":"faculty"},"pillars":{"span":"Pillar","placeholder":"Select pillar","name":"pillar"},"months":{"span":"Month","placeholder":"Select month","name":"month"},"month":{"span":"Month","placeholder":"Select month","name":"month"},"years":{"span":"Year","placeholder":"Select year","name":"year"},"year":{"span":"Year","placeholder":"Select year","name":"year"},"country":{"span":"Country","placeholder":"Select country","name":"region"},"regions":{"span":"Region","placeholder":"Select region","name":"region"},"segment":{"span":"Segment","placeholder":"Select segment","name":"segment"},"segments":{"span":"Segment","placeholder":"Select segment","name":"segment"},"language":{"span":"Language","placeholder":"Select language","name":"language"},"typology":{"span":"Typology","placeholder":"Select typology","name":"typology"},"speaker":{"span":"Speaker","placeholder":"Select speaker","name":"speaker"}}')},"274e":function(e,t,n){"use strict";n("a9b5")},"2c3a":function(e,t,n){"use strict";n("2c6b")},"2c6b":function(e,t,n){},"2d5f":function(e,t,n){"use strict";n("9e7e")},"2d67":function(e,t,n){},"38b3":function(e,t,n){},"3c35":function(e,t,n){"use strict";n("c64f")},4508:function(e,t,n){"use strict";n("d136")},"47c5":function(e,t,n){},"4c8d":function(e,t,n){},"51df":function(e,t,n){},"535e":function(e,t,n){},"568b":function(e,t,n){"use strict";n("ebb0")},"56b3":function(e,t,n){},"56d7":function(e,t,n){"use strict";n.r(t);var s={};n.r(s),n.d(s,"alreadyLoggedRouting",(function(){return sO})),n.d(s,"logScreenView",(function(){return aO})),n.d(s,"logout",(function(){return oO})),n.d(s,"login",(function(){return iO})),n.d(s,"loginWithToken",(function(){return uO})),n.d(s,"syncOneSignal",(function(){return bO})),n.d(s,"getNotifications",(function(){return hO})),n.d(s,"getHome",(function(){return mO})),n.d(s,"getMessages",(function(){return OO})),n.d(s,"setMessageAs",(function(){return vO})),n.d(s,"sendMessageResponse",(function(){return xO}));var r=n("5530"),a=n("1da1"),c=(n("e260"),n("e6cf"),n("cca6"),n("a79d"),n("96cf"),n("caad"),n("2532"),n("ac1f"),n("1276"),n("7a23"));function o(e,t,n,s,r,a){var o=Object(c["y"])("router-view"),i=Object(c["y"])("ion-app");return Object(c["q"])(),Object(c["e"])(i,null,{default:Object(c["D"])((function(){return[Object(c["h"])(o)]})),_:1})}var i=n("8a30"),l={name:"App",components:{IonApp:i["a"]}},u=n("d959"),d=n.n(u);const b=d()(l,[["render",o]]);var p=b,h=n("2ad9"),f=n("9f0e"),m=Object(c["G"])("data-v-72cc4640");Object(c["t"])("data-v-72cc4640");var g={id:"container"};Object(c["r"])();var O=m((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-refresher-content"),i=Object(c["y"])("ion-refresher"),l=Object(c["y"])("router-view"),u=Object(c["y"])("ion-content"),d=Object(c["y"])("Tabs"),b=Object(c["y"])("ion-page");return Object(c["q"])(),Object(c["e"])(b,{style:a.isApp?"":"max-width:400px; margin:auto;"},{default:m((function(){return[Object(c["h"])(u,{id:"content",fullscreen:!0,forceOverscroll:!0,"scroll-x":!0,"overflow-scroll":!0,style:a.isApp?"":"-webkit-overflow-scrolling: touch;  overflow-y: scroll !important;"},{default:m((function(){return[a.refreshAction?(Object(c["q"])(),Object(c["e"])(i,{key:0,slot:"fixed",onIonRefresh:t[1]||(t[1]=function(t){return e.$store.dispatch(a.refreshAction,t)})},{default:m((function(){return[Object(c["h"])(o)]})),_:1})):Object(c["f"])("",!0),Object(c["h"])("div",g,[Object(c["h"])(l)])]})),_:1},8,["style"]),a.modalNotOpen?(Object(c["q"])(),Object(c["e"])(d,{key:0})):Object(c["f"])("",!0)]})),_:1},8,["style"])})),j=(n("b0c0"),Object(c["G"])("data-v-d25547cc"));Object(c["t"])("data-v-d25547cc");var v={class:"w-full fixed bottom-0 left-0 bg-transparent",style:{height:"72px"}},y={class:"h-full h-full flex tabs-bar bg-black px-8"};Object(c["r"])();var x=j((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-img");return Object(c["q"])(),Object(c["e"])("div",v,[Object(c["h"])("div",y,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.routingTabs,(function(t,n){return Object(c["q"])(),Object(c["e"])("div",{key:n,tab:t.name,class:[t.disabled?"pointer-events-none":"cursor-pointer"," flex flex-grow justify-center items-center"],onClick:function(n){return e.$router.push(t.href)}},[Object(c["h"])(o,{src:t.icon,class:t.active?"":t.disabled?"opacity-25":"opacity-50"},null,8,["src","class"])],10,["tab","onClick"])})),128))])])})),w=(n("d81d"),{components:{IonImg:i["d"]},data:function(){return{tabs:[{name:"home",href:"/home",icon:"/assets/button-icons/home.svg"},{name:"products",href:"/products",icon:"/assets/button-icons/products.svg"},{name:"documents",href:"/documents",icon:"/assets/button-icons/documents.svg"},{name:"search",href:"/search",icon:"/assets/button-icons/search.svg"},{name:"menu",href:"/menu",icon:"/assets/button-icons/menu.svg"}]}},props:{home:Boolean},computed:{routingTabs:function(){var e=this.$route.path,t=this.getActivePath(e);return this.tabs.map((function(e){return Object(r["a"])(Object(r["a"])({},e),{},{active:e.href===t})}))}},methods:{getActivePath:function(e){for(var t=0;t<this.tabs.length;t++){var n=this.tabs[t].href;if(e.includes(n))return n}}}});n("1c05");const k=d()(w,[["render",x],["__scopeId","data-v-d25547cc"]]);var C=k,S=n("1547"),_={components:{IonContent:i["c"],IonPage:i["h"],IonRefresher:i["i"],IonRefresherContent:i["j"],Tabs:C},computed:{isApp:function(){return this.checkIsApp(S["a"].getPlatform())},showBack:function(){return this.$route.meta.showBack},showWizard:function(){return this.$route.meta.showWizard},refreshAction:function(){return this.$route.meta.refreshAction||!1},modalNotOpen:function(){return!this.$store.state.isModalOpen}},methods:{openWizard:function(){this.$router.push("/wizard")},backButton:function(){this.$router.push("/home")}},mounted:function(){this.$store.getters.formattedLaunchUrl&&this.$store.getters.formattedLaunchUrl.includes(this.$route.path)&&this.$store.commit("setLaunchUrl",null)}};n("57e4");const q=d()(_,[["render",O],["__scopeId","data-v-72cc4640"]]);var D=q,$=Object(c["G"])("data-v-01efd17a");Object(c["t"])("data-v-01efd17a");var T={id:"container"};Object(c["r"])();var A=$((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-refresher-content"),i=Object(c["y"])("ion-refresher"),l=Object(c["y"])("router-view"),u=Object(c["y"])("ion-content"),d=Object(c["y"])("Tabs"),b=Object(c["y"])("ion-page");return Object(c["q"])(),Object(c["e"])(b,{"overflow-scroll":"true",style:a.isApp?"":"max-width:400px; margin:auto;"},{default:$((function(){return[Object(c["h"])(u,{id:"content",fullscreen:!0,forceOverscroll:!0,"scroll-x":!0,"overflow-scroll":!0,style:a.isApp?"":"-webkit-overflow-scrolling: touch;  overflow-y: scroll !important;"},{default:$((function(){return[a.refreshAction?(Object(c["q"])(),Object(c["e"])(i,{key:0,slot:"fixed",onIonRefresh:t[1]||(t[1]=function(e){return a.onRefresh(a.refreshAction,e)})},{default:$((function(){return[Object(c["h"])(o)]})),_:1})):Object(c["f"])("",!0),Object(c["h"])("div",T,[Object(c["h"])(l)])]})),_:1},8,["style"]),Object(c["h"])(d)]})),_:1},8,["style"])})),I=(n("159b"),{methods:{openUpdates:function(){this.$router.push("/updates")},backButton:function(){this.$router.push("/home")},onRefresh:function(e,t){var n=this;Array.isArray(e)?e.forEach((function(e){n.$store.dispatch(e,t)})):this.$store.dispatch(e,t),t.target.complete()}},computed:{isApp:function(){return this.checkIsApp(S["a"].getPlatform())},showBack:function(){return this.$route.meta.showBack},refreshAction:function(){return this.$route.meta.refreshAction||!1}},created:function(){this.$store.dispatch("getHome")},components:{IonContent:i["c"],IonPage:i["h"],IonRefresher:i["i"],IonRefresherContent:i["j"],Tabs:C}});n("c5a9");const R=d()(I,[["render",A],["__scopeId","data-v-01efd17a"]]);var P=R,M={id:"container"};function L(e,t,n,s,r,a){var o=Object(c["y"])("router-view"),i=Object(c["y"])("ion-content"),l=Object(c["y"])("ion-page");return Object(c["q"])(),Object(c["e"])(l,{style:a.isApp?"":"max-width:400px; margin:auto;"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{id:"content",fullscreen:!0,forceOverscroll:!0,"scroll-x":!0,"overflow-scroll":!0,style:a.isApp?"":"-webkit-overflow-scrolling: touch;  overflow-y: auto !important;"},{default:Object(c["D"])((function(){return[Object(c["h"])("div",M,[Object(c["h"])(o)])]})),_:1},8,["style"])]})),_:1},8,["style"])}var N={components:{IonContent:i["c"],IonPage:i["h"]},computed:{isApp:function(){return this.checkIsApp(S["a"].getPlatform())}}};const B=d()(N,[["render",L]]);var E=B,V=Object(c["G"])("data-v-9c3cc1fa");Object(c["t"])("data-v-9c3cc1fa");var U={class:"min-h-screen gradient-background relative max-h-screen overflow-y-auto pb-20"},z={class:"w-full relative"},F={key:0,class:"absolute width-8 height-8 bg-red rounded-full top-0 right-0 pointer-events-none",style:{"margin-top":"4px","margin-right":"4px"}},G={class:"absolute top-0 z-0 w-full h-full"},H={class:"text-black font-helvetica-bold text-20 pointer-events-none"},W=Object(c["h"])("br",null,null,-1),Y=Object(c["g"])("Welcome Back "),J={class:"w-full relative pt-4 overflow-y-visible"},K={class:"relative mr-2 width-64 overflow-y-visible"},X={class:"font-helvetica-medium text-black text-16"},Q=Object(c["h"])("div",null," ",-1),Z=Object(c["h"])("div",null," ",-1),ee=Object(c["h"])("div",null," ",-1);Object(c["r"])();var te=V((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("shadow-button"),l=Object(c["y"])("Title"),u=Object(c["y"])("searchbar"),d=Object(c["y"])("grey-container"),b=Object(c["y"])("carousel"),p=Object(c["y"])("home-documents"),h=Object(c["y"])("home-titled-container"),f=Object(c["y"])("home-news"),m=Object(c["y"])("home-congress");return Object(c["q"])(),Object(c["e"])("div",U,[Object(c["h"])("div",z,[Object(c["h"])("div",{class:"bg-transparent absolute top-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;":"height:90px;"},[Object(c["h"])(i,{square:"",styles:"position:relative;",bgClass:"bg-white ml-auto my-auto",onOnClick:a.openNotifications},{default:V((function(){return[Object(c["h"])(o,{src:"/assets/menu/notifications.svg",className:"pointer-events-none"}),e.$store.getters.areNotificationsNotRead&&e.$store.getters.areNotificationsNotRead>0?(Object(c["q"])(),Object(c["e"])("div",F)):Object(c["f"])("",!0)]})),_:1},8,["onOnClick"])],4),Object(c["h"])(o,{src:"/assets/hero.png",class:"w-full z-0 pointer-events-none"}),Object(c["h"])("div",G,[Object(c["h"])(l,{titleClass:"relative pb-4 text-black font-helvetica-bold text-28 block px-8 pt-20 z-10"},{default:V((function(){return[Object(c["h"])("span",H,[Object(c["g"])("Hi "+Object(c["A"])(e.$store.getters.userData.first_name)+", ",1),W]),Y]})),_:1}),Object(c["h"])(u,{classes:"mx-8 mt-4",onSubmit:a.routeToSearch},null,8,["onSubmit"])])]),Object(c["h"])("div",J,[Object(c["h"])(b,{height:"h-24",id:"products-carousel"},{default:V((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(e.$store.getters.homeProducts,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"w-auto-important flex",key:t,onClick:function(t){return a.routeToSegment(e)}},[Object(c["h"])(d,{classes:[0===t?"ml-8 ":""," p-6 mr-4 overflow-y-visible mt-auto pointer-events-none"]},{default:V((function(){return[Object(c["h"])("div",K,[Object(c["h"])(o,{src:e.preview,class:"absolute bottom-0 blend-mode-darken -mb-2"},null,8,["src"])]),Object(c["h"])("span",X,Object(c["A"])(e.name),1)]})),_:2},1032,["classes"])],8,["onClick"])})),128))]})),_:1})]),Object(c["h"])(h,{label:"Documents",path:"/documents"},{default:V((function(){return[Object(c["h"])(b,{id:"documents-carousel",classes:"py-4 -my-4"},{default:V((function(){return[e.$store.getters.showUS?(Object(c["q"])(),Object(c["e"])(p,{key:0,type:"us",title:"US",titleClass:"bg-red text-white px-2 mb-2 mr-auto rounded-6",classes:"ml-8",docs:e.$store.getters.homeDocuments.us},null,8,["docs"])):Object(c["f"])("",!0),Object(c["h"])(p,{type:"my",title:"My Docs",docs:e.$store.getters.homeDocuments.my,classes:e.$store.getters.showUS?"":"ml-8"},null,8,["docs","classes"]),Object(c["h"])(p,{type:"shared",title:"Shared with me",docs:e.$store.getters.homeDocuments.shared},null,8,["docs"]),Q]})),_:1})]})),_:1}),e.$store.getters.homeNews&&e.$store.getters.homeNews.length?(Object(c["q"])(),Object(c["e"])(h,{key:0,label:"News",path:"/news",classes:"overflow-y-visible"},{default:V((function(){return[Object(c["h"])(b,{id:"news-carousel"},{default:V((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(e.$store.getters.homeNews,(function(e,t){return Object(c["q"])(),Object(c["e"])(f,{key:t,index:t,news:e},null,8,["index","news"])})),128)),Z]})),_:1})]})),_:1})):Object(c["f"])("",!0),e.$store.getters.homeCongresses&&e.$store.getters.homeCongresses.length?(Object(c["q"])(),Object(c["e"])(h,{key:1,label:"Congresses and Events",path:"/congresses"},{default:V((function(){return[Object(c["h"])(b,{id:"congresses-carousel",classes:"py-4 -mt-4"},{default:V((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(e.$store.getters.homeCongresses,(function(e,t){return Object(c["q"])(),Object(c["e"])(m,{key:t,index:t,congress:e},null,8,["index","congress"])})),128)),ee]})),_:1})]})),_:1})):Object(c["f"])("",!0),Object(c["x"])(e.$slots,"default",{},void 0,!0)])}));function ne(e,t,n,s,r,a){return Object(c["q"])(),Object(c["e"])("span",{class:n.titleClass},[Object(c["x"])(e.$slots,"default")],2)}var se={props:{label:String,titleClass:[String,Array]},components:{}};const re=d()(se,[["render",ne]]);var ae=re;n("841c");function ce(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-input");return Object(c["q"])(),Object(c["e"])("form",{onSubmit:t[3]||(t[3]=Object(c["F"])((function(){return a.submitSearch&&a.submitSearch.apply(a,arguments)}),["prevent"])),class:"bg-white small-shadow rounded-8 flex items-center z-10 relative px-2 ".concat(n.classes||"")},[Object(c["h"])(o,{src:"/assets/button-icons/search-black.svg",class:"width-24 height-24"}),Object(c["h"])(i,{required:"",class:"mx-2",placeholder:"Search",modelValue:r.search,"onUpdate:modelValue":t[1]||(t[1]=function(e){return r.search=e}),onKeydown:Object(c["E"])(Object(c["F"])(a.submitSearch,["prevent"]),["enter"])},null,8,["modelValue","onKeydown"]),r.search&&r.search.length?(Object(c["q"])(),Object(c["e"])("div",{key:0,onClick:t[2]||(t[2]=function(){return a.cancelValue&&a.cancelValue.apply(a,arguments)}),class:"flex"},[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",class:"my-auto"})])):Object(c["f"])("",!0)],34)}var oe={components:{IonImg:i["d"],IonInput:i["e"]},props:{classes:[String,Array]},data:function(){return{search:""}},created:function(){this.$route.query.string&&this.$route.query.string.length&&(this.search=this.$route.query.string,this.$emit("submit",this.search))},methods:{cancelValue:function(){this.search="",this.$emit("cancel")},submitSearch:function(){this.search&&this.$emit("submit",this.search)}}};const ie=d()(oe,[["render",ce]]);var le=ie,ue={class:"relative cursor-grab"};function de(e,t,n,s,r,a){var o=Object(c["y"])("ion-scroll");return Object(c["q"])(),Object(c["e"])("div",ue,[Object(c["h"])(o,{"overflow-scroll":"false",direction:"x",id:a.computedID,class:[n.height||"",n.classes||"","flex w-full max-w-full overflow-x-auto overflow-y-visible carousel"]},{default:Object(c["D"])((function(){return[Object(c["x"])(e.$slots,"default")]})),_:3},8,["id","class"])])}n("a9e3");var be={components:{IonScroll:i["IonScroll"]},props:{height:[Number,String],classes:[String,Array],id:String},methods:{scrollLeft:function(){}},computed:{computedID:function(){return this.id||"carousel-"+Math.floor(5*Math.random())}},mounted:function(){var e=null;e=this.computedID?document.querySelector("#"+this.computedID):document.querySelector(".carousel");var t,n,s=!1;e&&(e.addEventListener("mousedown",(function(r){s=!0,e.classList.add("active"),t=r.pageX-e.offsetLeft,n=e.scrollLeft})),e.addEventListener("mouseleave",(function(){s=!1,e.classList.remove("active")})),e.addEventListener("mouseup",(function(){s=!1,e.classList.remove("active")})),e.addEventListener("mousemove",(function(r){if(s){r.preventDefault();var a=r.pageX-e.offsetLeft,c=3*(a-t);e.scrollLeft=n-c}})))}};const pe=d()(be,[["render",de]]);var he=pe;function fe(e,t,n,s,r,a){return Object(c["q"])(),Object(c["e"])("div",{class:a.divClass},[Object(c["x"])(e.$slots,"default")],2)}n("99af");var me={props:{squareSize:String,rounded:String,classes:[String,Array],vertical:Boolean},computed:{divClass:function(){return"rounded-".concat(this.rounded||"8"," bg-light-grey flex ").concat(this.vertical?"flex-col justify-between items-center":"justify-between items-baseline"," ").concat(this.squareSize?"width-"+this.squareSize+" height-"+this.squareSize:""," ").concat(this.classes||"")}}};const ge=d()(me,[["render",fe]]);var Oe=ge;function je(e,t,n,s,r,a){var o=Object(c["y"])("ion-img");return Object(c["q"])(),Object(c["e"])("div",{class:a.divClass},[Object(c["h"])("div",{onClick:t[1]||(t[1]=function(){return a.routeToPath&&a.routeToPath.apply(a,arguments)}),class:[n.headClass,"px-8 flex justify-between items-center cursor-pointer pb-4"]},[Object(c["h"])("span",{class:[n.titleClass,"font-helvetica-bold text-black text-20"]},Object(c["A"])(n.label),3),Object(c["h"])(o,{src:"/assets/button-icons/forward.svg",className:"width-12 height-12 pointer-events-none"})],2),Object(c["x"])(e.$slots,"default")],2)}var ve={components:{IonImg:i["d"]},props:{path:String,label:String,pt:String,classes:[String,Array],titleClass:[String,Array],headClass:[String,Array]},computed:{divClass:function(){var e="pt-".concat(this.pt||12," ");return e+=this.classes||"",e}},methods:{routeToPath:function(){this.$router.push(this.path)}}};const ye=d()(ve,[["render",je]]);var xe=ye,we=Object(c["G"])("data-v-15c33845");Object(c["t"])("data-v-15c33845");var ke={class:"news-image w-full overflow-hidden rounded-12 mb-4 container-shadow pointer-events-none"},Ce={class:"font-helvetica-medium text-black text-16"};Object(c["r"])();var Se=we((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-img");return Object(c["q"])(),Object(c["e"])("div",{onClick:t[1]||(t[1]=function(){return a.routeToNews&&a.routeToNews.apply(a,arguments)}),class:[0===n.index?"ml-8 ":"","flex flex-col home-container mr-4"]},[Object(c["h"])("div",ke,[Object(c["h"])(o,{src:n.news.preview,class:"w-full object-cover"},null,8,["src"])]),Object(c["h"])("span",Ce,Object(c["A"])(n.news.title),1)],2)})),_e={components:{IonImg:i["d"]},props:{news:Object,index:Number},methods:{routeToNews:function(){this.$router.push("/news/"+this.news.id)}}};n("9923");const qe=d()(_e,[["render",Se],["__scopeId","data-v-15c33845"]]);var De=qe,$e=Object(c["G"])("data-v-2fd6c3b6");Object(c["t"])("data-v-2fd6c3b6");var Te={class:"congress w-full overflow-hidden rounded-12 flex flex-col justify-between p-6 bg-white elevated-shadow"},Ae={class:"w-full text-black font-helvetica-medium text-16 mb-1 spacing-5 line-28"},Ie={class:"w-full text-grey font-helvetica text-14 mb-0 mb-4 spacing-44 line-24",style:{overflow:"hidden","text-overflow":"ellipsis",display:"-webkit-box","-webkit-line-clamp":"2","line-clamp":"2","-webkit-box-orient":"vertical"}},Re={class:"flex flex-row mr-auto"},Pe={class:"p-1 bg-light-red rounded-6 font-helvetica-medium text-12 text-red mr-2"},Me={key:0,class:"p-1 px-2 bg-red rounded-6 font-helvetica-medium text-12 text-white"},Le={key:1,class:"p-1 px-2 bg-black rounded-6 font-helvetica-medium text-12 text-white"};Object(c["r"])();var Ne=$e((function(e,t,n,s,r,a){return Object(c["q"])(),Object(c["e"])("div",{onClick:t[1]||(t[1]=function(){return a.routeToCongress&&a.routeToCongress.apply(a,arguments)}),class:[0===n.index?"ml-8 ":"","home-big-container flex flex-col mr-4 -mt-4 pt-4 pb-4"]},[Object(c["h"])("div",Te,[Object(c["h"])("span",Ae,Object(c["A"])(n.congress.name),1),Object(c["h"])("p",Ie,Object(c["A"])(n.congress.subtitle),1),Object(c["h"])("div",Re,[Object(c["h"])("div",Pe,Object(c["A"])(n.congress.dates),1),"event"===n.congress.type?(Object(c["q"])(),Object(c["e"])("div",Me," Event ")):(Object(c["q"])(),Object(c["e"])("div",Le," Congress "))])])],2)})),Be={props:{congress:Object,index:Number},methods:{routeToCongress:function(){this.$router.push("/congresses/"+this.congress.id)}}};n("b7fd");const Ee=d()(Be,[["render",Ne],["__scopeId","data-v-2fd6c3b6"]]);var Ve=Ee,Ue=Object(c["G"])("data-v-7532fd24");Object(c["t"])("data-v-7532fd24");var ze={class:"bg-white w-full overflow-hidden rounded-12 flex flex-col justify-between elevated-shadow p-6"};Object(c["r"])();var Fe=Ue((function(e,t,n,s,r,a){var o=Object(c["y"])("document-list-item");return Object(c["q"])(),Object(c["e"])("div",{class:[n.classes,"home-big-container flex flex-col mr-4 -mt-4 pt-4 pb-4"]},[Object(c["h"])("div",ze,[Object(c["h"])("span",{class:[n.titleClass||"text-dark-grey mb-4","py-1 font-helvetica-medium text-16"]},Object(c["A"])(n.title),3),(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.docs,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{small:"",key:t,type:n.type,document:e,actions:e.actions,classes:t>0?"mt-4":""},null,8,["type","document","actions","classes"])})),128))])],2)})),Ge=(n("c96a"),{class:"flex flex-col justify-between items-start pointer-events-none"}),He={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},We={class:"font-helvetica text-14 text-grey spacing-44 line-24"},Ye={key:0,class:"font-helvetica text-12 text-grey spacing-44 line-14"};function Je(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("rename-modal"),u=Object(c["y"])("delete-modal"),d=Object(c["y"])("int-share-modal"),b=Object(c["y"])("folders-tree-modal");return Object(c["q"])(),Object(c["e"])(c["a"],null,[Object(c["h"])("div",{class:[a.divClass,"w-full flex justify-between items-center py-2 rounded-8"]},[Object(c["h"])("div",{onClick:t[1]||(t[1]=function(){return a.documentAction&&a.documentAction.apply(a,arguments)}),class:"flex justify-start items-center flex-grow"},[Object(c["h"])(i,{rounded:"8",squareSize:"44",bgClass:a.imageBackround,classes:[n.small?"mr-2 ":"mr-4 "," pointer-events-none flex"]},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:a.image,class:"m-auto"},null,8,["src"])]})),_:1},8,["bgClass","classes"]),Object(c["h"])("div",Ge,[Object(c["h"])("span",He,Object(c["A"])(a.updatedDocument.label||a.updatedDocument.name||a.updatedDocument.title),1),Object(c["h"])("span",We,Object(c["A"])("shared"===n.type?a.updatedDocument.subtitle:a.updatedDocument.size||a.updatedDocument.subtitle)+" "+Object(c["A"])(a.updatedDocument.languages_in_file?" - "+a.updatedDocument.languages_in_file:""),1),a.updatedDocument.code_points?(Object(c["q"])(),Object(c["e"])("span",Ye,Object(c["A"])(a.updatedDocument.code_points),1)):Object(c["f"])("",!0)])]),a.documentActions&&a.documentActions.length?(Object(c["q"])(),Object(c["e"])("div",{key:0,onClick:t[2]||(t[2]=function(){return a.openDocumentMenu&&a.openDocumentMenu.apply(a,arguments)}),class:"height-44 w-44 flex pl-4 cursor-pointer"},[Object(c["h"])(o,{src:"/assets/button-icons/threedots.svg",class:"width-4 height-18 my-auto ml-auto"})])):Object(c["f"])("",!0)],2),r.isRenameModalOpen?(Object(c["q"])(),Object(c["e"])(l,{key:0,doc:n.document,onOnClose:t[3]||(t[3]=function(e){return a.toggleModal("rename")})},null,8,["doc"])):Object(c["f"])("",!0),r.isDeleteModalOpen?(Object(c["q"])(),Object(c["e"])(u,{key:1,doc:n.document,onOnClose:t[4]||(t[4]=function(e){return a.toggleModal("delete")})},null,8,["doc"])):Object(c["f"])("",!0),r.isIntShareModalOpen?(Object(c["q"])(),Object(c["e"])(d,{key:2,isStorage:r.isStorageShare,doc:n.document,onOnClose:a.closeInternalShare},null,8,["isStorage","doc","onOnClose"])):Object(c["f"])("",!0),Object(c["h"])(b,{open:r.isMoveModalOpen,doc:n.document,onOnClose:t[5]||(t[5]=function(e){return a.toggleModal("move")})},null,8,["open","doc"])],64)}n("9911");var Ke=n("ac9e"),Xe=Object(c["G"])("data-v-7cfe70a6");Object(c["t"])("data-v-7cfe70a6");var Qe={class:"fixed top-0 left-0 w-full h-full flex justofy-center items-center"},Ze=Object(c["h"])("div",{class:"absolute top-0 left-0 bg-black opacity-50 w-full h-full pointer-events-none",style:{"z-index":"10"}},null,-1),et=Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-22 line-30 text-black mb-1 block"},"Rename folder",-1),tt={class:"mt-2 w-full flex justify-end items-center"},nt=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16 spacing-5 line-24 m-auto normal-case"},"Cancel",-1),st=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case"},"Save",-1);Object(c["r"])();var rt=Xe((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-input"),i=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])("div",Qe,[Ze,Object(c["h"])("form",{class:"relative z-10 bg-white rounded-8 p-6 mx-auto ",style:{"min-width":"300px","max-width":"300px"},onSubmit:t[3]||(t[3]=function(){return a.saveName&&a.saveName.apply(a,arguments)})},[et,Object(c["h"])(o,{type:"text",placeholder:"New name",modelValue:r.name,"onUpdate:modelValue":t[1]||(t[1]=function(e){return r.name=e}),class:"font-helvetica text-16 spacing-5 line-28 text-black my-2 pb-2 border-grey border-b",required:""},null,8,["modelValue"]),Object(c["h"])("div",tt,[Object(c["h"])("div",{class:"bg-white\n            rounded-12 flex justify-center items-center height-56 w-auto px-2 ml-auto normal-case mr-4 shadow-none\n          ",onClick:t[2]||(t[2]=function(){return a.cancel&&a.cancel.apply(a,arguments)})},[nt]),Object(c["h"])(i,{type:"submit",class:"rounded-12 flex justify-center items-center height-56 w-auto normal-case",style:{"--padding-start":"0.5rem","--pading-right":"0.5rem"}},{default:Xe((function(){return[st]})),_:1})])],32)])})),at=n("eba1"),ct=n("a43b"),ot={components:{IonButton:i["b"],IonInput:i["e"]},props:{doc:Object},data:function(){return{name:this.doc.title}},methods:{cancel:function(){this.$emit("onClose")},saveName:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var s;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(e.preventDefault(),!(t.name&&t.name.length&&t.doc.id)){n.next=9;break}return n.next=4,t.$http({method:"POST",url:ct.folders.create+"/"+t.doc.id,data:{name:t.name},loader:!0});case 4:s=n.sent,console.log(s),t.$router.go(),n.next=11;break;case 9:console.error("No folder in route"),t.$toast({message:at.errors.folderDetail,color:"danger"});case 11:t.$emit("onClose");case 12:case"end":return n.stop()}}),n)})))()}},created:function(){this.name=this.doc.title}};n("cffe");const it=d()(ot,[["render",rt],["__scopeId","data-v-7cfe70a6"]]);var lt=it,ut=Object(c["G"])("data-v-8f89d138");Object(c["t"])("data-v-8f89d138");var dt={class:"fixed top-0 left-0 w-full h-full flex justofy-center items-center"},bt=Object(c["h"])("div",{class:"absolute top-0 left-0 bg-black opacity-50 w-full h-full pointer-events-none",style:{"z-index":"10"}},null,-1),pt=Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-22 line-30 text-black mb-1 block"},"Are you sure?",-1),ht=Object(c["h"])("p",{class:"w-full font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mt-2"}," By pressing confirm you will delete ",-1),ft={class:"w-full font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mb-2"},mt={class:"mt-2 w-full flex justify-end items-center"},gt=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16 spacing-5 line-24 m-auto normal-case"},"Cancel",-1),Ot=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case bg-red"},"Confirm",-1);Object(c["r"])();var jt=ut((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])("div",dt,[bt,Object(c["h"])("form",{class:"relative z-10 bg-white rounded-8 p-6 mx-auto flex flex-col",style:{"min-width":"300px","max-width":"300px"},onSubmit:t[2]||(t[2]=function(){return a.deleteDoc&&a.deleteDoc.apply(a,arguments)})},[pt,ht,Object(c["h"])("p",ft," the "+Object(c["A"])(a.type)+' "'+Object(c["A"])(a.name)+'" ',1),Object(c["h"])("div",mt,[Object(c["h"])("div",{class:"bg-white\n            rounded-12 flex justify-center items-center height-56 w-auto px-2 ml-auto normal-case mr-4 shadow-none\n          ",onClick:t[1]||(t[1]=function(){return a.cancel&&a.cancel.apply(a,arguments)})},[gt]),Object(c["h"])(o,{color:"secondary",type:"submit",class:"rounded-12 flex justify-center items-center height-56 w-auto px-2 normal-case"},{default:ut((function(){return[Ot]})),_:1})])],32)])})),vt={components:{IonButton:i["b"]},props:{doc:Object},computed:{name:function(){return this.doc.title},type:function(){return this.doc.type}},methods:{cancel:function(){this.$emit("onClose")},deleteDoc:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var s;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(e.preventDefault(),!(t.name&&t.name.length&&t.doc.id)){n.next=23;break}if(s="",n.prev=3,"folder"!==t.doc.type){n.next=10;break}return n.next=7,t.$http({method:"POST",url:ct.folders.create+"/"+t.doc.id+"/delete",loader:!0});case 7:s=n.sent,n.next=13;break;case 10:return n.next=12,t.$http({method:"POST",url:ct.documents.remove_from_my,loader:!0,data:{id:t.doc.id}});case 12:s=n.sent;case 13:n.next=19;break;case 15:n.prev=15,n.t0=n["catch"](3),console.error(n.t0),n.t0&&n.t0.response&&n.t0.reponse.data?t.$toast({message:n.t0,color:"danger"}):t.$toast({message:at.errors.folderDetail,color:"danger"});case 19:console.log(s),t.$router.go(),n.next=25;break;case 23:console.error("No folder in route"),t.$toast({message:at.errors.folderDetail,color:"danger"});case 25:t.$emit("onClose");case 26:case"end":return n.stop()}}),n,null,[[3,15]])})))()}}};n("3c35");const yt=d()(vt,[["render",jt],["__scopeId","data-v-8f89d138"]]);var xt=yt,wt=Object(c["G"])("data-v-522c87d4");Object(c["t"])("data-v-522c87d4");var kt={class:"fixed top-0 left-0 w-full h-full flex justify-center items-center z-10"},Ct=Object(c["h"])("div",{class:"absolute top-0 left-0 bg-black opacity-50 w-full h-full pointer-events-none",style:{"z-index":"10"}},null,-1),St={class:"font-helvetica-bold text-20 spacing-22 line-30 text-black mb-1 block"},_t=Object(c["h"])("span",{class:"font-helvetica text-12 spacing-38 line-24 text-grey"}," Write the full email or search and select one from the list below. Clicking again a selected user will unselect him. ",-1),qt={key:0,class:"flex flex-col"},Dt=Object(c["h"])("span",{class:"font-helvetica text-12 spacing-38 line-24 text-grey"}," Select a user: ",-1),$t={class:"flex flex-col",style:{"max-height":"200px","overflow-y":"auto"}},Tt={class:"mt-2 w-full flex justify-end items-center"},At=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16 spacing-5 line-24 m-auto normal-case "},"Cancel",-1),It=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case"},"Share",-1);Object(c["r"])();var Rt=wt((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-input"),i=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])("div",kt,[Ct,Object(c["h"])("form",{class:"relative z-10 bg-white rounded-8 p-6 mx-auto dialog-width",onSubmit:t[3]||(t[3]=function(){return a.saveName&&a.saveName.apply(a,arguments)})},[Object(c["h"])("span",St,"Share "+Object(c["A"])(n.doc.type)+" with",1),_t,Object(c["h"])(o,{required:"",type:"email",placeholder:"Search or add email",class:"input-filled font-helvetica text-16 spacing-5 line-28 text-black my-2",modelValue:r.email,"onUpdate:modelValue":t[1]||(t[1]=function(e){return r.email=e})},null,8,["modelValue"]),a.updatedList&&a.updatedList.length?(Object(c["q"])(),Object(c["e"])("div",qt,[Dt,Object(c["h"])("div",$t,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedList,(function(e){return Object(c["q"])(),Object(c["e"])("div",{key:e,class:["flex flex-row p-2 font-helvetica text-14 spacing-44 line-24 rounded-6 w-full",r.selected===e?"bg-black text-white":""],style:{"border-bottom":"1px solid #ededed"},onClick:function(t){return a.selectUser(e)}},Object(c["A"])(e),11,["onClick"])})),128))])])):Object(c["f"])("",!0),Object(c["h"])("div",Tt,[Object(c["h"])("div",{class:"bg-white\n            rounded-12 flex justify-center items-center height-56 w-auto px-2 ml-auto normal-case mr-4 shadow-none\n          ",onClick:t[2]||(t[2]=function(){return a.cancel&&a.cancel.apply(a,arguments)})},[At]),Object(c["h"])(i,{type:"submit",class:"rounded-12 flex justify-center items-center height-56 w-auto px-2 normal-case"},{default:wt((function(){return[It]})),_:1})])],32)])})),Pt=(n("a434"),{components:{IonButton:i["b"],IonInput:i["e"]},props:{doc:Object,isStorage:Boolean},computed:{recipient:function(){return this.selected&&this.selected.length?this.selected:this.email},updatedList:function(){if(this.selected&&this.selected.length){var e=this.list.map((function(e){return e})),t=this.list.indexOf(this.selected);return t>-1&&e.splice(t,1),e.unshift(this.selected),e}return this.list}},data:function(){return{email:"",selected:"",list:[]}},methods:{cancel:function(){this.$emit("onClose")},getList:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:ct.users.shareList,params:{search:e.email}});case 3:n=t.sent,n&&n.length&&(e.list=n),t.next=11;break;case 7:t.prev=7,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:at.errors.shareList,color:"danger"});case 11:case"end":return t.stop()}}),t,null,[[0,7]])})))()},saveName:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var s,r;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(t.email=t.selected,e.preventDefault(),!(t.recipient&&t.recipient.length&&t.doc.id)){n.next=18;break}return s={email:t.recipient,file:t.doc.id},r=ct.documents.share,"folder"===t.doc.type&&(r=ct.folders.share,delete s.file,s.folder=t.doc.id),t.isStorage&&(r=ct.documents.storage_share),n.prev=7,n.next=10,t.$http({method:"POST",url:r,data:s,loader:!0});case 10:t.$toast({message:at.success.shared+" "+t.recipient,color:"dark"}),n.next=16;break;case 13:n.prev=13,n.t0=n["catch"](7),n.t0&&n.t0.response&&404===n.t0.response.status?t.$toast({message:at.errors.notInternal,color:"danger",duration:6e3}):n.t0&&n.t0.response&&n.t0.response.data&&t.$toast({message:n.t0.response.data,color:"danger"});case 16:n.next=20;break;case 18:console.error("No folder in route"),t.$toast({message:at.errors.folderDetail,color:"danger"});case 20:t.$emit("onClose");case 21:case"end":return n.stop()}}),n,null,[[7,13]])})))()},selectUser:function(e){this.selected!==e?(this.selected=e,this.email=e):(this.selected="",this.email===e&&(this.email=""))}},watch:{email:function(e){e&&e.length>3&&this.getList()}}});n("6da2");const Mt=d()(Pt,[["render",Rt],["__scopeId","data-v-522c87d4"]]);var Lt=Mt;function Nt(e,t,n,s,r,a){return Object(c["q"])(),Object(c["e"])("div",{class:a.divClass,style:n.styles||""},[Object(c["x"])(e.$slots,"default")],6)}var Bt={props:{bgClass:String,squareSize:[String,Number],rounded:String,classes:[String,Array],styles:[String,Array]},computed:{divClass:function(){var e=this.classes;return"rounded-".concat(this.rounded||"8"," ").concat(this.bgClass||"bg-white"," ").concat(this.squareSize?"width-"+this.squareSize+" height-"+this.squareSize:"")+" flex justify-center items-center overflow-hidden "+e}}};const Et=d()(Bt,[["render",Nt]]);var Vt=Et,Ut=Object(c["G"])("data-v-37f92c80");Object(c["t"])("data-v-37f92c80");var zt={class:"w-full h-full relative pt-20 gradient-background"},Ft={class:"text-grey font-helvetica text-12 inline ml-auto my-auto"};Object(c["r"])();var Gt=Ut((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("tree-component"),u=Object(c["y"])("ion-modal");return Object(c["q"])(),Object(c["e"])(u,{animated:"",showBackdrop:"","css-class":"custom-modal","is-open":r.isOpened,onDidDismiss:t[1]||(t[1]=function(t){return e.$emit("onClose")})},{default:Ut((function(){return[Object(c["h"])("div",zt,[Object(c["h"])("div",{class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;min-height:70px;":"height:90px;min-height:90px;"},[Object(c["h"])(i,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.emitClose},{default:Ut((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"]),Object(c["h"])("span",Ft,'You are moving "'+Object(c["A"])(a.computedName)+'"',1)],4),Object(c["h"])(l,{source:n.doc},null,8,["source"])])]})),_:1},8,["is-open"])})),Ht=(n("fb6a"),{class:"flex flex-col px-8 h-full"}),Wt={class:"h-full flex flex-col overflow-y-scroll"},Yt={class:"w-full px-8 pb-4 pt-2 border-t border-grey"};function Jt(e,t,n,s,r,a){var o=Object(c["y"])("Title"),i=Object(c["y"])("tree-folder-component"),l=Object(c["y"])("big-button");return Object(c["q"])(),Object(c["e"])("form",{class:"flex h-full flex-col justify-between",onSubmit:t[2]||(t[2]=function(){return a.onSubmit&&a.onSubmit.apply(a,arguments)})},[Object(c["h"])("div",Ht,[Object(c["h"])(o,{titleClass:"pb-4 text-black font-helvetica-bold text-28 block"},{default:Object(c["D"])((function(){return[Object(c["g"])(" Choose destination: "+Object(c["A"])(a.destination),1)]})),_:1}),Object(c["h"])("div",Wt,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(r.tree,(function(e,t){return Object(c["q"])(),Object(c["e"])(i,{key:t,item:e,source:n.source,folder:r.folder,onSelectFolder:a.selectFolder},null,8,["item","source","folder","onSelectFolder"])})),128)),Object(c["h"])("div",{onClick:t[1]||(t[1]=function(e){return a.selectFolder(null)}),class:"flex h-full"})]),Object(c["h"])("div",Yt,[Object(c["h"])(l,{type:"submit",label:"Move"})])])],32)}var Kt={key:0,class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case"};function Xt(e,t,n,s,r,a){var o=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])(o,{type:n.type||"button",disabled:a.isDisabled,class:[n.bgClass,a.isDisabled||"cursor-pointer","big-button small-shadow rounded-12 flex justify-center items-center height-56 w-full normal-case"],style:n.styles||"",onClick:a.emitClick},{default:Object(c["D"])((function(){return[n.label&&n.label.length?(Object(c["q"])(),Object(c["e"])("span",Kt,Object(c["A"])(n.label),1)):Object(c["f"])("",!0),Object(c["x"])(e.$slots,"default")]})),_:3},8,["type","disabled","class","style","onClick"])}var Qt={emits:["onClick"],components:{IonButton:i["b"]},props:{bgClass:{type:String},styles:{type:String},square:{type:Boolean},disabled:{type:Boolean},type:{type:String},label:{type:String}},computed:{isDisabled:function(){return this.disabled}},methods:{emitClick:function(){this.$emit("onClick")}}};const Zt=d()(Qt,[["render",Xt]]);var en=Zt,tn={class:"flex flex-col "},nn={class:"flex justify-between items-center py-4 border-b border-grey"},sn={class:"font-helvetica-bold text-20 spacing-22 line-30 ml-2 text-black"},rn={key:0,class:"flex flex-col h-auto pl-8"};function an(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("TreeFolderComponent",!0);return Object(c["q"])(),Object(c["e"])("div",tn,[Object(c["h"])("div",nn,[Object(c["h"])("div",{onClick:t[1]||(t[1]=function(e){return a.toggleExpanded()}),class:[a.isExpandable?"":"pointer-events-none","flex justify-start items-center"]},[Object(c["h"])(o,{src:"/assets/button-icons/arrow-".concat(r.isExpanded?"down":"right",".svg"),class:[a.isExpandable?"":"opacity-0",r.isExpanded?"width-17 min-width-17":"width-12 min-width-12"]},null,8,["src","class"])],2),Object(c["h"])("div",{onClick:t[2]||(t[2]=function(e){return a.emitSelect(e,n.item)}),class:[a.isFolderTheSource?"opacity-50 pointer-events-none":"","flex-grow flex justify-between items-center"]},[Object(c["h"])("span",sn,Object(c["A"])(n.item.name),1),Object(c["h"])("div",{class:[a.isSelected?"border-black":"border-grey","bg-white width-24 height-24 rounded-full border p-1"]},[Object(c["h"])("div",{class:[a.isSelected?"bg-black":"bg-white","rounded-full w-full h-full pointer-events-none"]},null,2)],2)],2)]),r.isExpanded?(Object(c["q"])(),Object(c["e"])("div",rn,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.item.folders,(function(e,s){return Object(c["q"])(),Object(c["e"])(i,{key:s,item:e,folder:n.folder,source:n.source,onSelectFolder:t[3]||(t[3]=function(e){return a.emitSelect(null,e)})},null,8,["item","folder","source"])})),128))])):Object(c["f"])("",!0)])}var cn={name:"TreeFolderComponent",components:{IonImg:i["d"]},props:{item:Object,folder:Object,source:Object,classes:[String,Array]},data:function(){return{isExpanded:!1}},computed:{isFolderTheSource:function(){return!(!this.source||"folder"!==this.source.type||this.source.id!==this.item.id)},isExpandable:function(){return!!(this.item&&this.item.folders&&this.item.folders.length)},isSelected:function(){return!!this.folder&&this.folder.id===this.item.id}},methods:{emitSelect:function(e,t){e&&e.target&&e.stopPropagation();var n=t||this.item;this.$emit("selectFolder",n)},toggleExpanded:function(){this.isExpanded=!this.isExpanded}}};const on=d()(cn,[["render",an]]);var ln=on,un={components:{Title:ae,BigButton:en,TreeFolderComponent:ln},props:{source:Object},data:function(){return{isOpened:!1,folder:void 0,tree:[]}},computed:{destination:function(){return this.folder&&this.folder.name?this.folder.name:"My docs"}},methods:{getFileSystem:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:ct.folders.list});case 3:n=t.sent,e.tree=n,t.next=11;break;case 7:t.prev=7,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:at.errors.documents,color:"danger"});case 11:case"end":return t.stop()}}),t,null,[[0,7]])})))()},selectFolder:function(e){this.folder=e},onSubmit:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var s,r,a;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return e.preventDefault(),s="",r={},"folder"===t.source.type?(s=ct.folders.move,r.destination=t.folder?t.folder.id:null,r.folder=t.source.id):(s=ct.documents.move,r.folder=t.folder?t.folder.id:null,r.file=t.source.id),n.prev=4,n.next=7,t.$http({method:"POST",url:s,data:r});case 7:a=n.sent,console.log(a),t.$router.go(),n.next=16;break;case 12:n.prev=12,n.t0=n["catch"](4),console.error(n.t0),"folder"===t.source.type&&n.t0&&n.t0.response&&n.t0.response.data?t.$toast({message:n.t0.response.data,color:"danger"}):t.$toast({message:at.errors.documents,color:"danger"});case 16:case"end":return n.stop()}}),n,null,[[4,12]])})))()}},mounted:function(){this.getFileSystem()}};const dn=d()(un,[["render",Jt]]);var bn=dn,pn={components:{IonButton:i["b"],IonImg:i["d"],IonModal:i["g"],TreeComponent:bn},props:{doc:Object,open:Boolean},data:function(){return{isOpened:!1}},computed:{computedName:function(){var e=this.doc.title||this.doc.name;if(e&&e.length>20){var t=e.slice(0,5),n=e.slice(-5);return t+"..."+n}return e||""},isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())}},methods:{emitClose:function(){this.$emit("onClose")}},watch:{open:function(e){this.isOpened=e}}};n("274e");const hn=d()(pn,[["render",Gt],["__scopeId","data-v-37f92c80"]]);var fn=hn,mn={name:"MatomoManager",methods:{logPage:function(e){this.$matomo.setScreen({name:e,path:this.$route.path}),this.$matomo.trackView()},logEvent:function(e,t,n){this.$matomo.logEvent(e,t,n)}}};const gn=mn;var On=gn,jn={components:{SquareContainer:Vt,IonImg:i["d"],RenameModal:lt,DeleteModal:xt,IntShareModal:Lt,FoldersTreeModal:fn},props:{bgClass:{type:String},classes:{type:[String,Array]},document:{type:Object},small:{type:Boolean},actions:{type:Array},type:{type:String},documentType:{type:String}},mixins:[On],data:function(){return{action:null,isStorageShare:!1,isRenameModalOpen:!1,isDeleteModalOpen:!1,isIntShareModalOpen:!1,isMoveModalOpen:!1}},computed:{isApp:function(){return this.checkIsApp(S["a"].getPlatform())},documentActions:function(){var e=this.actions||this.updatedDocument.actions||[];return this.sortActions(e)},divClass:function(){return"".concat(this.bgClass||"bg-white"," ").concat(this.classes||"")},imageBackround:function(){return"folder"===this.document.type?"bg-light-grey2":"bg-light-red"},image:function(){return"folder"===this.document.type?"/assets/button-icons/folder.svg":"/assets/button-icons/pdf.svg"},updatedDocument:function(){return this.document},itemType:function(){return"folder"===this.document.type?"folder":"document"}},methods:{getAppInfo:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,e.$device.getAppInfo();case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)})))()},closeInternalShare:function(){this.isStorageShare=!1,this.toggleModal("internal_share")},getDocumentPath:function(e){var t="";return e.url?t=e.url:e.link?t=e.link:e.file?t=e.file:e.path&&(t=e.path),t},openFile:function(e){var t=this.getDocumentPath(e),n=document.createElement("a");n.target="_blank",n.href=t,document.body.appendChild(n),n.click(),document.body.removeChild(n)},documentAction:function(){this.document&&"folder"===this.document.type?this.$router.push("/documents/folder/".concat(this.document.id,"?type=").concat(this.type)):this.openDocumentMenu()},openActionModal:function(e){this.action=e,this.isActionModalOpen=!0},toggleModal:function(e){switch(e){case"rename":this.isRenameModalOpen=!this.isRenameModalOpen;break;case"delete":this.isDeleteModalOpen=!this.isDeleteModalOpen;break;case"move":this.isMoveModalOpen=!this.isMoveModalOpen;break;case"internal_share":this.isIntShareModalOpen=!this.isIntShareModalOpen;break}},logAction:function(e){this.logEvent(this.documentType||"Doc","".concat(e," ").concat(this.itemType),this.document.title||this.document.name||this.document.label)},openDocumentMenu:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,s,r,c;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:n=[],s=e.documentActions.map((function(e){return e}))||[],"folder"!==e.document.type&&(n.push({text:"Open",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(e.logAction("open"),!e.isApp){t.next=18;break}return n=e.getDocumentPath(e.updatedDocument),t.prev=3,t.next=6,e.$loading.show();case 6:return t.next=8,e.$docviewer(n,e.updatedDocument.title);case 8:t.next=14;break;case 10:t.prev=10,t.t0=t["catch"](3),console.error(t.t0),e.$toast({message:"Cannot open document",color:"danger"});case 14:return t.next=16,e.$loading.hide();case 16:t.next=19;break;case 18:e.openFile(e.updatedDocument);case 19:case"end":return t.stop()}}),t,null,[[3,10]])})));function n(){return t.apply(this,arguments)}return n}()}),n.push({text:"Download",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.logAction("download"),e.openFile(e.updatedDocument);case 2:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()})),r=0;case 4:if(!(r<s.length)){t.next=28;break}t.t0=s[r],t.next="rename"===t.t0?8:"delete"===t.t0?10:"move"===t.t0?12:"internal_share"===t.t0?14:"storage_internal_share"===t.t0?16:"external_share"===t.t0?18:"save_to_mydocs"===t.t0?20:"move_to_mydocs"===t.t0?22:24;break;case 8:return n.push({text:"Rename",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.logAction("rename"),e.toggleModal("rename");case 2:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 10:return n.push({text:"Delete",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.logAction("delete"),e.toggleModal("delete");case 2:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 12:return n.push({text:"Move",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.logAction("move"),e.toggleModal("move");case 2:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 14:return n.push({text:"Share internal",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.logAction("internal share"),e.toggleModal("internal_share");case 2:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 16:return n.push({text:"Share internal",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.logAction("internal share storage"),e.isStorageShare=!0,e.toggleModal("internal_share");case 3:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 18:return n.push({text:"Share external",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(n=e.getDocumentPath(e.updatedDocument),e.logAction("external share"),!e.isApp){t.next=7;break}return t.next=5,Ke["a"].share({title:"See "+(e.document.title||e.document.name||"this "+e.document.type),url:n,dialogTitle:"Share this "+e.document.type}).catch((function(t){console.ldebug(t),e.$toast({message:"Cannot share document",color:"danger"})}));case 5:t.next=9;break;case 7:window.navigator.clipboard.writeText(n),e.$toast({message:"Link copied!",color:"dark"});case 9:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 20:return n.push({text:"Save in My Docs",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(e.logAction("save to mydocs"),!e.document||!e.document.id){t.next=16;break}return t.prev=2,t.next=5,e.$http({method:"POST",url:ct.documents.save_in_mydocs,data:{folder:null,file:e.document.id}});case 5:n=t.sent,e.$toast({message:"Document saved in 'My Docs'!",color:"dark"}),console.debug(n),t.next=14;break;case 10:t.prev=10,t.t0=t["catch"](2),console.error(t.t0),e.$toast({message:at.errors.file,color:"danger"});case 14:t.next=18;break;case 16:console.error("No id document to save"),e.$toast({message:at.errors.file,color:"danger"});case 18:case"end":return t.stop()}}),t,null,[[2,10]])})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 22:return n.push({text:"Move To My Docs",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){var n,s;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(e.logAction("move to mydocs"),n=at.errors.folderDetail,e.document&&"file"===e.document.type&&(n=at.errors.file),!e.document||!e.document.id){t.next=18;break}return t.prev=4,t.next=7,e.$http({method:"POST",url:ct.folders.move_to_mydocs,data:{type:e.document.type,source:e.document.id}});case 7:s=t.sent,console.debug(s),e.$router.go(),t.next=16;break;case 12:t.prev=12,t.t0=t["catch"](4),console.error(t.t0),e.$toast({message:n,color:"danger"});case 16:t.next=20;break;case 18:console.error("No id document to save"),e.$toast({message:n,color:"danger"});case 20:case"end":return t.stop()}}),t,null,[[4,12]])})));function n(){return t.apply(this,arguments)}return n}()}),t.abrupt("break",25);case 24:return t.abrupt("break",25);case 25:r++,t.next=4;break;case 28:return t.next=30,i["r"].create({header:e.document.label,animated:!0,cssClass:"document-action-menu",buttons:n});case 30:return c=t.sent,t.next=33,c.present();case 33:case"end":return t.stop()}}),t)})))()}}};n("1306");const vn=d()(jn,[["render",Je]]);var yn=vn,xn={components:{DocumentListItem:yn},props:{docs:[Array,Object],title:String,titleClass:[Array,String],classes:[Array,String],type:[String]}};n("4508");const wn=d()(xn,[["render",Fe],["__scopeId","data-v-7532fd24"]]);var kn=wn;function Cn(e,t,n,s,r,a){return Object(c["q"])(),Object(c["e"])("div",{onClick:t[1]||(t[1]=function(){return a.emitClick&&a.emitClick.apply(a,arguments)}),class:[n.bgClass||"bg-white","elevated-shadow rounded-8 p-0 flex cursor-pointer"],style:a.computedStyle},[Object(c["x"])(e.$slots,"default")],6)}var Sn={components:{},props:{bgClass:String,styles:String,square:Boolean},computed:{computedStyle:function(){var e="";return this.styles&&(e+=this.styles+" "),this.square&&(e+="width:44px;height:44px; "),e}},methods:{emitClick:function(){this.$emit("onClick")}}};const _n=d()(Sn,[["render",Cn]]);var qn=_n,Dn={components:{IonImg:i["d"],Title:ae,Searchbar:le,Carousel:he,GreyContainer:Oe,HomeTitledContainer:xe,ShadowButton:qn,HomeNews:De,HomeCongress:Ve,HomeDocuments:kn},data:function(){return{products:[{id:2,name:"Hip",img:"/assets/test/product-vertical-home.svg"},{id:3,name:"Knee",img:"/assets/test/product-square-home.svg"},{id:4,name:"Shoulder",img:"/assets/test/product-vertical-home.svg"}],documents:{},news:[{id:1,img:"/assets/test/news.jpg",text:"1st Surgery using the Trabecular Titanium™ Tibial Plate"},{id:2,img:"/assets/test/news.jpg",text:"1st Surgery using the Trabecular Titanium™ Tibial Plate"}],meded:[{course_id:12,date:"14-15 June",title:"Smart SPACE: your digital companion from pre-op planning to…",category:"course",pillar:{image:"/assets/test/shoulder.jpg",name:"Shoulder"},faculties:[{name:"A",image:"/assets/test/faculty1.jpg"},{name:"B",image:"/assets/test/faculty2.jpg"},{name:"C",image:"/assets/test/faculty3.jpg"}]},{course_id:13,date:"17-18 June",title:"Smart SPACE: your digital companion from pre-op planning to…",category:"limaonlineeducation",pillar:{image:"/assets/test/shoulder.jpg",name:"Shoulder"},faculties:[{name:"A",image:"/assets/test/faculty1.jpg"},{name:"B",image:"/assets/test/faculty2.jpg"},{name:"C",image:"/assets/test/faculty3.jpg"},{name:"D",image:"/assets/test/faculty2.jpg"}]}],congresses:[{title:"AAOS | 2021 Annual Meeting",location:"San Diego, California - USA",date:"31 Aug - 4 Sep"}]}},computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())}},mounted:function(){if(this.$store.dispatch("loginWithToken"),window.pathToReach||window.localStorage.getItem("PATH")){var e=window.pathToReach||window.localStorage.getItem("PATH");this.$router.push(e)}if(this.$store.getters.formattedLaunchUrl){var t=this.$store.getters.formattedLaunchUrl;this.$store.commit("setLaunchUrl",null),this.$router.push(t)}},methods:{openNotifications:function(){this.$router.push({path:"/new",meta:{section:"notifications"}})},updateState:function(e){var t=e.products,n=e.documents,s=e.news,r=e.meded,a=e.congresses;this.products=t||[],this.news=s||[],this.meded=r||[],this.documents=n||{},this.congresses=a||[]},routeToSegment:function(e){var t="/products/".concat(e.id);this.$router.push({path:t})},routeToSearch:function(e){var t=e?"?string="+e:"";this.$router.push("/search"+t)}},watch:{"$store.getters.formattedLaunchUrl":function(){if(this.$store.getters.formattedLaunchUrl){var e=this.$store.getters.formattedLaunchUrl;this.$store.commit("setLaunchUrl",null),this.$router.push(e)}}}};n("b112");const $n=d()(Dn,[["render",te],["__scopeId","data-v-9c3cc1fa"]]);var Tn=$n,An={class:"flex flex-col"},In={class:"flex flex-start items-center pointer-events-none"},Rn={class:"font-helvetica-medium text-black text-16"},Pn={key:0,class:"bg-light-red rounded-6 px-2"},Mn=Object(c["h"])("span",{class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"},"COMING SOON ",-1),Ln={class:"font-helvetica-bold text-white text-12"},Nn=Object(c["h"])("hr",{class:"w-full border-t border-grey"},null,-1),Bn=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-14"},"Logout",-1);function En(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("ion-list"),u=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(u,{label:e.$route.name,withMargin:"",info:""},{default:Object(c["D"])((function(){return[Object(c["h"])("div",An,[Object(c["h"])(l,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedList,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:[e.disabled?"opacity-50 pointer-events-none":"cursor-pointer"," flex flex-row justify-between items-center bg-transparent py-2"],key:t,onClick:function(t){return a.routeTo(e.href)}},[Object(c["h"])("div",In,[Object(c["h"])(i,{bgClass:"bg-light-grey",classes:"mr-2",squareSize:"44"},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:e.img?"/assets/menu/"+e.img:"/assets/"+e.fallbackImg},null,8,["src"])]})),_:2},1024),Object(c["h"])("span",Rn,Object(c["A"])(e.name),1)]),e.disabled?(Object(c["q"])(),Object(c["e"])("div",Pn,[Mn])):Object(c["f"])("",!0),e.notifications&&e.notifications>0?(Object(c["q"])(),Object(c["e"])(i,{key:1,bgClass:"bg-red",squareSize:"24",rounded:"6",classes:"flex text-center justify-center items-center"},{default:Object(c["D"])((function(){return[Object(c["h"])("span",Ln,Object(c["A"])(e.notifications),1)]})),_:2},1024)):Object(c["f"])("",!0)],10,["onClick"])})),128))]})),_:1}),Nn,Object(c["h"])("div",{onClick:t[1]||(t[1]=function(){return a.logout&&a.logout.apply(a,arguments)}),class:"py-2 flex"},[Bn])])]})),_:1},8,["label"])}var Vn={class:"font-helvetica text-14 text-grey spacing-44 line-24"};function Un(e,t,n,s,r,a){var o=Object(c["y"])("filters-modal"),i=Object(c["y"])("ion-img"),l=Object(c["y"])("ion-button"),u=Object(c["y"])("shadow-button"),d=Object(c["y"])("Title"),b=Object(c["y"])("contacts-support");return Object(c["q"])(),Object(c["e"])("div",{class:[n.withMargin?"px-8":"",n.noTopSpace?"":"pt-20",n.customGradient||"gradient-background","min-h-screen max-h-screen overflow-y-auto relative pb-24"]},[n.filters?(Object(c["q"])(),Object(c["e"])(o,{key:0,options:a.options,filtersState:a.computedFilters,open:r.isFiltersOpened,onOnClose:a.closeFilters,onOnSubmit:a.onSubmit},null,8,["options","filtersState","open","onOnClose","onOnSubmit"])):Object(c["f"])("",!0),a.isHeaderNecessary?(Object(c["q"])(),Object(c["e"])("div",{key:1,class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;":"height:90px;"},[n.back?(Object(c["q"])(),Object(c["e"])(l,{key:0,type:"button",class:"relative mr-auto my-auto back-button",onClick:a.onBack},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/back.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])):Object(c["f"])("",!0),n.info?(Object(c["q"])(),Object(c["e"])(u,{key:1,square:"",styles:"position:relative;",bgClass:"my-auto bg-white ml-auto",onOnClick:a.routeToWizard},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/info.svg",className:"width-24 height-24 pointer-events-none m-auto"})]})),_:1},8,["onOnClick"])):Object(c["f"])("",!0),n.mail?(Object(c["q"])(),Object(c["e"])(u,{key:2,square:"",styles:"position:relative;",bgClass:"my-auto bg-white ml-auto"},{default:Object(c["D"])((function(){return[Object(c["h"])("a",{href:"mailto:"+n.mail,title:"Mail to info",class:"absolute top-0 left-0 w-full h-full"},null,8,["href"]),Object(c["h"])(i,{src:"/assets/button-icons/mail-black.svg",className:"width-24 height-24 pointer-events-none m-auto"})]})),_:1})):Object(c["f"])("",!0),n.support?(Object(c["q"])(),Object(c["e"])(u,{key:3,square:"",styles:"position:relative;",bgClass:"my-auto bg-white ml-4",onOnClick:a.openSupport,onClick:a.openSupport},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/support.svg",className:"width-24 height-24 pointer-events-none m-auto"})]})),_:1},8,["onOnClick","onClick"])):Object(c["f"])("",!0),n.share?(Object(c["q"])(),Object(c["e"])(u,{key:4,square:"",styles:"position:relative;",bgClass:"my-auto bg-white ml-auto",onOnClick:a.onShare,onClick:a.onShare},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/share-black.svg",className:"width-24 height-24 pointer-events-none m-auto"})]})),_:1},8,["onOnClick","onClick"])):Object(c["f"])("",!0),n.filters?(Object(c["q"])(),Object(c["e"])(u,{key:5,square:"",styles:"position:relative;",bgClass:"my-auto bg-white ml-auto",onOnClick:a.openFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/filters.svg",className:"width-24 height-24 pointer-events-none m-auto"})]})),_:1},8,["onOnClick"])):Object(c["f"])("",!0)],4)):Object(c["f"])("",!0),n.aboveTitle?(Object(c["q"])(),Object(c["e"])("div",{key:2,class:n.withMargin?"":"px-8"},[Object(c["x"])(e.$slots,"above-title",{},(function(){return[Object(c["h"])("span",Vn,Object(c["A"])(n.aboveTitle),1)]}))],2)):Object(c["f"])("",!0),n.label?(Object(c["q"])(),Object(c["e"])(d,{key:3,titleClass:[n.withMargin?"":"px-8","pb-4 text-black font-helvetica-bold text-28 block"]},{default:Object(c["D"])((function(){return[Object(c["g"])(Object(c["A"])(n.label),1)]})),_:1},8,["titleClass"])):Object(c["f"])("",!0),Object(c["x"])(e.$slots,"default"),r.isSupportModalOpen?(Object(c["q"])(),Object(c["e"])(b,{key:4,onOnClose:a.closeSupport},null,8,["onOnClose"])):Object(c["f"])("",!0)],2)}var zn=n("15fd"),Fn={class:"w-full h-full relative pt-20 gradient-background"},Gn=Object(c["g"])(" Filters "),Hn={class:"flex flex-col px-8",style:{flex:"1","overflow-y":"scroll"}},Wn={class:"w-1/2 font-helvetica text-16 spacing-5 line-28\n            text-dark-grey"},Yn={class:"w-full px-8 pb-4"};function Jn(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("Title"),u=Object(c["y"])("custom-select"),d=Object(c["y"])("big-button"),b=Object(c["y"])("ion-modal");return Object(c["q"])(),Object(c["e"])(b,{animated:"",showBackdrop:"","css-class":"custom-modal","is-open":r.isOpened,onDidDismiss:t[2]||(t[2]=function(t){return e.$emit("onClose")})},{default:Object(c["D"])((function(){return[Object(c["h"])("div",Fn,[Object(c["h"])("div",{class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;min-height:70px;":"height:90px;min-height:90px;"},[Object(c["h"])(i,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.closeFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])],4),Object(c["h"])("form",{class:"flex h-full flex-col justify-between",onSubmit:t[1]||(t[1]=function(){return a.onSubmit&&a.onSubmit.apply(a,arguments)})},[Object(c["h"])(l,{titleClass:"pb-2 text-black font-helvetica-bold text-28 block px-8"},{default:Object(c["D"])((function(){return[Gn]})),_:1}),Object(c["h"])("div",Hn,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.arrayOfOptions,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"flex pt-2 pb-1 border-grey border-b w-full justify-between items-center"},[Object(c["h"])("span",Wn,Object(c["A"])(e.json.span),1),Object(c["h"])(u,{name:e.json.name,value:a.computedFilters[e.json.name],options:a.filtersOptions[e.key],placeholder:e.json.placeholder,onOnChange:function(t){return a.updateFilters(t,e.json.name)}},null,8,["name","value","options","placeholder","onOnChange"])])})),128))]),Object(c["h"])("div",Yn,[Object(c["h"])(d,{type:"submit",label:"Done"})])],32)])]})),_:1},8,["is-open"])}n("b64b"),n("4de4");function Kn(e,t,n,s,r,a){var o=Object(c["y"])("ion-select-option"),i=Object(c["y"])("ion-select");return Object(c["q"])(),Object(c["e"])("div",{class:["select-wrapper",n.classes]},[Object(c["h"])(i,{interface:"action-sheet",class:"custom-select",cssClass:"custom-select-sheet",name:n.name,value:r.selectValue,disabled:a.isDisabled,placeholder:n.placeholder,onIonChange:a.onChange},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.selectOptions,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,value:e.value},{default:Object(c["D"])((function(){return[Object(c["g"])(Object(c["A"])(e.label),1)]})),_:2},1032,["value"])})),128))]})),_:1},8,["name","value","disabled","placeholder","onIonChange"])],2)}var Xn={components:{IonSelect:i["l"],IonSelectOption:i["m"]},props:{name:{type:String},classes:{type:String},placeholder:{type:String},disabled:{type:Boolean},options:{type:Array},value:{type:[String,Number,Object]},filled:{type:Boolean}},data:function(){return{selectValue:this.value}},computed:{isDisabled:function(){return this.disabled||!1},selectOptions:function(){return this.options.map((function(e){return{value:e.value||e.id,label:e.label||e.name}}))}},methods:{onChange:function(e){this.$emit("onChange",e.target.value)}},watch:{value:function(e){this.selectValue!==e&&(this.selectValue=e)}}};n("e644");const Qn=d()(Xn,[["render",Kn]]);var Zn=Qn,es=n("2628"),ts={components:{Title:ae,BigButton:en,IonButton:i["b"],IonImg:i["d"],IonModal:i["g"],CustomSelect:Zn},props:{filtersState:Object,open:Boolean,options:Object},data:function(){return{isOpened:!1,filters:{}}},computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())},computedFilters:function(){return this.filters},filtersOptions:function(){return this.options},arrayOfOptions:function(){var e=this,t=Object.keys(this.filtersOptions),n=t.map((function(e){return{key:e,json:es[e]}}));return n.filter((function(t){return e.filtersOptions[t.key]&&e.filtersOptions[t.key].length}))}},methods:{updateFilters:function(e,t){var n=Object.assign({},this.filters);n[t]=e,this.filters=n},closeFilters:function(){this.$emit("onClose")},onSubmit:function(e){e.preventDefault(),this.$emit("onSubmit",this.filters)}},watch:{open:function(e){var t=Object.assign({},this.filtersState);this.filters=t,this.isOpened=e}}};const ns=d()(ts,[["render",Jn]]);var ss=ns,rs=Object(c["G"])("data-v-11d4b136");Object(c["t"])("data-v-11d4b136");var as={class:"fixed top-0 left-0 w-full h-full flex justify-center items-center z-20"},cs={class:"relative z-10 bg-white rounded-8 p-6 mx-auto ",style:{"min-width":"300px","max-width":"300px"}},os={class:"flex flex-row justify-between w-full mb-2"},is=Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-22 line-30 text-black block"}," LimAPP Support ",-1),ls=Object(c["h"])("p",{class:"font-helvetica text-grey text-14 spacing-44 line-24 mb-2"},[Object(c["g"])(" Contact "),Object(c["h"])("a",{href:"limappsupport@limacorporate.com",title:"",class:"text-black"}," limappsupport@limacorporate.com "),Object(c["g"])(" for anything related to the LimApp: Account activation, login or navigation problems, material updates requests. "),Object(c["h"])("br"),Object(c["g"])(" When contacting "),Object(c["h"])("a",{href:"limappsupport@limacorporate.com",title:"",class:"text-black"}," limappsupport@limacorporate.com "),Object(c["g"])(" for any kind of problem always remember to attach screenshot, specify browser and operating system. ")],-1),us={class:"mt-4 w-full flex justify-center items-center"},ds={class:"relative"},bs=Object(c["h"])("a",{href:"mailto:limappsupport@limacorporate.com",title:"",class:"absolute top-0 left-0 w-full h-full z-10"},null,-1),ps=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 ml-4 normal-case"}," LimAPP Support ",-1);Object(c["r"])();var hs=rs((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])("div",as,[Object(c["h"])("div",{class:"absolute top-0 left-0 bg-black opacity-50 w-full h-full",style:{"z-index":"10"},onClick:t[1]||(t[1]=function(){return a.cancel&&a.cancel.apply(a,arguments)})}),Object(c["h"])("div",cs,[Object(c["h"])("div",os,[is,Object(c["h"])(i,{type:"button",class:"relative ml-auto back-button",style:{top:"-0.5rem",left:"0.5rem"},onClick:a.cancel},{default:rs((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])]),ls,Object(c["h"])("div",us,[Object(c["h"])("div",ds,[bs,Object(c["h"])(i,{class:"rounded-12 flex justify-center items-center height-56 w-auto normal-case",style:{"--padding-start":"0.5rem","--pading-right":"0.5rem"}},{default:rs((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/mail-white.svg",className:"width-24 height-24 pointer-events-none"}),ps]})),_:1})])])])])})),fs={components:{IonButton:i["b"]},methods:{cancel:function(){this.$emit("onClose")}}};n("0857");const ms=d()(fs,[["render",hs],["__scopeId","data-v-11d4b136"]]);var gs=ms,Os=["actionCategory"],js={components:{Title:ae,ShadowButton:qn,IonImg:i["d"],FiltersModal:ss,IonButton:i["b"],ContactsSupport:gs},mixins:[On],props:{label:{type:String},aboveTitle:{type:String},withMargin:{type:Boolean},noTopSpace:{type:Boolean},info:{type:Boolean},support:{type:Boolean},back:{type:[Boolean,String,Object]},mail:{type:String},share:{type:Object},filters:{type:[Boolean,Object]},filtersOptions:{type:Object},customGradient:{type:String}},computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())},isHeaderNecessary:function(){return!!(this.info||this.back||this.filters||this.mail)},computedFilters:function(){return this.filters},options:function(){return this.filtersOptions}},data:function(){return{isFiltersOpened:!1,isSupportModalOpen:!1}},methods:{onBack:function(){this.back&&this.back.length?this.$router.push(this.back):this.$router.back()},onShare:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,s,r;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return n=e.share,s=n.actionCategory,r=Object(zn["a"])(n,Os),e.logEvent(s,"share",e.share.dialogTitle+" "+e.share.title),t.prev=2,t.next=5,e.$share.share(r);case 5:t.next=12;break;case 7:t.prev=7,t.t0=t["catch"](2),console.error("Share not supported!",t.t0),window.navigator.clipboard.writeText("".concat(e.share.text,": ").concat(e.share.url)),e.$toast({message:"Link copied!",color:"dark"});case 12:case"end":return t.stop()}}),t,null,[[2,7]])})))()},routeToWizard:function(){this.$router.push("/new?section=updates")},openFilters:function(){this.isFiltersOpened=!0},closeFilters:function(){this.isFiltersOpened=!1},onSubmit:function(e){this.$emit("onFiltersChange",e),this.closeFilters()},openSupport:function(){this.isSupportModalOpen=!0},closeSupport:function(){this.isSupportModalOpen=!1}}};const vs=d()(js,[["render",Un]]);var ys=vs,xs={components:{Page:ys,SquareContainer:Vt,IonList:i["f"],IonImg:i["d"]},data:function(){return{list:[{name:"Products",href:"/products",img:"products.svg"},{name:"Documents",href:"/documents",img:"documents.svg"},{name:"L.E.A.R.N.",href:"/learn",img:"meded.svg"},{name:"Congresses and Events",href:"/congresses",img:"congresses.svg"},{name:"Sales Training",href:"/training",img:"sales-training.svg"},{name:"News",href:"/news",img:"news.svg"},{name:"What's New",href:"/new",img:"notifications.svg"},{name:"Useful Links",href:"/useful",img:"useful.svg"},{name:"Multimedia",href:"/multimedia",img:"multimedia.svg",disabled:!0},{name:"Privacy",href:"/privacy",img:"privacy.svg"},{name:"Terms and Conditions",href:"/terms?accepted=true",fallbackImg:"button-icons/info.svg"},{name:"Contacts",href:"/contacts",img:"contact.svg"}]}},computed:{updatedList:function(){var e=this,t=this.list.map((function(t){return"/new"===t.href?Object(r["a"])(Object(r["a"])({},t),{},{notifications:e.$store.getters.areNotificationsNotRead}):t}));return t}},methods:{routeTo:function(e){this.$router.push(e)},logout:function(){this.$store.dispatch("logout")}}};const ws=d()(xs,[["render",En]]);var ks=ws,Cs=Object(c["G"])("data-v-b49bc2a6");Object(c["t"])("data-v-b49bc2a6");var Ss={class:"min-h-screen gradient-background relative max-h-screen overflow-y-auto pb-20 flex flex-col"},_s={class:"my-auto flex-grow"},qs={key:0,class:"flex flex-col"},Ds=Object(c["g"])(" Search Results "),$s=Object(c["h"])("div",null," ",-1),Ts={class:"flex flex-col px-8 mt-4"},As={class:"flex flex-start items-center pointer-events-none w-full"},Is={class:"flex flex-col justify-between py-2"},Rs={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Ps={class:"font-helvetica text-grey text-14 spacing-44 line-24"},Ms={class:"flex flex-start items-start pointer-events-none w-full"},Ls={class:"flex flex-col justify-between py-2"},Ns={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Bs={class:"font-helvetica text-grey text-14 spacing-44 line-24"},Es={key:0,class:"bg-light-red rounded-6 px-2 mr-auto"},Vs={class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"},Us={class:"flex flex-start items-start pointer-events-none w-full"},zs={class:"flex flex-col justify-between py-2"},Fs={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Gs={key:0,class:"bg-light-red rounded-6 px-2 mr-auto"},Hs={class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"},Ws={key:1,class:"flex-grow flex flex-col justify-center items-center"},Ys=Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-2 line-28 mb-2 -mt-8"},"Sorry, no results found :(",-1),Js={class:"font-helvetica text-16 spacing-1 line-24 text-center"},Ks=Object(c["h"])("br",null,null,-1),Xs=Object(c["g"])("Please try with another keyword.");Object(c["r"])();var Qs=Cs((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("searchbar"),u=Object(c["y"])("Title"),d=Object(c["y"])("section-button"),b=Object(c["y"])("carousel"),p=Object(c["y"])("square-container"),h=Object(c["y"])("document-list-item"),f=Object(c["y"])("detail-section");return Object(c["q"])(),Object(c["e"])("div",Ss,[Object(c["h"])("div",{class:"bg-transparent flex px-8 z-10",style:a.isIos?"margin-top:35px;height:70px;min-height:70px;":"height:90px;min-height:90px;"},[a.formattedResultsLength>0?(Object(c["q"])(),Object(c["e"])(i,{key:0,type:"button",class:"relative mr-8 my-auto back-button",onClick:a.cancelResults},{default:Cs((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/back.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])):Object(c["f"])("",!0),Object(c["h"])("div",_s,[Object(c["h"])(l,{ref:"searchbar",onSubmit:a.search},null,8,["onSubmit"])])],4),r.isSearched&&r.isSearched.length&&a.formattedResultsLength>0?(Object(c["q"])(),Object(c["e"])("div",qs,[Object(c["h"])(u,{titleClass:[e.withMargin?"":"px-8","pb-4 text-black font-helvetica-bold text-28 block"]},{default:Cs((function(){return[Ds]})),_:1},8,["titleClass"]),Object(c["h"])(b,{id:"search-carousel",classes:"pt-4 -my-4 pb-8"},{default:Cs((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.parsedSections,(function(e,t){return Object(c["q"])(),Object(c["e"])(d,{key:t,active:r.filter===e.value,classes:[0===t?"ml-8":""," mr-4"],label:e.label,onOnClick:function(t){return a.changeSection(e.value)}},null,8,["active","classes","label","onOnClick"])})),128)),$s]})),_:1}),Object(c["h"])("div",Ts,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.formattedResults,(function(e,t){return Object(c["q"])(),Object(c["e"])(f,{key:t,label:e.name,count:e.count,noPadding:""},{default:Cs((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(e.childs,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"mb-4"},["products"===e.type?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:"flex flex-row justify-between items-center bg-transparent",onClick:function(t){return a.route(e,"products")}},[Object(c["h"])("div",As,[Object(c["h"])(p,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 p-2"},{default:Cs((function(){return[Object(c["h"])(o,{src:e.preview},null,8,["src"])]})),_:2},1024),Object(c["h"])("div",Is,[Object(c["h"])("span",Rs,Object(c["A"])(e.name),1),Object(c["h"])("span",Ps,Object(c["A"])(e.subtitle),1)])])],8,["onClick"])):Object(c["f"])("",!0),"documents"===e.type?(Object(c["q"])(),Object(c["e"])(h,{key:1,document:e},null,8,["document"])):Object(c["f"])("",!0),"congress"===e.type?(Object(c["q"])(),Object(c["e"])("div",{key:2,class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4",onClick:function(t){return a.route(e,"congress")}},[Object(c["h"])("div",Ms,[Object(c["h"])(p,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 overflow-hidden"},{default:Cs((function(){return[Object(c["h"])(o,{src:e.preview,class:"h-full w-auto"},null,8,["src"])]})),_:2},1024),Object(c["h"])("div",Ls,[Object(c["h"])("span",Ns,Object(c["A"])(e.name),1),Object(c["h"])("span",Bs,Object(c["A"])(e.subtitle),1),e.date?(Object(c["q"])(),Object(c["e"])("div",Es,[Object(c["h"])("span",Vs,Object(c["A"])(e.date),1)])):Object(c["f"])("",!0)])])],8,["onClick"])):Object(c["f"])("",!0),"news"===e.type?(Object(c["q"])(),Object(c["e"])("div",{key:3,class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4",onClick:function(t){return a.route(e,"news")}},[Object(c["h"])("div",Us,[Object(c["h"])(p,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 overflow-hidden"},{default:Cs((function(){return[Object(c["h"])(o,{src:e.preview,class:"h-full w-auto"},null,8,["src"])]})),_:2},1024),Object(c["h"])("div",zs,[Object(c["h"])("span",Fs,Object(c["A"])(e.name),1),e.date?(Object(c["q"])(),Object(c["e"])("div",Gs,[Object(c["h"])("span",Hs,Object(c["A"])(e.date),1)])):Object(c["f"])("",!0)])])],8,["onClick"])):Object(c["f"])("",!0)])})),128))]})),_:2},1032,["label","count"])})),128))])])):r.isSearched&&r.isSearched.length&&a.formattedResultsLength<=0?(Object(c["q"])(),Object(c["e"])("div",Ws,[Object(c["h"])(o,{src:"assets/icon/no-results.svg",class:"mx-auto mb-16"}),Ys,Object(c["h"])("span",Js,[Object(c["g"])('We couldn’t find any matches for "'+Object(c["A"])(r.isSearched)+'". ',1),Ks,Xs])])):Object(c["f"])("",!0)])}));n("5319");function Zs(e,t,n,s,r,a){return Object(c["q"])(),Object(c["e"])("div",{onClick:t[1]||(t[1]=function(){return a.emitClick&&a.emitClick.apply(a,arguments)}),class:[n.classes,a.computedClass," rounded-8 py-2 px-4 flex justify-center items-center whitespace-nowrap"]},[Object(c["h"])("span",{class:[n.red?"text-white":"text-black","font-helvetica-medium spacing-5 line-30 pointer-events-none"]},Object(c["A"])(n.label),3)],2)}var er={components:{},emits:["onClick"],props:{classes:[String,Array],active:Boolean,red:Boolean,label:String},computed:{isActive:function(){return this.active},computedClass:function(){return this.red?this.isActive?"bg-red elevated-shadow":"bg-lighter-red":this.isActive?"bg-white elevated-shadow":"bg-light-grey"}},methods:{emitClick:function(e){e.preventDefault(),this.isActive||this.$emit("onClick")}}};const tr=d()(er,[["render",Zs]]);var nr=tr,sr={class:"flex flex-col"},rr={class:"text-grey font-helvetica-bold text-12"};function ar(e,t,n,s,r,a){var o=Object(c["y"])("small-title"),i=Object(c["y"])("square-container"),l=Object(c["y"])("separator");return Object(c["q"])(),Object(c["e"])("div",sr,[Object(c["h"])("div",{class:[n.noPadding?"":"px-8"," flex justify-between items-center"]},[Object(c["h"])(o,{label:n.label,classes:"pb-4 mt-8",noPadding:""},null,8,["label"]),n.count&&n.count>0?(Object(c["q"])(),Object(c["e"])(i,{key:0,bgClass:"bg-light-grey",squareSize:"24",rounded:"6",classes:"flex text-center justify-center items-center mt-2"},{default:Object(c["D"])((function(){return[Object(c["h"])("span",rr,Object(c["A"])(n.count),1)]})),_:1})):Object(c["f"])("",!0)],2),Object(c["x"])(e.$slots,"default"),n.noSeparator?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])(l,{key:0,withMargin:!n.noPadding,topMargin:""},null,8,["withMargin"]))])}function cr(e,t,n,s,r,a){return Object(c["q"])(),Object(c["e"])("div",{class:[n.withMargin?"mx-8":"",a.margin," border-b border-grey"]},null,2)}var or={props:{withMargin:Boolean,topMargin:Boolean,bottomMargin:Boolean,noYMargin:Boolean},computed:{margin:function(){return this.topMargin?"mt-8":this.bottomMargin?"mb-8":this.noYMargin?"":"my-8"}}};const ir=d()(or,[["render",cr]]);var lr=ir;function ur(e,t,n,s,r,a){var o=Object(c["y"])("Title");return Object(c["q"])(),Object(c["e"])(o,{titleClass:[n.classes||"",n.noPadding?"":"px-8"," text-black font-helvetica-bold text-20 block"]},{default:Object(c["D"])((function(){return[Object(c["g"])(Object(c["A"])(n.label),1)]})),_:1},8,["titleClass"])}var dr={props:{label:String,classes:[String,Array],noPadding:Boolean},components:{Title:ae}};const br=d()(dr,[["render",ur]]);var pr=br,hr={components:{SmallTitle:pr,Separator:lr,SquareContainer:Vt},props:{noSeparator:Boolean,label:String,noPadding:Boolean,count:[String,Number]}};const fr=d()(hr,[["render",ar]]);var mr=fr,gr={components:{IonImg:i["d"],Searchbar:le,Title:ae,DocumentListItem:yn,SquareContainer:Vt,SectionButton:nr,Carousel:he,DetailSection:mr},data:function(){return{filter:"*",isSearched:null,results:{}}},computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())},formattedResultsLength:function(){for(var e=Object.keys(this.results),t=0,n=0;n<e.length;n++)t+=this.results[e[n]].length;return t},formattedResults:function(){for(var e=this,t=Object.keys(this.results),n=[],s=function(s){if("*"===e.filter||"*"!==e.filter&&e.filter===t[s]){var a=e.results[t[s]].map((function(e){return Object(r["a"])(Object(r["a"])({},e),{},{type:t[s]})}));a&&a.length&&n.push({name:e.getLabel(t[s]),childs:a,count:e.results[t[s]].length})}},a=0;a<t.length;a++)s(a);return n},parsedSections:function(){for(var e=this,t=Object.keys(this.results).filter((function(t){return!(!e.results[t]||!e.results[t].length)})),n=[{label:"All",value:"*"}],s=0;s<t.length;s++)n.push({label:this.getLabel(t[s]),value:t[s]});return n}},methods:{search:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var s,r,a;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,t.$http({method:"GET",url:ct.search,params:{term:e}});case 3:for(a in s=n.sent,r=0,s)r+=s[a].length;t.$matomo.trackSearch(e,r),t.results=s,t.isSearched=e,n.next=15;break;case 11:n.prev=11,n.t0=n["catch"](0),console.error(n.t0),t.$toast({message:at.errors.search,color:"danger"});case 15:case"end":return n.stop()}}),n,null,[[0,11]])})))()},cancelResults:function(){this.$refs.searchbar.cancelValue(),this.isSearched=null,this.results=[]},changeSection:function(e){this.filter=e},getLabel:function(e){return"congress"===e?"Congresses":e.replace(/^\w/,(function(e){return e.toUpperCase()}))},route:function(e,t){switch(t){case"products":this.$router.push("/products/detail/".concat(e.id));break;case"congress":this.$router.push("/congresses/".concat(e.id));break;default:this.$router.push("/home");break}}}};n("225b");const Or=d()(gr,[["render",Qs],["__scopeId","data-v-b49bc2a6"]]);var jr=Or,vr={class:"px-8 pt-20 min-h-screen login-background relative max-h-screen overflow-y-auto pb-24"},yr={key:1,class:"relative mr-auto my-auto"},xr={class:"relative flex justify-between items-baseline my-4"},wr=Object(c["g"])(" Sign in "),kr={class:"font-helvetica text-12 spacing-38 line-24 text-grey"},Cr={class:"bg-white small-shadow rounded-8 flex items-center z-10 relative px-2 mb-4"},Sr=Object(c["h"])("a",{class:"font-helvetica text-mid-dark-grey text-12 spacing-1 line-24 mt-4 text-center mx-auto z-10",href:"https://limacorporate.com/en/about-us/privacy-policy.html",title:"LimaCorporate Privacy Policy",target:"_blank"},"Privacy Policy",-1),_r={key:1,class:"flex flex-col"},qr=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case pointer-events-none"}," Login with Azure ",-1),Dr=Object(c["h"])("a",{class:"font-helvetica text-mid-dark-grey text-12 spacing-1 line-24 mt-4 text-center mx-auto z-10",href:"https://limacorporate.com/en/about-us/privacy-policy.html",title:"LimaCorporate Privacy Policy",target:"_blank"},"Privacy Policy",-1),$r={class:"bg-white small-shadow rounded-8 flex items-center z-10 relative px-2 mb-4"},Tr={class:"width-44 height-44 flex justify-center items-center"},Ar=Object(c["h"])("a",{class:"mt-4 font-helvetica-medium text-14 text-black spacing-44 line-28 mx-auto z-10",title:"Forgot your password link",href:"https://limacorporate.com/it/intranet-login.html?recovery=password",target:"_blank"},"Forgot your password?",-1),Ir=Object(c["h"])("a",{class:"font-helvetica text-mid-dark-grey text-12 spacing-1 line-24 mt-4 text-center mx-auto z-10",href:"https://limacorporate.com/en/about-us/privacy-policy.html",title:"LimaCorporate Privacy Policy",target:"_blank"},"Privacy Policy",-1);function Rr(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("Title"),u=Object(c["y"])("ion-input"),d=Object(c["y"])("big-button");return Object(c["q"])(),Object(c["e"])("div",vr,[Object(c["h"])(o,{src:"/assets/login-bg.png",class:"fixed bottom-0 left-0 z-0 w-full"}),Object(c["h"])("div",{class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;":"height:90px;"},[a.backAction?(Object(c["q"])(),Object(c["e"])(i,{key:0,type:"button",class:[a.isIos?"mb-auto":"my-auto"," relative mr-auto my-auto back-button"],onClick:a.onBack},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/back.svg",className:"pointer-events-none"})]})),_:1},8,["class","onClick"])):(Object(c["q"])(),Object(c["e"])("div",yr,[Object(c["h"])(o,{src:"/assets/limapp.svg"})]))],4),Object(c["h"])("div",xr,[Object(c["h"])(l,{titleClass:"pb-4 text-black font-helvetica-bold text-28 block"},{default:Object(c["D"])((function(){return[wr]})),_:1}),Object(c["h"])("span",kr," Step "+Object(c["A"])(r.step)+"/2 ",1)]),1===r.step?(Object(c["q"])(),Object(c["e"])("form",{key:0,class:"flex flex-col",onSubmit:t[2]||(t[2]=function(){return a.next&&a.next.apply(a,arguments)})},[Object(c["h"])("div",Cr,[Object(c["h"])(o,{src:"/assets/menu/contact.svg",class:""}),Object(c["h"])(u,{type:"email",placeholder:"Email",modelValue:r.email,"onUpdate:modelValue":t[1]||(t[1]=function(e){return r.email=e}),class:"mx-2",required:""},null,8,["modelValue"])]),Object(c["h"])(d,{label:"Next",type:"submit"}),Sr],32)):Object(c["f"])("",!0),2===r.step&&r.isAzureMail?(Object(c["q"])(),Object(c["e"])("div",_r,[Object(c["h"])(i,{type:"button",class:"relative bg-azure small-shadow rounded-12 flex justify-center items-center height-56 w-full normal-case",onClick:a.loginWithAzure},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/azure.svg",class:"absolute left-0 ml-4 pointer-events-none"}),qr]})),_:1},8,["onClick"]),Dr])):Object(c["f"])("",!0),2!==r.step||r.isAzureMail?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])("form",{key:2,class:"flex flex-col",onSubmit:t[4]||(t[4]=function(){return a.loginWithPassword&&a.loginWithPassword.apply(a,arguments)})},[Object(c["h"])("div",$r,[Object(c["h"])("div",Tr,[Object(c["h"])(o,{src:"/assets/button-icons/lock.svg",class:"width-24 height-24"})]),Object(c["h"])(u,{type:"password",placeholder:"Password",modelValue:r.password,"onUpdate:modelValue":t[3]||(t[3]=function(e){return r.password=e}),class:"mx-2",required:""},null,8,["modelValue"])]),Object(c["h"])(d,{label:"Sign in",type:"submit"}),Ar,Ir],32))])}var Pr=n("7dc5"),Mr={components:{IonInput:i["e"],IonImg:i["d"],Title:ae,BigButton:en,IonButton:i["b"]},data:function(){return{email:"",password:"",step:1,isAzureMail:!1}},computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())},backAction:function(){return this.step>1}},created:function(){this.$store.getters.loggedIn&&this.$store.dispatch("alreadyLoggedRouting"),this.$route.query.token&&"web"===S["a"].getPlatform()&&(window.azureToken=this.$route.query.token,window.localStorage.setItem("JWT",this.$route.query.token),this.$store.dispatch("loginWithToken"))},methods:{onBack:function(){this.step=1},loginWithPassword:function(e){e.preventDefault(),this.$store.dispatch("login",{username:this.email,password:this.password})},loginWithAzure:function(){return Object(a["a"])(regeneratorRuntime.mark((function e(){var t,n;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:t=Pr.mode,n=ct.baseUrl[t]+ct.auth.azureLogin,window.open(n,"_system");case 3:case"end":return e.stop()}}),e)})))()},next:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var s;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(e.preventDefault(),!t.email||!t.email.length){n.next=16;break}return n.prev=2,n.next=5,t.$http({method:"GET",url:ct.auth.loginCheck,params:{email:t.email}});case 5:s=n.sent,t.isAzureMail=s,t.step=2,n.next=14;break;case 10:n.prev=10,n.t0=n["catch"](2),console.error(n.t0),t.$toast({message:at.errors.checkEmail,color:"danger"});case 14:n.next=17;break;case 16:t.$toast({message:at.errors.noEmail,color:"danger"});case 17:case"end":return n.stop()}}),n,null,[[2,10]])})))()}},watch:{"this.$route.query":function(e){console.debug("QUERY",e)}}};const Lr=d()(Mr,[["render",Rr]]);var Nr=Lr,Br={class:"flex flex-start items-start pointer-events-none px-8 w-full"},Er={class:"flex flex-col justify-between py-2"},Vr={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Ur={class:"font-helvetica text-grey text-14 spacing-44 line-24"};function zr(e,t,n,s,r,a){var o=Object(c["y"])("square-container"),i=Object(c["y"])("ion-list"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{label:"Useful Links",back:"/menu"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.linksArray,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4",key:t,onClick:function(t){return a.openLink(e)}},[Object(c["h"])("div",Br,[Object(c["h"])(o,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 overflow-hidden bg-no-repeat bg-cover bg-center border border-black",styles:"background-image:url('".concat(e.image,"')")},null,8,["styles"]),Object(c["h"])("div",Er,[Object(c["h"])("span",Vr,Object(c["A"])(e.title),1),Object(c["h"])("span",Ur,Object(c["A"])(e.formattedLink),1)])])],8,["onClick"])})),128))]})),_:1})]})),_:1})}var Fr={components:{Page:ys,IonList:i["f"],SquareContainer:Vt},mixins:[On],data:function(){return{links:[]}},computed:{linksArray:function(){var e=this;return this.links&&this.links.length?this.links.map((function(t){return Object(r["a"])(Object(r["a"])({},t),{},{formattedLink:e.cutLink(t.link)})})):this.links}},created:function(){this.getUsefulLinks()},methods:{cutLink:function(e){return e&&e.length>30?e.substring(0,30)+"...":e},openLink:function(e){this.logEvent("Link","open Useful Link","Link ".concat(e.title)),window.open(e.link)},getUsefulLinks:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:ct.usefulLinks,params:{}});case 3:n=t.sent,e.links=n,t.next=11;break;case 7:t.prev=7,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:at.errors.usefulLinks,color:"danger"});case 11:case"end":return t.stop()}}),t,null,[[0,7]])})))()}}};const Gr=d()(Fr,[["render",zr]]);var Hr=Gr;function Wr(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("slider");return a.formattedSlides&&a.formattedSlides.length?(Object(c["q"])(),Object(c["e"])(i,{key:0,slides:a.formattedSlides,pager:!0,onOnEnd:a.routeHome},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])("div",{class:"flex flex-col flex flex-grow pointer-events-none",id:t.image},[Object(c["h"])(o,{src:t.image},null,8,["src"])],8,["id"])]})),_:1},8,["slides","onOnEnd"])):Object(c["f"])("",!0)}var Yr={class:"flex flex-col relative gradient-background min-h-screen"},Jr={class:"px-8",style:{"margin-top":"150%"}},Kr={key:0,class:"flex justify-between  items-center px-8"};function Xr(e,t,n,s,r,a){var o=Object(c["y"])("ion-slide"),i=Object(c["y"])("ion-slides"),l=Object(c["y"])("ion-img"),u=Object(c["y"])("ion-button"),d=Object(c["y"])("big-button");return Object(c["q"])(),Object(c["e"])("div",Yr,[Object(c["h"])(i,{mode:"ios",ref:"slides",pager:"true",style:{position:"absolute",top:"0",left:"0",width:"100%","z-index":"0"},options:r.slideOpts,onIonSlideNextEnd:a.onNextEnd,onIonSlidePrevEnd:a.onPrevEnd},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.computedSlides,(function(t,n){return Object(c["q"])(),Object(c["e"])(o,{key:n},{default:Object(c["D"])((function(){return[Object(c["x"])(e.$slots,"default",{item:t})]})),_:2},1024)})),128))]})),_:1},8,["options","onIonSlideNextEnd","onIonSlidePrevEnd"]),Object(c["h"])("div",Jr,[n.back?(Object(c["q"])(),Object(c["e"])("div",Kr,[a.activeSlide>0?(Object(c["q"])(),Object(c["e"])(u,{key:0,type:"button",class:"mr-4 relative elevated-shadow text-black z-10 ",style:{"--background":"transparent"},onClick:a.previousSlide},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{src:"/assets/button-icons/back.svg",class:"pointer-events-none",style:{visibility:"visible",width:"14px",height:"14px"}})]})),_:1},8,["onClick"])):Object(c["f"])("",!0),Object(c["h"])(d,{label:a.buttonLabel,onOnClick:a.buttonClick},null,8,["label","onOnClick"]),a.activeSlide>0?(Object(c["q"])(),Object(c["e"])(u,{key:1,type:"button",class:"pointer-events-none opacity-0 ml-4 elevated-shadow",style:{"--background":"transparent"},onClick:a.previousSlide},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{src:"/assets/button-icons/back.svg",class:"pointer-events-none"})]})),_:1},8,["onClick"])):Object(c["f"])("",!0)])):(Object(c["q"])(),Object(c["e"])(d,{key:1,label:a.buttonLabel,onOnClick:a.buttonClick},null,8,["label","onOnClick"]))])])}var Qr={components:{IonSlide:i["n"],IonSlides:i["o"],IonImg:i["d"],IonButton:i["b"],BigButton:en},props:{slides:{type:Array},finalLabel:{type:String},mainButtonLabel:{type:String},back:{type:Boolean},url:{type:String}},data:function(){return{active:0,slideOpts:{initialSlide:0,speed:400}}},computed:{computedSlides:function(){return this.slides},activeSlide:function(){return this.active},isLastSlide:function(){return this.active===this.slides.length-1},buttonLabel:function(){return this.isLastSlide?this.finalLabel||"Lets’s start":this.mainButtonLabel||"Next"}},methods:{onClose:function(){this.$router.back()},previousSlide:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,e.$refs.slides.$el.getSwiper();case 2:n=t.sent,n.slidePrev();case 4:case"end":return t.stop()}}),t)})))()},buttonClick:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.isLastSlide||!e.url){t.next=4;break}e.$router.push(e.url),t.next=12;break;case 4:if(!e.isLastSlide){t.next=8;break}e.$emit("onEnd"),t.next=12;break;case 8:return t.next=10,e.$refs.slides.$el.getSwiper();case 10:n=t.sent,n.slideNext();case 12:case"end":return t.stop()}}),t)})))()},onNextEnd:function(){this.active=this.active+1},onPrevEnd:function(){this.active=this.active-1}}};const Zr=d()(Qr,[["render",Xr]]);var ea=Zr,ta={components:{Slider:ea,IonImg:i["d"]},data:function(){return{slides:[]}},computed:{formattedSlides:function(){return this.slides}},mounted:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:ct.users.onBoarding});case 3:n=t.sent,e.slides=n,e.$store.commit("setOnboarding",!1),t.next=13;break;case 8:t.prev=8,t.t0=t["catch"](0),console.error(t.t0),e.$router.push("/home"),e.$toast({message:at.errors.onboarding,color:"danger"});case 13:case"end":return t.stop()}}),t,null,[[0,8]])})))()},methods:{routeHome:function(){this.$store.getters.gotUpdatesToShow?this.$app.$router.push("/new/update/"+this.$store.getters.gotUpdatesToShow):this.$router.push("/home")}}};const na=d()(ta,[["render",Wr]]);var sa=na,ra={class:" pt-20 min-h-screen login-background relative max-h-screen overflow-y-auto pb-24"},aa={class:"flex relative mr-auto my-auto"},ca={class:"px-8 relative flex flex-col justify-between items-baseline my-4"},oa=Object(c["g"])(" Terms and conditions "),ia={key:0,class:"font-helvetica text-12 spacing-38 line-24 text-grey"},la={class:"flex justify-start items-center z-10 relative mb-4"},ua=Object(c["h"])("span",{class:"font-helvetica text-14 spacing-38 line-24 ml-4 text-grey"}," I accept the terms and conditions ",-1),da={key:1,class:"px-8"};function ba(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("Title"),u=Object(c["y"])("Terms"),d=Object(c["y"])("ion-toggle"),b=Object(c["y"])("big-button");return Object(c["q"])(),Object(c["e"])("div",ra,[Object(c["h"])("div",{class:"px-8 bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;":"height:90px;"},[Object(c["h"])("div",aa,[a.accepted?(Object(c["q"])(),Object(c["e"])(i,{key:0,type:"button",class:"relative back-button",onClick:a.back},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/back.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])):Object(c["f"])("",!0),Object(c["h"])(o,{src:"/assets/limapp.svg"})])],4),Object(c["h"])("div",ca,[Object(c["h"])(l,{titleClass:"pb-2 text-black font-helvetica-bold text-28 block"},{default:Object(c["D"])((function(){return[oa]})),_:1}),a.accepted?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])("span",ia," Accept to continue "))]),Object(c["h"])("div",{class:[a.accepted?"pb-4":"pb-24","relative z-10 bg-transparent"]},[Object(c["h"])(u)],2),a.accepted?(Object(c["q"])(),Object(c["e"])("div",da,[Object(c["h"])(b,{label:"Back",type:"button",onOnClick:a.back},null,8,["onOnClick"])])):(Object(c["q"])(),Object(c["e"])("form",{key:0,class:"flex flex-col fixed px-8 py-8 w-full z-10 bg-white rounded-32 top-shadow",style:{bottom:"-1px"},onSubmit:t[1]||(t[1]=function(){return a.resolveRouting&&a.resolveRouting.apply(a,arguments)})},[Object(c["h"])("div",la,[Object(c["h"])(d,{mode:"ios",color:"primary",checked:r.areAccepted,onIonChange:a.updateAccepted},null,8,["checked","onIonChange"]),ua]),Object(c["h"])(b,{disabled:!r.areAccepted,label:"Next",type:"submit"},null,8,["disabled"])],32))])}var pa={class:"flex flex-col justify-start items-start pt-4"};function ha(e,t,n,s,r,a){var o=Object(c["y"])("ion-img");return Object(c["q"])(),Object(c["e"])("div",pa,[Object(c["h"])(o,{src:"/assets/terms/0001.jpg",className:"pointer-events-none"}),Object(c["h"])(o,{src:"/assets/terms/0002.jpg",className:"pointer-events-none mt-2"}),Object(c["h"])(o,{src:"/assets/terms/0003.jpg",className:"pointer-events-none mt-2"}),Object(c["h"])(o,{src:"/assets/terms/0004.jpg",className:"pointer-events-none mt-2"}),Object(c["h"])(o,{src:"/assets/terms/0005.jpg",className:"pointer-events-none mt-2"}),Object(c["h"])(o,{src:"/assets/terms/0006.jpg",className:"pointer-events-none mt-2"})])}var fa={name:"Terms",components:{IonImg:i["d"]}};const ma=d()(fa,[["render",ha]]);var ga=ma,Oa={components:{IonToggle:i["p"],IonImg:i["d"],Title:ae,BigButton:en,Terms:ga},computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())},accepted:function(){return!!this.$route.query.accepted}},data:function(){return{areAccepted:!1}},methods:{updateAccepted:function(){this.areAccepted=!this.areAccepted},resolveRouting:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var s;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return e.preventDefault(),n.prev=1,n.next=4,t.$http({method:"GET",url:ct.users.acceptTerms});case 4:t.$store.commit("setNeedToAcceptTerms",!1),n.next=12;break;case 7:return n.prev=7,n.t0=n["catch"](1),console.error(n.t0),t.$toast({message:at.errors.acceptTerms,color:"danger"}),n.abrupt("return");case 12:t.$store.getters.needOnboarding?t.$router.push("/onboarding"):t.$store.getters.gotUpdatesToShow?t.$router.push("/new/update/"+t.$store.getters.gotUpdatesToShow):t.$store.getters.gotNotificationToShow?(s=t.$store.getters.gotNotificationToShow,t.$store.commit("setNotificationToShow",null),t.$router.push(s)):t.$router.push("/home");case 13:case"end":return n.stop()}}),n,null,[[1,7]])})))()},back:function(){this.$router.push("/menu")}}};const ja=d()(Oa,[["render",ba]]);var va=ja,ya=Object(c["h"])("div",null," ",-1);function xa(e,t,n,s,r,a){var o=Object(c["y"])("section-button"),i=Object(c["y"])("carousel"),l=Object(c["y"])("Updates"),u=Object(c["y"])("Notifications"),d=Object(c["y"])("notifications-modal"),b=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(b,{label:"What's New",back:"/menu"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{id:"sections-carousel",classes:"pt-4 -my-4 pb-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(r.sections,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,active:a.section===e.path,classes:[0===t?"ml-8":""," mr-4"],label:e.label,onOnClick:function(t){return a.routeToSection(e.path)}},null,8,["active","classes","label","onOnClick"])})),128)),ya]})),_:1}),"updates"===a.section?(Object(c["q"])(),Object(c["e"])(l,{key:0,filters:e.updatedFilters,onUpdateFilters:e.updateFilters},null,8,["filters","onUpdateFilters"])):Object(c["f"])("",!0),"notifications"===a.section?(Object(c["q"])(),Object(c["e"])(u,{key:1,onOnChangeNotification:a.openNotification},null,8,["onOnChangeNotification"])):Object(c["f"])("",!0),null!==r.notificationOpened?(Object(c["q"])(),Object(c["e"])(d,{key:2,notificationID:r.notificationOpened,onOnClose:a.closeNotification},null,8,["notificationID","onOnClose"])):Object(c["f"])("",!0)]})),_:1})}var wa={class:"flex flex-start items-center pointer-events-none w-full"},ka={class:"flex flex-col justify-between py-2"},Ca={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Sa={class:"font-helvetica text-grey text-14 spacing-44 line-24"},_a={class:"width-12 height-12 my-auto ml-auto flex justify-center items-center"},qa={key:0,class:"width-8 height-8 bg-red rounded-full"};function Da(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("ion-list");return Object(c["q"])(),Object(c["e"])(l,{class:"bg-transparent px-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.formattedUpdates,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4",key:t,onClick:function(t){return a.openUpdate(e)}},[Object(c["h"])("div",wa,[Object(c["h"])(i,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4"},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:e.preview},null,8,["src"])]})),_:2},1024),Object(c["h"])("div",ka,[Object(c["h"])("span",Ca,Object(c["A"])(e.name),1),Object(c["h"])("span",Sa,Object(c["A"])(e.release),1)]),Object(c["h"])("div",_a,[e.read?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])("div",qa))])])],8,["onClick"])})),128))]})),_:1})}var $a={components:{IonList:i["f"],IonImg:i["d"],SquareContainer:Vt},data:function(){return{updates:[]}},created:function(){this.getUpdates()},computed:{formattedUpdates:function(){return this.updates}},methods:{openUpdate:function(e){this.$router.push("/new/update/"+e.id)},getUpdates:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,s;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:ct.notifications.updates,params:{}});case 3:n=t.sent,e.updates=n,t.next=12;break;case 7:t.prev=7,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:at.errors.appUpdates,color:"danger"}),e.$store.getters.gotNotificationToShow?(s=e.$store.getters.gotNotificationToShow,e.$store.getters.gotNotificationToShow&&e.$store.commit("setNotificationToShow",null),e.$router.push(s)):e.$router.push("/new?section=updates");case 12:case"end":return t.stop()}}),t,null,[[0,7]])})))()}}};const Ta=d()($a,[["render",Da]]);var Aa=Ta,Ia={class:"flex justify-between items-stretch pointer-events-none px-8 w-full"},Ra={class:"flex flex-col justify-between py-2"},Pa={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Ma={class:"width-12 height-12 my-auto ml-auto flex justify-center items-center"},La={key:0,class:"width-8 height-8 bg-red rounded-full"};function Na(e,t,n,s,r,a){var o=Object(c["y"])("ion-list");return Object(c["q"])(),Object(c["e"])(o,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedNotifications,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4",key:t,onClick:function(t){return a.openNotification(e)}},[Object(c["h"])("div",Ia,[Object(c["h"])("div",{class:[e.read?"bg-light-grey":"bg-red"," width-4 rounded-2 mr-4"]},null,2),Object(c["h"])("div",Ra,[Object(c["h"])("p",Pa,Object(c["A"])(e.title),1)]),Object(c["h"])("div",Ma,[e.read?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])("div",La))])])],8,["onClick"])})),128))]})),_:1})}var Ba={components:{IonList:i["f"]},data:function(){return{notifications:[]}},created:function(){this.$store.dispatch("getNotifications")},computed:{updatedNotifications:function(){return this.$store.getters.gotNotifications}},methods:{openNotification:function(e){this.$emit("onChangeNotification",e.id)}}};const Ea=d()(Ba,[["render",Na]]);var Va=Ea,Ua={class:"w-full h-full relative pt-20 login-background relative",style:{"min-width":"100%"}},za={class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:{height:"90px"}},Fa={class:"mx-8 flex flex-col relative z-10"},Ga={key:0,class:"bg-white rounded-12 relative mr-4 gallery-container elevated-shadow overflow-hidden"},Ha={class:"flex my-8 justify-between items-start"},Wa={key:1,class:"flex"};function Ya(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("Title"),u=Object(c["y"])("big-button"),d=Object(c["y"])("ion-modal");return Object(c["q"])(),Object(c["e"])(d,{animated:"",showBackdrop:"","css-class":"custom-modal no-modal-shadow","is-open":r.isOpened,onDidDismiss:a.closeNotification},{default:Object(c["D"])((function(){return[Object(c["h"])("div",Ua,[Object(c["h"])(o,{src:"/assets/login-bg.png",class:"fixed bottom-0 left-0 z-0 w-full"}),Object(c["h"])("div",za,[Object(c["h"])(i,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.closeNotification},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])]),Object(c["h"])("div",Fa,[Object(c["h"])(l,{titleClass:"pb-4 text-black font-helvetica-bold text-28 block"},{default:Object(c["D"])((function(){return[Object(c["g"])(Object(c["A"])(a.updatedNotification.title),1)]})),_:1}),a.updatedNotification.preview?(Object(c["q"])(),Object(c["e"])("div",Ga,[Object(c["h"])(o,{src:a.updatedNotification.preview||"",class:"h-full w-auto pointer-events-none"},null,8,["src"])])):Object(c["f"])("",!0),Object(c["h"])("div",Ha,[Object(c["h"])("p",{class:"m-0 paragraph font-helvetica text-16 line-24 spacing-1 text-mid-dark-grey",innerHTML:a.updatedNotification.message},null,8,["innerHTML"])]),a.isLink?(Object(c["q"])(),Object(c["e"])("div",Wa,[Object(c["h"])(u,{label:"Read more",onOnClick:a.routeToElement},null,8,["onOnClick"])])):Object(c["f"])("",!0)])])]})),_:1},8,["is-open","onDidDismiss"])}var Ja={components:{IonImg:i["d"],Title:ae,BigButton:en},props:{notificationID:Number},data:function(){return{notification:{},isOpened:!1}},computed:{updatedNotification:function(){return this.notification},isLink:function(){return!!(this.notification&&this.notification.link&&Object.keys(this.notification).length)}},methods:{routeToElement:function(){var e="/".concat("congress"===this.notification.link.type?"congresses":this.notification.link.type).concat(this.notification.link.id?"/"+this.notification.link.id:"");this.$router.push(e)},closeNotification:function(){this.isOpened=!1,this.$emit("onClose")},getNotification:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.notificationID){t.next=14;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:ct.notifications.list+"/"+e.notificationID,params:{}});case 4:n=t.sent,e.notification=n,t.next=12;break;case 8:t.prev=8,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:at.errors.notificationDetail,color:"danger"});case 12:t.next=17;break;case 14:e.$emit("onClose"),console.error("No id notification"),e.$toast({message:at.errors.notificationDetail,color:"danger"});case 17:case"end":return t.stop()}}),t,null,[[1,8]])})))()}},created:function(){this.notificationID&&this.getNotification()},watch:{updatedNotification:function(e){e&&Object.keys(e).length?this.isOpened=!0:this.isOpened=!1},notificationID:function(e){e&&(this.isOpened=!0,this.getNotification())}}};n("1712");const Ka=d()(Ja,[["render",Ya]]);var Xa=Ka,Qa={components:{Page:ys,Updates:Aa,Notifications:Va,NotificationsModal:Xa,Carousel:he,SectionButton:nr},data:function(){return{initSection:"notifications",sections:[{label:"Notifications",path:"notifications"},{label:"App updates",path:"updates"}],notificationOpened:null}},computed:{section:function(){return this.initSection}},created:function(){this.$route.query&&this.$route.query.section&&(this.initSection=this.$route.query.section)},methods:{routeToSection:function(e){this.initSection=e},closeNotification:function(){this.notificationOpened=null,this.$store.dispatch("getNotifications")},openNotification:function(e){this.notificationOpened=e}}};const Za=d()(Qa,[["render",xa]]);var ec=Za;n("1393");function tc(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("slider");return a.formattedSlides&&a.formattedSlides.length?(Object(c["q"])(),Object(c["e"])(i,{key:0,back:"",pager:!0,slides:a.formattedSlides,url:a.formattedUrl||null,finalLabel:a.formattedUrl?"Discover more":"Close",onOnEnd:a.resolveRouting},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])("div",{class:"flex flex-col flex flex-grow pointer-events-none",id:t.big},[Object(c["h"])(o,{src:t.big},null,8,["src"])],8,["id"])]})),_:1},8,["slides","url","finalLabel","onOnEnd"])):Object(c["f"])("",!0)}var nc={name:"UpdateWizard",components:{Slider:ea,IonImg:i["d"]},mixins:[On],data:function(){return{results:{}}},computed:{formattedSlides:function(){return this.results.gallery||[]},formattedUrl:function(){return this.results&&this.results.url?this.results.url.split("limasales:/")[1]:null}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=17;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:ct.notifications.updates+"/"+e.$route.params.id});case 4:n=t.sent,e.results=n,e.$store.getters.gotUpdatesToShow&&e.$store.commit("setAppUpdates",null),e.logPage("Last App Update"),t.next=15;break;case 10:t.prev=10,t.t0=t["catch"](1),console.error(t.t0),e.$router.push("/home"),e.$toast({message:at.errors.updates,color:"danger"});case 15:t.next=18;break;case 17:e.resolveRouting();case 18:case"end":return t.stop()}}),t,null,[[1,10]])})))()},methods:{resolveRouting:function(){if(this.$store.getters.gotNotificationToShow){var e=this.$store.getters.gotNotificationToShow;this.$store.getters.gotNotificationToShow&&this.$store.commit("setNotificationToShow",null),this.$router.push(e)}else this.$router.push("/new?section=updates")}}};const sc=d()(nc,[["render",tc]]);var rc=sc,ac=Object(c["h"])("div",null," ",-1),cc={class:"flex px-8"};function oc(e,t,n,s,r,a){var o=Object(c["y"])("section-button"),i=Object(c["y"])("carousel"),l=Object(c["y"])("multimedia-images"),u=Object(c["y"])("multimedia-videos"),d=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(d,{label:"Multimedia",back:"",filters:r.filters,filtersOptions:a.options,onOnFiltersChange:a.updateFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{id:"sections-carousel",classes:"pt-4 -my-4 pb-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(r.sections,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,active:r.section===e.path,classes:[0===t?"ml-8":""," mr-4"],label:e.label,onOnClick:function(t){return a.changeSection(e.path)}},null,8,["active","classes","label","onOnClick"])})),128)),ac]})),_:1}),Object(c["h"])("div",cc,["images"===r.section?(Object(c["q"])(),Object(c["e"])(l,{key:0,images:a.updatedImages},null,8,["images"])):Object(c["f"])("",!0),"videos"===r.section?(Object(c["q"])(),Object(c["e"])(u,{key:1,videos:a.updatedVideos},null,8,["videos"])):Object(c["f"])("",!0)])]})),_:1},8,["filters","filtersOptions","onOnFiltersChange"])}var ic={class:"flex flex-wrap w-full -mx-2"},lc={class:"w-full mx-2 squared pointer-events-none bg-light-grey rounded-8 relative overflow-hidden"};function uc(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("image-modal");return Object(c["q"])(),Object(c["e"])("div",ic,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.images,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"flex w-1/3 mb-4",onClick:function(e){return a.openImage(t)}},[Object(c["h"])("div",lc,[Object(c["h"])(o,{src:e.preview,class:"w-full h-full absolute",style:{"object-fit":"cover"}},null,8,["src"])])],8,["onClick"])})),128)),r.isOpenImage?(Object(c["q"])(),Object(c["e"])(i,{key:0,open:r.isOpenImage,gallery:n.images,onOnClose:a.closeImage},null,8,["open","gallery","onOnClose"])):Object(c["f"])("",!0)])}var dc={class:"w-full h-full relative pt-20 bg-black flex justify-center items-center"},bc={class:"bg-black absolute top-0 left-0 flex px-8 w-full z-10",style:{height:"90px"}},pc=Object(c["h"])("img",{src:"/assets/button-icons/close-white.svg",className:"pointer-events-none"},null,-1),hc={class:"flex w-full h-full"},fc={class:"absolute bottom-0 left-0 p-2 w-full",style:{background:"rgba(0,0,0,0.7)","min-height":"100px"}},mc={class:"font-helvetica text-white text-14 spacing-44 line-24"};function gc(e,t,n,s,r,a){var o=Object(c["y"])("ion-button"),i=Object(c["y"])("ion-img"),l=Object(c["y"])("ion-slide"),u=Object(c["y"])("ion-slides"),d=Object(c["y"])("ion-modal");return Object(c["q"])(),Object(c["e"])(d,{animated:"",showBackdrop:"","css-class":"custom-modal","is-open":a.computedOpen,onDidDismiss:t[1]||(t[1]=function(t){return e.$emit("onClose")})},{default:Object(c["D"])((function(){return[Object(c["h"])("div",dc,[Object(c["h"])("div",bc,[Object(c["h"])(o,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.closeImage},{default:Object(c["D"])((function(){return[pc]})),_:1},8,["onClick"])]),1===a.updatedGallery.length?(Object(c["q"])(),Object(c["e"])(i,{key:0,src:a.updatedGallery[0],class:"w-full my-auto"},null,8,["src"])):(Object(c["q"])(),Object(c["e"])(u,{key:1,mode:"ios",ref:"slides",pager:"true",style:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%","z-index":"0"},options:r.slideOpts,onIonSlidesDidLoad:a.onLoad},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedGallery,(function(e,t){return Object(c["q"])(),Object(c["e"])(l,{key:t},{default:Object(c["D"])((function(){return[Object(c["h"])("div",hc,[Object(c["h"])("img",{src:e.img,class:"w-full mx-auto my-auto pointer-events-none"},null,8,["src"]),Object(c["h"])("div",fc,[Object(c["h"])("p",mc,Object(c["A"])(e.text),1)])])]})),_:2},1024)})),128))]})),_:1},8,["options","onIonSlidesDidLoad"]))])]})),_:1},8,["is-open"])}var Oc={components:{IonImg:i["d"],IonModal:i["g"],IonSlides:i["o"],IonSlide:i["n"],IonButton:i["b"]},props:{open:{type:Boolean},image:{type:Number},gallery:{type:Array},index:{type:Number}},data:function(){return{slideOpts:{initialSlide:0,speed:400}}},methods:{closeImage:function(){this.$emit("onClose")},onLoad:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$refs.slides){t.next=5;break}return t.next=3,e.$refs.slides.$el.getSwiper();case 3:n=t.sent,n&&(n.update(),e.index&&n.slideTo(e.index));case 5:case"end":return t.stop()}}),t)})))()}},computed:{computedOpen:function(){return this.open},updatedGallery:function(){return this.gallery&&this.gallery.length?this.gallery.map((function(e){return{img:e.hd||e.image||e.preview||e.img,text:e.label||e.text}})):[]}}};const jc=d()(Oc,[["render",gc]]);var vc=jc,yc={components:{ImageModal:vc,IonImg:i["d"]},props:{images:Array},data:function(){return{image:"",isOpenImage:!1}},methods:{openImage:function(e){this.image=e,this.isOpenImage=!0},closeImage:function(){this.isOpenImage=!1,this.image=""}}};n("d498");const xc=d()(yc,[["render",uc]]);var wc=xc,kc={class:"flex flex-col"},Cc={class:"image-container pointer-events-none relative bg-black flex justify-center items-center overflow-hidden"},Sc={class:"px-8 py-4 font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 m-0 pointer-events-none"},_c={class:"width-121 height-85 rounded-8 mr-4 relative bg-black overflow-hidden pointer-events-none relative"},qc={class:"font-helvetica-medium text-black text-15 spacing-4 line-24 pointer-events-none flex items-center "};function Dc(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("video-modal");return Object(c["q"])(),Object(c["e"])("div",kc,[n.hero&&a.slicedVideos&&a.slicedVideos.length?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:"bg-white rounded-12 relative videogallery-container overflow-hidden elevated-shadow mb-4",onClick:t[1]||(t[1]=function(e){return a.openVideo(a.slicedVideos[0])})},[Object(c["h"])("div",Cc,[Object(c["h"])(o,{src:a.slicedVideos[0].preview,class:"w-full opacity-50"},null,8,["src"]),Object(c["h"])(o,{src:"/assets/button-icons/play-white.svg",class:"m-auto absolute z-10"})]),Object(c["h"])("p",Sc,Object(c["A"])(a.slicedVideos[0].label),1)])):Object(c["f"])("",!0),(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.slicedVideos,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"flex item-center mb-4",onClick:function(t){return a.openVideo(e)}},[Object(c["h"])("div",_c,[Object(c["h"])(o,{src:e.preview_image,class:"w-full h-full opacity-50 z-0",style:{"object-fit":"cover"}},null,8,["src"]),Object(c["h"])(o,{src:"/assets/button-icons/play-white.svg",class:"m-auto absolute z-10",style:{top:"50%",left:"50%",transform:"translate(-50%,-50%)"}})]),Object(c["h"])("div",qc,Object(c["A"])(e.label||e.title),1)],8,["onClick"])})),128)),Object(c["h"])(i,{code:n.code,direct:n.direct,open:r.isVideoOpen,video:r.video,onOnClose:a.closeVideo},null,8,["code","direct","open","video","onOnClose"])])}var $c={class:"w-full h-full relative pt-20 bg-black flex justify-center items-center"},Tc={class:"bg-black absolute top-0 left-0 flex px-8 w-full z-10",style:{height:"90px"}},Ac={class:"w-full relative",style:{"padding-bottom":"56.25%"}};function Ic(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("ion-modal");return Object(c["q"])(),Object(c["e"])(l,{animated:"",showBackdrop:"","css-class":"custom-modal","is-open":r.isOpened,onDidDismiss:t[1]||(t[1]=function(t){return e.$emit("onClose")})},{default:Object(c["D"])((function(){return[Object(c["h"])("div",$c,[Object(c["h"])("div",Tc,[Object(c["h"])(i,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.closeVideo},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close-white.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])]),Object(c["h"])("div",Ac,[Object(c["h"])("iframe",{src:a.videoEmbedUrl,title:"YouTube video player",class:"absolute w-full h-full",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,8,["src"])])])]})),_:1},8,["is-open"])}var Rc={components:{IonImg:i["d"],IonModal:i["g"],IonButton:i["b"]},props:{open:{type:Boolean},video:{type:Object},direct:{type:Boolean,default:!1},code:{type:Boolean,default:!1}},data:function(){return{isOpened:!1}},methods:{closeVideo:function(){this.$emit("onClose")}},computed:{videoEmbedUrl:function(){if(this.code)return"https://www.youtube.com/embed/"+this.video.code;if(!this.direct){var e=this.video.url,t=e.split("/"),n=t[t.length-1];return"https://www.youtube.com/embed/"+n}return this.video.url}},watch:{open:function(e){this.isOpened=e}}};const Pc=d()(Rc,[["render",Ic]]);var Mc=Pc,Lc={components:{VideoModal:Mc,IonImg:i["d"]},props:{videos:{type:Array},hero:{type:Boolean,default:!1},direct:{type:Boolean,default:!1},code:{type:Boolean,default:!1}},data:function(){return{video:null,isVideoOpen:!1}},computed:{slicedVideos:function(){return this.hero&&this.videos&&this.videos.length&&this.videos.length>1?this.videos.slice(1):this.videos}},methods:{openVideo:function(e){this.video=e,this.isVideoOpen=!0},closeVideo:function(){this.isVideoOpen=!1,this.video=null}}};n("f3c4");const Nc=d()(Lc,[["render",Dc]]);var Bc=Nc,Ec={components:{Page:ys,Carousel:he,SectionButton:nr,MultimediaImages:wc,MultimediaVideos:Bc},data:function(){return{section:"videos",sections:[{label:"Videos",path:"videos"},{label:"Images",path:"images"}],images:[],videos:[],filters:{},filtersOptions:{}}},computed:{updatedImages:function(){return this.images},updatedVideos:function(){return this.videos},options:function(){return this.filtersOptions}},created:function(){this.getMultimedia()},methods:{changeSection:function(e){this.section=e,this.getMultimedia()},updateFilters:function(e){this.filters=Object.assign({},e)},getMultimedia:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:ct.multimedia[e.section],params:e.filters});case 3:n=t.sent,e[e.section]=n.list,e.filtersOptions=n.filters,t.next=12;break;case 8:t.prev=8,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:at.errors.multimedia,color:"danger"});case 12:case"end":return t.stop()}}),t,null,[[0,8]])})))()}},watch:{filters:function(e){this.getMultimedia(e)}}};const Vc=d()(Ec,[["render",oc]]);var Uc=Vc,zc=Object(c["h"])("a",{class:"font-helvetica text-mid-dark-grey text-12 spacing-1 line-24 mt-4 z-10",href:"https://limacorporate.com/en/about-us/privacy-policy.html",title:"LimaCorporate Privacy Policy",target:"_blank"},"Read the full Privacy Policy",-1);function Fc(e,t,n,s,r,a){var o=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(o,{withMargin:"",label:"Privacy Policy",back:""},{default:Object(c["D"])((function(){return[Object(c["h"])("p",{class:"font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4",innerHTML:a.formattedPrivacy},null,8,["innerHTML"]),zc]})),_:1})}var Gc={components:{Page:ys},data:function(){return{privacy:'<p><span>This page describes the management methods of the site for the processing of personal data of the users who consult it.</span><br></p><p>This information is given in accordance with Art. 13 of Regulation (EU) 2016/679 to those who interact with the Limacorporate S.p.A. web services, accessible electronically at: limacorporate.com corresponding to the initial page of the site.</p><p>The information is provided only for the limacorporate.com site and not for the other websites that may be consulted by the user via links.</p><h5><b>1. Data controller</b></h5><p>Following consultation of this site, the data relating to identified or identifiable persons may be processed.</p><p>The Data Controller is <b>Limacorporate S.p.A.</b>, based in Via Nazionale, 52 - 33038 Villanova di San Daniele del Friuli, Udine - Italia.</p><h5><b>2. Data Protection Officer</b></h5><p>The Data Controller has designated a Data Protection Officer (DPO) to which the data subjects can turn to for matters concerning the exercise of their rights and to request information on their personal data processed by the Data Controller.</p><p>The Data Protection Officer of Limacorporate S.p.A. can be reached at the registered office of Limacorporate S.p.A., Via Nazionale, 52 - 33038, Villanova di San Daniele del Friuli, Udine - Italia, and at the following contact information: <a href="mailto:dpo@limacorporate.com" title=""><b>dpo@limacorporate.com</b></a>.</p><h5><b>3. Data processing location</b></h5><p>The processing connected with the web services of this site takes place at the aforementioned registered office of the Data Controller or at the premises of the provider of Web Services and are handled exclusively by personnel assigned to the processing, or by individuals assigned to occasional maintenance operations.</p><p>No piece of information stemming from the web service is communicated to third party or disseminated.</p><p>Personal information provided by users applying for information material is used solely to perform the service requested and are communicated to third parties only if necessary for that purpose (shipping service).</p><h5><b>4. Purpose and types of processed data</b></h5><p><i><b>Navigation data</b></i></p><p>The computer systems and the software procedures used to operate this web site acquire, during their normal operation, certain personal data, which transmission is implicit in the use of Internet communication protocols.</p><p>This information is not collected to be necessarily&nbsp;<span>associated</span><span>&nbsp;with&nbsp;</span><span>identified individuals, but, by its very nature could, through processing and association with other data held by third parties, allow users to be identified.</span></p><p>This category comprehend the IP addresses or the domain names of the computers used by the users who connect to the site, the addresses with URI (Uniform Resource Identifier) entry of requested resources, the time of the request, the method used to submit the request to the server, the size of the file obtained in response, the numeric code indicating the status of the response given by the server (success, error, etc.) and other parameters related to the operating system and the IT environment of the user. This information is used only to acquire anonymous statistical information on the use of the site and to check its correct operation and is deleted immediately after processing.&nbsp;</p><p>Data could be used to ascertain responsibility in case of hypothetical cyber crimes to the detriment of the site: with this exception, currently the data on web contacts are not stored more than seven days. </p><p><i><b>Data provided voluntarily by the user</b></i></p><p>The completely optional, explicit and voluntary sending of emails to the addresses listed on this site entails the subsequent acquisition of the address of the sender, necessary to comply with the requests, as well as possible other personal information included in the message. For this information no unauthorized communication to third parties, or disclosure, is expected.</p><p>Specific summarised information sheets will be progressively included and displayed on the sites page dedicated to particular services on request. For these other processing methods, information regarding the possible knowability by third parties will be provided in advance.</p><p><b><i>Cookies</i></b></p><p>Cookies are small text files that are sent to your computer by the web pages you visit, in order to provide useful information to make the site operate more efficiently and optimally.</p><p>On our site we mainly use technical cookies to manage navigation.</p><p>For more information and details on the use of cookies visit this page:&nbsp;<a href="https://limacorporate.com/en/cookie-policy.html" target=""><u>https://limacorporate.com/en/cookie-policy.html</u></a></p><p><b style="color: inherit;">5. Optional nature of data provision</b><br></p><p>Except as specified for the browsing data, the user is free to provide the personal data listed in information request forms. Failure to provide the data could however prevent users to obtain what they requested.</p><h5><b>6. Communication of the Data </b></h5><p>Data will be accessible by services <span>providers</span><span>&nbsp;</span><span>&nbsp;for the benefit of the Site which may also be located in non-EU Countries. In such case, the transfer of personal data will take place in compliance with articles 45 and 46 of the GDPR;</span></p><h5><b>7. Processing method</b></h5><p>The personal data is processed only for the time strictly necessary to achieve the purposes for which it was collected. </p><p>The Data will be processed both electronically and in paper form but, in any case, minimizing the use of data identifiable to what is necessary for the purposes mentioned above. Specific security measures are observed to prevent data loss, illegal or incorrect use and unauthorized accesses.</p><h5><b>8. Rights of the data subjects</b></h5><p>Users have the right to obtain, at any time, confirmation as to whether or not personal data concerning&nbsp;them exist, to know their content and source, verify that they are correct or obtain their integration, update or rectification. Users also have the right to obtain erasure, anonymization or blocking of data that have been processed unlawfully, as well as the right to object, in any case, on legitimate grounds, to the processing of personal data concerning you. Additionally, in compliance with the terms of the GDPR, users can (a) request the limitation of the processing of personal data in the event that (i) challenges the accuracy of personal data, for the period necessary to verify the accuracy of such personal data; (ii) the processing is unlawful and the user objects to the deletion of personal data and requests instead that its use be limited; (iii) although the data controller no longer needs it for processing, personal data is necessary for the user to ascertain, exercise or defend a right in court; (iv) users have opposed to the treatment pursuant to art. 21, paragraph 1, of the GDPR pending verification of the possible prevalence of the legitimate reasons of the data controller with respect to those of the interested party; (b) oppose at any time to the processing of personal data; (c) request cancellation of personal data concerning him without undue delay; (d) obtain the portability of personal data concerning it; (e) propose a complaint to the Italian Data Protection Authority, the Garante per il trattamento dei dati personali, where the conditions exist.&nbsp;</p><p>Requests should be sent to: Data Controller <b>Limacorporate S.p.A.</b> - Via Nazionale, 52 - 33038 Villanova di San Daniele del Friuli, Udine - Italia - Tel. +39.0432.945511 - Fax +39.0432.945512 or by sending an email to <a href="mailto:legaloffice@limacorporate.com" title=""><b>legaloffice@limacorporate.com</b></a>.</p><h5><b>9. Updates and amendments</b></h5><p>This privacy policy can be amended or updated with prior notification to the users concerned in the event of substantial changes.</p><p>Last Update January 2021</p>'}},computed:{formattedPrivacy:function(){return this.privacy}}};const Hc=d()(Gc,[["render",Fc]]);var Wc=Hc,Yc=Object(c["h"])("div",null," ",-1),Jc={class:"flex flex-col px-8 mt-4"},Kc={class:"flex flex-col justify-between"},Xc={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},Qc={class:"font-helvetica text-14 text-grey spacing-44 line-24"};function Zc(e,t,n,s,r,a){var o=Object(c["y"])("section-button"),i=Object(c["y"])("carousel"),l=Object(c["y"])("ion-img"),u=Object(c["y"])("ion-button"),d=Object(c["y"])("contacts-modal"),b=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(b,{support:"",label:"Contacts",back:"/menu",mail:"info@limacorporate.com"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{id:"sections-carousel",classes:"pt-4 -my-4 pb-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.sectionsForCarousel,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,active:r.section===e.path,classes:[0===t?"ml-8":""," mr-4"],label:e.label,onOnClick:function(t){return a.changeSection(e.path)}},null,8,["active","classes","label","onOnClick"])})),128)),Yc]})),_:1}),Object(c["h"])("div",Jc,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.sectionToShow.voices,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"flex flex-row pb-4 mb-4 items-center justify-between cursor-pointer",onClick:function(t){return a.openModal(e)}},[Object(c["h"])("div",Kc,[Object(c["h"])("span",Xc,Object(c["A"])(e.title),1),Object(c["h"])("span",Qc,Object(c["A"])(e.subtitle),1)]),Object(c["h"])(u,{type:"button",class:"relative my-auto ml-auto pointer-events-none transparent-button"},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{src:"/assets/button-icons/back.svg",className:"pointer-events-none width-17 height-17 rotate-180"})]})),_:1})],8,["onClick"])})),128))]),a.subsidiary?(Object(c["q"])(),Object(c["e"])(d,{key:0,subsidiary:a.subsidiary,onOnClose:a.closeSubsidiary},null,8,["subsidiary","onOnClose"])):Object(c["f"])("",!0)]})),_:1})}n("7db0");var eo={class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:{height:"90px"}},to={class:"mx-8 flex flex-col relative z-10"},no={class:"flex flex-col mb-4"},so=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24 mb-2"},"Address",-1),ro={class:"flex flex-col"},ao={key:0,class:"relative flex mb-4"},co={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},oo={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},io=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," Phone ",-1),lo={key:1,class:"relative flex mb-4"},uo={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},bo={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},po=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," Fax ",-1),ho={key:2,class:"relative flex mb-4"},fo={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},mo={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},go=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," E-mail ",-1);function Oo(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("Title"),u=Object(c["y"])("square-container"),d=Object(c["y"])("ion-modal");return Object(c["q"])(),Object(c["e"])(d,{animated:"",showBackdrop:"","css-class":"custom-modal no-modal-shadow","is-open":r.isOpened,onDidDismiss:a.closeSubsidiary},{default:Object(c["D"])((function(){return[Object(c["h"])("div",{class:"w-full h-full relative pt-20 gradient-background relative",style:[{"min-width":"100%"},e.isIos?"margin-top:35px":""]},[Object(c["h"])("div",eo,[Object(c["h"])(i,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.closeSubsidiary},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])]),Object(c["h"])("div",to,[Object(c["h"])(l,{titleClass:"pb-4 text-black font-helvetica-bold text-28 block"},{default:Object(c["D"])((function(){return[Object(c["g"])(Object(c["A"])(a.updatedSubsidiary.title),1)]})),_:1}),Object(c["h"])("div",no,[so,Object(c["h"])("p",{class:"m-0 paragraph font-helvetica text-16 text-mid-dark-grey spacing-1 line-24",innerHTML:a.updatedSubsidiary&&a.updatedSubsidiary.address?a.updatedSubsidiary.address:""},null,8,["innerHTML"])]),Object(c["h"])("div",ro,[a.updatedSubsidiary&&a.updatedSubsidiary.phone?(Object(c["q"])(),Object(c["e"])("div",ao,[Object(c["h"])("a",{href:"tel:"+a.updatedSubsidiary.phone,title:"phone",class:"absolute top-0 left-0 w-full h-full"},null,8,["href"]),Object(c["h"])(u,{bgClass:"bg-light-grey",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/phone-black.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",co,[Object(c["h"])("span",oo,Object(c["A"])(a.updatedSubsidiary.phone),1),io])])):Object(c["f"])("",!0),a.updatedSubsidiary&&a.updatedSubsidiary.fax?(Object(c["q"])(),Object(c["e"])("div",lo,[Object(c["h"])(u,{bgClass:"bg-light-grey",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/phone-black.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",uo,[Object(c["h"])("span",bo,Object(c["A"])(a.updatedSubsidiary.fax),1),po])])):Object(c["f"])("",!0),a.updatedSubsidiary&&a.updatedSubsidiary.email?(Object(c["q"])(),Object(c["e"])("div",ho,[Object(c["h"])("a",{href:"mailto:"+a.updatedSubsidiary.email,title:"mail to",class:"absolute top-0 left-0 w-full h-full"},null,8,["href"]),Object(c["h"])(u,{bgClass:"bg-light-grey",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/mail-black.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",fo,[Object(c["h"])("span",mo,Object(c["A"])(a.updatedSubsidiary.email),1),go])])):Object(c["f"])("",!0)])])],4)]})),_:1},8,["is-open","onDidDismiss"])}var jo={name:"Platformer",computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())}}};const vo=jo;var yo=vo,xo={components:{IonImg:i["d"],Title:ae,SquareContainer:Vt},mixins:[yo],props:{subsidiary:Object},data:function(){return{isOpened:!1}},computed:{updatedSubsidiary:function(){return this.subsidiary}},methods:{closeSubsidiary:function(){this.isOpened=!1,this.$emit("onClose")}},watch:{updatedSubsidiary:function(e){e&&Object.keys(e).length?this.isOpened=!0:this.isOpened=!1}}};n("fc65");const wo=d()(xo,[["render",Oo]]);var ko=wo,Co={components:{Page:ys,Carousel:he,SectionButton:nr,ContactsModal:ko},data:function(){return{section:0,subsidiaryOpened:null,sections:[{id:1,title:"LimaCorporate",subsidiaries:[{image:"/assets/icon/italy.svg",title:"Limacorporate S.p.A.",location:"Udine, Italy",contacts:{address:"Via Nazionale, 52 <br/> 33038 Villanova di San Daniele del Friuli <br/> Udine - ITALY",phone:"(+39) 0432 945511",fax:"(+39) 0432 945511",mail:"info@limacorporate.com"}},{image:"/assets/icon/italy.svg",title:"Limacorporate S.p.A.",location:"Udine, Italy",contacts:{address:"Via Nazionale, 52 <br/> 33038 Villanova di San Daniele del Friuli <br/> Udine - ITALY",phone:"(+39) 0432 945511",fax:"(+39) 0432 945511",mail:"info@limacorporate.com"}}]},{id:2,title:"Southern America",subsidiaries:[{image:"/assets/icon/italy.svg",title:"Limacorporate S.p.A. AMERICA",location:"Udine, Italy",contacts:{address:"Via Nazionale, 52 <br/> 33038 Villanova di San Daniele del Friuli <br/> Udine - ITALY",phone:"(+39) 0432 945511",fax:"(+39) 0432 945511",mail:"info@limacorporate.com"}},{image:"/assets/icon/italy.svg",title:"Limacorporate S.p.A. AMERICA2",location:"Udine, Italy",contacts:{address:"Via Nazionale, 52 <br/> 33038 Villanova di San Daniele del Friuli <br/> Udine - ITALY",phone:"(+39) 0432 945511",fax:"(+39) 0432 945511",mail:"info@limacorporate.com"}}]}]}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:ct.contacts,params:{}});case 3:n=t.sent,e.sections=n,t.next=11;break;case 7:t.prev=7,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:at.errors.contacts,color:"danger"});case 11:case"end":return t.stop()}}),t,null,[[0,7]])})))()},computed:{formattedSections:function(){return this.sections.map((function(e,t){return Object(r["a"])(Object(r["a"])({},e),{},{id:t})}))},sectionsForCarousel:function(){return this.formattedSections.map((function(e){return{path:e.id,label:e.tab}}))},sectionToShow:function(){var e=this;return this.formattedSections.find((function(t){return t.id===e.section}))},subsidiary:function(){return this.subsidiaryOpened&&Object.keys(this.subsidiaryOpened).length?this.subsidiaryOpened:null}},methods:{changeSection:function(e){this.section=e},openModal:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var s,r;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(s=e.id,!s){n.next=15;break}return n.prev=2,n.next=5,t.$http({method:"GET",url:ct.contacts+"/"+s,params:{}});case 5:r=n.sent,t.subsidiaryOpened=r,n.next=13;break;case 9:n.prev=9,n.t0=n["catch"](2),console.error(n.t0),t.$toast({message:at.errors.contactsDetail,color:"danger"});case 13:n.next=17;break;case 15:console.error("No contact id"),t.$toast({message:at.errors.contactsDetail,color:"danger"});case 17:case"end":return n.stop()}}),n,null,[[2,9]])})))()},closeSubsidiary:function(){this.subsidiaryOpened=null}}};const So=d()(Co,[["render",Zc]]);var _o=So,qo={class:"flex flex-start items-center pointer-events-none px-8 w-full"},Do={class:"flex flex-col justify-between py-2"},$o={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},To={class:"font-helvetica text-grey text-14 spacing-44 line-24"};function Ao(e,t,n,s,r,a){var o=Object(c["y"])("square-container"),i=Object(c["y"])("ion-list"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{back:"/home",label:"News",filters:r.filters,filtersOptions:a.options,onOnFiltersChange:a.updateFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedNews.list,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4 cursor-pointer",key:t,onClick:function(t){return a.routeTo(e)}},[Object(c["h"])("div",qo,[Object(c["h"])(o,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 bg-no-repeat bg-cover bg-center",styles:"background-image:url('".concat(e.preview,"')")},null,8,["styles"]),Object(c["h"])("div",Do,[Object(c["h"])("p",$o,Object(c["A"])(e.title),1),Object(c["h"])("span",To,Object(c["A"])(e.date),1)])])],8,["onClick"])})),128))]})),_:1})]})),_:1},8,["filters","filtersOptions","onOnFiltersChange"])}var Io={components:{Page:ys,IonList:i["f"],SquareContainer:Vt},data:function(){return{news:{list:[],filters:{}},filtersOptions:{},filters:{year:(new Date).getFullYear()}}},created:function(){this.getNews()},computed:{updatedNews:function(){return this.news},options:function(){return this.filtersOptions}},methods:{routeTo:function(e){var t="/news/".concat(e.id);this.$router.push(t)},updateFilters:function(e){this.filters=Object.assign({},e)},getNews:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var s;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,t.$http({method:"GET",url:ct.news.list,params:e||t.filters});case 3:s=n.sent,t.news=s,t.filtersOptions=s.filters,n.next=12;break;case 8:n.prev=8,n.t0=n["catch"](0),console.error(n.t0),t.$toast({message:at.errors.newsList,color:"danger"});case 12:case"end":return n.stop()}}),n,null,[[0,8]])})))()}},watch:{filters:function(e){this.getNews(e)}}};const Ro=d()(Io,[["render",Ao]]);var Po=Ro,Mo=(n("a4d3"),n("e01a"),Object(c["G"])("data-v-6b1fe6c4"));Object(c["t"])("data-v-6b1fe6c4");var Lo={class:"flex my-8 justify-between items-start"};Object(c["r"])();var No=Mo((function(e,t,n,s,r,a){var o=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(o,{withMargin:"",back:"/news",label:a.updatedNews.title},{default:Mo((function(){return[Object(c["h"])("div",{class:"bg-white rounded-12 relative mr-4 gallery-container elevated-shadow overflow-hidden bg-cover bg-no-repeat bg-center",style:"background-image:url('".concat(a.updatedNews.preview,"')")},null,4),Object(c["h"])("div",Lo,[Object(c["h"])("p",{class:"m-0 paragraph font-helvetica text-16 line-24 spacing-1 text-mid-dark-grey",innerHTML:a.updatedNews.description},null,8,["innerHTML"])])]})),_:1},8,["label"])})),Bo={name:"NewsDetail",components:{Page:ys},mixins:[On],data:function(){return{news:{}}},computed:{updatedNews:function(){return this.news},backPath:function(){return"/news/"}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=15;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:ct.news.list+"/"+e.$route.params.id,params:{}});case 4:n=t.sent,e.news=n,e.logPage(n.title),t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:at.errors.newsDetail,color:"danger"});case 13:t.next=18;break;case 15:console.error("No news id in route"),e.$toast({message:at.errors.newsDetail,color:"danger"}),e.$router.back();case 18:case"end":return t.stop()}}),t,null,[[1,9]])})))()}};n("568b");const Eo=d()(Bo,[["render",No],["__scopeId","data-v-6b1fe6c4"]]);var Vo=Eo,Uo=Object(c["h"])("div",null," ",-1),zo={class:"flex flex-col px-8 pt-8"};function Fo(e,t,n,s,r,a){var o=Object(c["y"])("section-button"),i=Object(c["y"])("carousel"),l=Object(c["y"])("document-list-item"),u=Object(c["y"])("add-button-and-modal"),d=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(d,{label:"Documents",back:""},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{id:"sections-carousel",classes:"pt-4 -my-4 pb-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.formattedSections,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,active:r.section===e.path,classes:[0===t?"ml-8":""," mr-4"],red:"us"===e.path,label:e.label,onOnClick:function(t){return a.changeSection(e.path)}},null,8,["active","classes","red","label","onOnClick"])})),128)),Uo]})),_:1}),Object(c["h"])("div",zo,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.documentsToShow,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"mb-4",key:t},[Object(c["h"])(l,{document:e,type:a.updatedSection,actions:e.actions},null,8,["document","type","actions"])])})),128))]),"my"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(u,{key:0,title:"Documents"})):Object(c["f"])("",!0)]})),_:1})}var Go=Object(c["G"])("data-v-16a99600"),Ho=Go((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("new-folder-modal"),l=Object(c["y"])("new-file-modal");return Object(c["q"])(),Object(c["e"])("div",null,[Object(c["h"])("div",{onClick:t[1]||(t[1]=function(){return a.openAdd&&a.openAdd.apply(a,arguments)}),class:"fixed z-10 rounded-8 bg-black width-56 height-56 flex justify-center items-center cursor-pointer",style:{bottom:"92px",right:"23px"}},[Object(c["h"])(o,{src:"/assets/button-icons/plus-white.svg",class:"width-12 height-12 pointer-events-none"})]),r.isFolderModalOpened?(Object(c["q"])(),Object(c["e"])(i,{key:0,parent:a.computedParent,onOnClose:t[2]||(t[2]=function(e){return a.toggleModal("folder")})},null,8,["parent"])):Object(c["f"])("",!0),r.isUploadModalOpened?(Object(c["q"])(),Object(c["e"])(l,{key:1,parent:a.computedParent,onOnClose:t[3]||(t[3]=function(e){return a.toggleModal("file")})},null,8,["parent"])):Object(c["f"])("",!0)])})),Wo=Object(c["G"])("data-v-33b84af2");Object(c["t"])("data-v-33b84af2");var Yo={class:"fixed top-0 left-0 w-full h-full flex justofy-center items-center"},Jo=Object(c["h"])("div",{class:"absolute top-0 left-0 bg-black opacity-50 w-full h-full pointer-events-none",style:{"z-index":"10"}},null,-1),Ko=Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-22 line-30 text-black mb-1 block"},"Create new folder",-1),Xo={class:"mt-2 w-full flex justify-end items-center"},Qo=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16 spacing-5 line-24 m-auto normal-case "},"Cancel",-1),Zo=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case"},"Create",-1);Object(c["r"])();var ei=Wo((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-input"),i=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])("div",Yo,[Jo,Object(c["h"])("form",{class:"relative z-10 bg-white rounded-8 p-6 mx-auto ",style:{"min-width":"300px","max-width":"300px"},onSubmit:t[3]||(t[3]=function(){return a.createFolder&&a.createFolder.apply(a,arguments)})},[Ko,Object(c["h"])(o,{type:"text",placeholder:"Untitled folder",modelValue:r.name,"onUpdate:modelValue":t[1]||(t[1]=function(e){return r.name=e}),class:"input-filled font-helvetica text-16 spacing-5 line-28 text-black mt-2 mb-4 pb-4",required:""},null,8,["modelValue"]),Object(c["h"])("div",Xo,[Object(c["h"])("div",{class:"bg-white\n            rounded-12 flex justify-center items-center height-56 w-auto px-2 ml-auto normal-case mr-4 shadow-none\n          ",onClick:t[2]||(t[2]=function(){return a.cancel&&a.cancel.apply(a,arguments)})},[Qo]),Object(c["h"])(i,{type:"submit",class:"bg-black\n            rounded-12 flex justify-center items-center height-56 w-auto normal-case px-2'\n          "},{default:Wo((function(){return[Zo]})),_:1})])],32)])})),ti={components:{IonButton:i["b"],IonInput:i["e"]},props:{parent:[String,Number]},data:function(){return{name:""}},computed:{computedParent:function(){return this.parent}},methods:{cancel:function(){this.$emit("onClose")},createFolder:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var s;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(e.preventDefault(),!t.name||!t.name.length){n.next=16;break}return n.prev=2,n.next=5,t.$http({method:"POST",url:ct.folders.create,data:{name:t.name,type:"my",parent:t.parent||null},loader:!0});case 5:s=n.sent,console.log(s),t.$router.go(),n.next=14;break;case 10:n.prev=10,n.t0=n["catch"](2),console.error(n.t0),n.t0&&n.t0.response&&400===n.t0.response.status&&(t.$toast({message:at.errors.furtherFolders,color:"danger"}),t.$emit("onClose"));case 14:n.next=18;break;case 16:console.error("No folder in route"),t.$toast({message:at.errors.folderDetail,color:"danger"});case 18:t.$emit("onClose");case 19:case"end":return n.stop()}}),n,null,[[2,10]])})))()}}};n("2d5f");const ni=d()(ti,[["render",ei],["__scopeId","data-v-33b84af2"]]);var si=ni,ri=Object(c["G"])("data-v-6fc0db65");Object(c["t"])("data-v-6fc0db65");var ai={class:"fixed top-0 left-0 w-full h-full flex justofy-center items-center"},ci=Object(c["h"])("div",{class:"absolute top-0 left-0 bg-black opacity-50 w-full h-full pointer-events-none",style:{"z-index":"10"}},null,-1),oi=Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-22 line-30 text-black mb-1 block"},"Upload new file",-1),ii={class:"relative w-full bg-white border-2 border-dashed border-grey rounded-8 flex flex-col justify-center items-center my-4 py-8 px-2"},li={class:"text-center mx-auto font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mt-2 px-2 block",style:{"word-break":"break-all"}},ui={class:"mt-2 w-full flex justify-end items-center"},di=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16 spacing-5 line-24 m-auto normal-case "},"Cancel",-1),bi=Object(c["h"])("span",{class:"font-helvetica-medium text-white text-16 spacing-5 line-24 m-auto normal-case"},"Upload",-1);Object(c["r"])();var pi=ri((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-input"),i=Object(c["y"])("ion-img"),l=Object(c["y"])("ion-button");return Object(c["q"])(),Object(c["e"])("div",ai,[ci,Object(c["h"])("form",{class:"relative z-10 bg-white rounded-8 p-6 mx-auto ",style:{"min-width":"300px","max-width":"300px"},onSubmit:t[3]||(t[3]=function(){return a.uploadFile&&a.uploadFile.apply(a,arguments)})},[oi,Object(c["h"])(o,{type:"text",placeholder:"Untitled file",modelValue:r.name,"onUpdate:modelValue":t[1]||(t[1]=function(e){return r.name=e}),class:"input-filled font-helvetica text-16 spacing-5 line-28 text-black pb-4 mt-4"},null,8,["modelValue"]),Object(c["h"])("div",ii,[Object(c["h"])(o,{id:"fileInput",type:"file",placeholder:"",onChange:a.previewFiles,accept:"application/pdf,application/vnd.ms-excel",class:"font-helvetica text-16 spacing-5 line-28 text-black absolute w-full h-full top-0 left-0 opacity-0",required:""},null,8,["onChange"]),Object(c["h"])(i,{src:"/assets/button-icons/folder.svg",class:"pointer-events-none m-auto"}),Object(c["h"])("span",li,Object(c["A"])(r.file&&r.file.name?r.file.name:""),1)]),Object(c["h"])("div",ui,[Object(c["h"])("div",{class:"bg-white\n            rounded-12 flex justify-center items-center height-56 w-auto px-2 ml-auto normal-case mr-4 shadow-none cursor-pointer\n          ",onClick:t[2]||(t[2]=function(){return a.cancel&&a.cancel.apply(a,arguments)})},[di]),Object(c["h"])(l,{disabled:!r.file,type:"submit",class:"bg-black\n            rounded-12 flex justify-center items-center height-56 w-auto normal-case px-2 cursor-pointer'\n          "},{default:ri((function(){return[bi]})),_:1},8,["disabled"])])],32)])})),hi={components:{IonButton:i["b"],IonInput:i["e"]},props:{parent:[String,Number]},data:function(){return{name:"",file:null}},computed:{computedParent:function(){return this.parent||null}},methods:{cancel:function(){this.$emit("onClose")},previewFiles:function(e){var t=e.target.files[0];this.file=t,this.name&&this.name.length||(this.name=t.name)},uploadFile:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var s,r;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(e.preventDefault(),!t.name||!t.name.length){n.next=19;break}return n.prev=2,s=new FormData,s.append("name",t.name),s.append("file",t.file),s.append("parent",t.computedParent),n.next=9,t.$http({method:"POST",url:ct.documents.upload,data:s,headers:{"Content-Type":"multipart/form-data"},loader:!0});case 9:r=n.sent,console.log(r),t.$router.go(),n.next=17;break;case 14:n.prev=14,n.t0=n["catch"](2),console.error(n.t0);case 17:n.next=21;break;case 19:console.error("No file found"),t.$toast({message:at.errors.fileUpload,color:"danger"});case 21:t.$emit("onClose");case 22:case"end":return n.stop()}}),n,null,[[2,14]])})))()}}};n("77c0");const fi=d()(hi,[["render",pi],["__scopeId","data-v-6fc0db65"]]);var mi=fi,gi={components:{IonImg:i["d"],NewFolderModal:si,NewFileModal:mi},props:{title:String,parent:[Number,String]},data:function(){return{isFolderModalOpened:!1,isUploadModalOpened:!1}},computed:{computedParent:function(){return this.parent||null}},methods:{toggleModal:function(e){switch(e){case"folder":this.isFolderModalOpened=!this.isFolderModalOpened;break;case"file":this.isUploadModalOpened=!this.isUploadModalOpened;break}},openAdd:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,i["r"].create({header:"Add to "+e.title,animated:!0,cssClass:"document-action-menu",buttons:[{text:"Create new folder",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.toggleModal("folder");case 1:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()},{text:"Upload file",handler:function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.toggleModal("file");case 1:case"end":return t.stop()}}),t)})));function n(){return t.apply(this,arguments)}return n}()}]});case 2:return n=t.sent,t.next=5,n.present();case 5:case"end":return t.stop()}}),t)})))()}}};n("b6b6");const Oi=d()(gi,[["render",Ho],["__scopeId","data-v-16a99600"]]);var ji=Oi,vi={components:{Page:ys,Carousel:he,SectionButton:nr,DocumentListItem:yn,AddButtonAndModal:ji},data:function(){return{section:"my",sections:[{path:"my",label:"My Docs"},{path:"shared",label:"Shared with me"}],documents:{my:[],shared:[],us:[]}}},computed:{formattedSections:function(){var e=this.sections;return this.$store.getters.showUS&&e.unshift({path:"us",label:"US"}),e},updatedDocuments:function(){var e=this.$store.getters.documents||[];return this.documents[this.updatedSection]&&this.documents[this.updatedSection].length&&(e[this.updatedSection]=this.documents[this.updatedSection]),e},updatedSection:function(){return this.section},documentsToShow:function(){return this.updatedDocuments[this.updatedSection]||[]}},methods:{changeSection:function(e){this.section=e,this.getDocuments()},getDocuments:function(){var e=arguments,t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var s,r,a;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return s=e.length>0&&void 0!==e[0]&&e[0],n.prev=1,r="list_"+t.updatedSection,n.next=5,t.$http({method:"GET",url:ct.documents[r],params:t.filters,loader:s});case 5:a=n.sent,t.documents[t.updatedSection]=a.list,n.next=13;break;case 9:n.prev=9,n.t0=n["catch"](1),console.error(n.t0),t.$toast({message:at.errors.documents,color:"danger"});case 13:case"end":return n.stop()}}),n,null,[[1,9]])})))()}},mounted:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.$store.getters.showUS&&(e.section="us"),e.getDocuments(!0);case 2:case"end":return t.stop()}}),t)})))()}};const yi=d()(vi,[["render",Fo]]);var xi=yi,wi={class:"flex flex-col px-8 pt-8"};function ki(e,t,n,s,r,a){var o=Object(c["y"])("document-list-item"),i=Object(c["y"])("add-button-and-modal"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{label:a.updatedDocuments.back.name||"Folder",back:""},{default:Object(c["D"])((function(){return[Object(c["h"])("div",wi,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedDocuments.list,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"mb-4",key:t},[Object(c["h"])(o,{document:e,type:a.documentsType,actions:e.actions},null,8,["document","type","actions"])])})),128))]),"my"===a.updatedDocuments.type?(Object(c["q"])(),Object(c["e"])(i,{key:0,title:a.updatedDocuments.back.name,parent:a.updatedDocuments.back.id},null,8,["title","parent"])):Object(c["f"])("",!0)]})),_:1},8,["label"])}var Ci={name:"FolderDetail",components:{Page:ys,DocumentListItem:yn,AddButtonAndModal:ji},mixins:[On],data:function(){return{documents:{back:{},list:[],type:""}}},computed:{updatedDocuments:function(){var e=Object.assign({},this.documents);return e},documentsType:function(){return this.updatedDocuments.type||"us"!==this.$route.query.type?this.updatedDocuments.type||"":"us"}},methods:{getDocuments:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,s,r,a,c;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id||!e.$route.query.type){t.next=18;break}return n=e.$route.params.id,s=e.$route.query.type,t.prev=3,a="list_"+s,t.next=7,e.$http({method:"GET",url:ct.documents[a]+"/"+n,params:e.filters});case 7:c=t.sent,e.documents=c,e.logPage((null===c||void 0===c||null===(r=c.back)||void 0===r?void 0:r.name)||"Folder detail"),t.next=16;break;case 12:t.prev=12,t.t0=t["catch"](3),console.error(t.t0),e.$toast({message:at.errors.documents,color:"danger"});case 16:t.next=21;break;case 18:console.error("No documents id in route"),e.$toast({message:at.errors.folderDetail,color:"danger"}),e.$router.push("/documents");case 21:case"end":return t.stop()}}),t,null,[[3,12]])})))()}},mounted:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.getDocuments();case 1:case"end":return t.stop()}}),t)})))()},watch:{"$route.params.id":function(){this.$router.currentRoute&&this.$router.currentRoute.value&&this.$router.currentRoute.value.path&&this.$router.currentRoute.value.path.includes("folder")&&(this.documents={back:{},list:[],type:""},this.getDocuments())}}};const Si=d()(Ci,[["render",ki]]);var _i=Si,qi={class:"flex flex-wrap -mx-4"},Di={class:"relative w-auto mx-auto overflow-y-visible flex justify-center w-full pt-10"},$i={class:"font-helvetica-medium text-black text-16 mt-4"};function Ti(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("grey-container"),l=Object(c["y"])("separator"),u=Object(c["y"])("document-list-item"),d=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(d,{label:e.$route.name,withMargin:""},{default:Object(c["D"])((function(){return[Object(c["h"])("div",qi,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(r.segments,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,onClick:function(t){return a.routeToSegment(e)},class:"w-1/2 pt-10 mt-8 cursor-pointer"},[Object(c["h"])(i,{vertical:"",rounded:"12",classes:"mx-4 overflow-y-visible px-6 py-4 pointer-events-none"},{default:Object(c["D"])((function(){return[Object(c["h"])("div",Di,[Object(c["h"])(o,{src:e.preview,class:"absolute bottom-0 w-3/4 sm:w-1/2 blend-mode-darken"},null,8,["src"])]),Object(c["h"])("span",$i,Object(c["A"])(e.name),1)]})),_:2},1024)],8,["onClick"])})),128))]),Object(c["h"])(l),r.catalogue?(Object(c["q"])(),Object(c["e"])(u,{key:0,document:r.catalogue},null,8,["document"])):Object(c["f"])("",!0)]})),_:1},8,["label"])}var Ai={components:{Page:ys,GreyContainer:Oe,IonImg:i["d"],Separator:lr,DocumentListItem:yn},data:function(){return{segments:[],catalogue:null}},computed:{},created:function(){this.getProducts()},methods:{routeToSegment:function(e){var t="/products/".concat(e.id);this.$router.push(t)},getProducts:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,e.$http({method:"GET",url:ct.products.segments,params:{}});case 3:n=t.sent,n&&(n.categories&&(e.segments=n.categories),n.catalogue&&(e.catalogue=n.catalogue)),t.next=11;break;case 7:t.prev=7,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:at.errors.segments,color:"danger"});case 11:case"end":return t.stop()}}),t,null,[[0,7]])})))()}}};const Ii=d()(Ai,[["render",Ti]]);var Ri=Ii,Pi={class:"flex flex-start items-center pointer-events-none px-8 w-full"},Mi={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"};function Li(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("ion-list"),u=Object(c["y"])("separator"),d=Object(c["y"])("document-list-item"),b=Object(c["y"])("accordions-list"),p=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(p,{back:"/products",label:a.updatedSegment.category_name},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedSegment.categories,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4 cursor-pointer",key:t,onClick:function(t){return a.routeTo(e)}},[Object(c["h"])("div",Pi,[Object(c["h"])(i,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 p-2"},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:e.preview},null,8,["src"])]})),_:2},1024),Object(c["h"])("span",Mi,Object(c["A"])(e.name),1)])],8,["onClick"])})),128))]})),_:1}),Object(c["h"])(u),r.segment.thinkclinical.length?(Object(c["q"])(),Object(c["e"])(b,{key:0,classes:"mt-4 px-8",list:a.thinkClinical},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])(d,{"document-type":"#ThinkClinical",document:t},null,8,["document"])]})),_:1},8,["list"])):Object(c["f"])("",!0)]})),_:1},8,["label"])}var Ni={key:0,class:"font-helvetica text-grey text-14 spacing-44 line-24 text-center"},Bi={class:"font-helvetica-medium text-12 text-white spacing-8 line-30 pointer-events-none"},Ei={key:0,class:"flex flex-col"},Vi={class:"flex justify-start items-center"},Ui={key:0,class:"flex flex-col"},zi={key:1,class:"-mt-2 mb-6"};function Fi(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("separator");return Object(c["q"])(),Object(c["e"])("div",{class:[n.classes||""," flex flex-col"]},[a.updatedList&&a.updatedList.length?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])("span",Ni," No items found. ")),a.updatedList&&a.updatedList.length?(Object(c["q"])(),Object(c["e"])("div",{key:1,onClick:t[1]||(t[1]=function(){return a.expandAll&&a.expandAll.apply(a,arguments)}),class:[a.isExpandable?"":"pointer-events-none opacity-50"," bg-black rounded-6 px-2 mb-8 mr-auto cursor-pointer"]},[Object(c["h"])("span",Bi,Object(c["A"])(a.isAllExpanded?"Close all":"Expand all"),1)],2)):Object(c["f"])("",!0),Object(c["x"])(e.$slots,"list",{list:a.updatedList},(function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedList,(function(t,n){return Object(c["q"])(),Object(c["e"])("div",{key:n,class:"flex flex-col"},[t.childs?(Object(c["q"])(),Object(c["e"])("div",Ei,[Object(c["h"])("div",{onClick:function(e){return a.expand(n)},class:"flex justify-between items-center mb-8 cursor-pointer"},[Object(c["h"])("div",Vi,[Object(c["h"])(o,{src:"/assets/button-icons/arrow-".concat(t.expanded?"up":"down",".svg"),class:"width-675"},null,8,["src"]),Object(c["h"])("span",{class:"font-helvetica-bold text-20 spacing-22 line-30 ml-2 text-".concat(t.expanded?"grey":"black")},Object(c["A"])(t.name),3)]),t.count&&t.count>0?(Object(c["q"])(),Object(c["e"])(i,{key:0,bgClass:"".concat(t.expanded?"bg-light-grey":"bg-black"),squareSize:"24",rounded:"6",classes:"flex text-center justify-center items-center"},{default:Object(c["D"])((function(){return[Object(c["h"])("span",{class:[t.expanded?"text-grey":"text-white","font-helvetica-bold text-12"]},Object(c["A"])(t.count),3)]})),_:2},1032,["bgClass"])):Object(c["f"])("",!0)],8,["onClick"]),t.expanded?(Object(c["q"])(),Object(c["e"])("div",Ui,[Object(c["x"])(e.$slots,"childs",{item:t},(function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(t.childs,(function(t,n){return Object(c["q"])(),Object(c["e"])("div",{key:n,class:"mb-4"},[Object(c["x"])(e.$slots,"default",{item:t})])})),128))]}))])):Object(c["f"])("",!0)])):(Object(c["q"])(),Object(c["e"])("div",zi,[Object(c["x"])(e.$slots,"default",{item:t})])),Object(c["h"])(l,{bottomMargin:""})])})),128))]}))],2)}n("cb29");var Gi={components:{IonImg:i["d"],Separator:lr,SquareContainer:Vt},props:{list:{type:Array},classes:{type:[String,Array]}},data:function(){return{expanded:this.list&&this.list.length?new Array(this.list.length).fill(!1):[]}},computed:{isExpandable:function(){for(var e=0;e<this.updatedList.length;e++)if(this.updatedList[e]&&this.updatedList[e].childs)return!0;return!1},updatedList:function(){var e=this;return this.list&&this.list.length?this.list.map((function(t,n){return Object(r["a"])(Object(r["a"])({},t),{},{expanded:e.expanded[n]})})):[]},isAllExpanded:function(){for(var e=0;e<this.updatedList.length;e++)if(!this.updatedList[e].expanded&&this.updatedList[e].childs)return!1;return!0}},methods:{expandAll:function(){for(var e=this.expanded.map((function(e){return e})),t=0;t<e.length;t++)this.isAllExpanded?e[t]=!1:e[t]=!0;this.expanded=e},expand:function(e){var t=this.expanded.map((function(e){return e}));t[e]=!t[e],this.expanded=t}},watch:{list:function(e){e&&e.length&&(this.expanded=new Array(e.length).fill(!1))}}};const Hi=d()(Gi,[["render",Fi]]);var Wi=Hi,Yi={name:"ProductsSegment",components:{Page:ys,IonList:i["f"],IonImg:i["d"],SquareContainer:Vt,Separator:lr,DocumentListItem:yn,AccordionsList:Wi},mixins:[On],data:function(){return{segment:{category_name:"Segment",categories:[],thinkclinical:[]}}},computed:{updatedSegment:function(){return this.segment},thinkClinical:function(){return[{name:"#ThinkClinical",childs:this.segment.thinkclinical}]}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.segment){t.next=15;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:ct.products.segments+"/"+e.$route.params.segment,params:{}});case 4:n=t.sent,e.segment=n,e.logPage(n.category_name+" (Segment)"),t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:at.errors.segmentProducts,color:"danger"});case 13:t.next=18;break;case 15:console.error("No segment id in route"),e.$toast({message:at.errors.segmentProducts,color:"danger"}),e.$router.push("/products");case 18:case"end":return t.stop()}}),t,null,[[1,9]])})))()},methods:{routeTo:function(e){var t="/products/";this.isCategory(e)?t+="category/"+e.id:t+="detail/"+e.id,this.$router.push(t)},isCategory:function(e){return!(!e||"category"!==e.type)}}};const Ji=d()(Yi,[["render",Li]]);var Ki=Ji,Xi={class:"flex flex-start items-center pointer-events-none px-8 w-full"},Qi={class:"flex flex-col justify-between py-2"},Zi={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},el={class:"font-helvetica text-grey text-14 spacing-44 line-24"};function tl(e,t,n,s,r,a){var o=Object(c["y"])("square-container"),i=Object(c["y"])("ion-list"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{back:a.backLink,label:a.updatedCategory.category_name,filters:r.filters,filtersOptions:a.options,onOnFiltersChange:a.updateFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedCategory.list,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4 cursor-pointer",key:t,onClick:function(t){return a.routeTo(e)}},[Object(c["h"])("div",Xi,[Object(c["h"])(o,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 bg-no-repeat bg-contain bg-center",styles:"background-image:url('".concat(e.preview,"')")},null,8,["styles"]),Object(c["h"])("div",Qi,[Object(c["h"])("span",Zi,Object(c["A"])(e.name),1),Object(c["h"])("span",el,Object(c["A"])(e.category),1)])])],8,["onClick"])})),128))]})),_:1})]})),_:1},8,["back","label","filters","filtersOptions","onOnFiltersChange"])}var nl={name:"ProductsCategory",components:{Page:ys,IonList:i["f"],SquareContainer:Vt},mixins:[On],data:function(){return{category:{parent_id:"0",parent_name:"Segment",category_name:"Category",list:[],filters:{}},filtersOptions:{},filters:{order:"",subcategory:""}}},created:function(){this.$route.params.category?(this.categoryID=this.$route.params.category,this.getCategoryProducts()):(console.error("No category id in route"),this.$toast({message:at.errors.categoryProducts,color:"danger"}),this.$router.push("/products"))},computed:{backLink:function(){return this.updatedCategory.parent_id?"/products/"+this.updatedCategory.parent_id:"/products"},updatedCategory:function(){return this.category},options:function(){return this.filtersOptions}},methods:{routeTo:function(e){var t="/products/detail/".concat(e.id);this.$router.push(t)},updateFilters:function(e){this.filters=Object.assign({},e)},getCategoryProducts:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,s;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.prev=0,n=e.categoryID||e.$route.params.category,t.next=4,e.$http({method:"GET",url:ct.products.products+"/"+n,params:e.filters});case 4:s=t.sent,e.category=s,e.filtersOptions=s.filters,e.logPage(s.category_name+" (Product category)"),t.next=14;break;case 10:t.prev=10,t.t0=t["catch"](0),console.error(t.t0),e.$toast({message:at.errors.categoryProducts,color:"danger"});case 14:case"end":return t.stop()}}),t,null,[[0,10]])})))()}},watch:{filters:function(e){this.getCategoryProducts(e)}}};const sl=d()(nl,[["render",tl]]);var rl=sl;function al(e,t,n,s,r,a){var o=Object(c["y"])("Details"),i=Object(c["y"])("Components"),l=Object(c["y"])("Documents");return Object(c["q"])(),Object(c["e"])(c["a"],null,["details"===a.section?(Object(c["q"])(),Object(c["e"])(o,{key:0})):Object(c["f"])("",!0),"components"===a.section?(Object(c["q"])(),Object(c["e"])(i,{key:1})):Object(c["f"])("",!0),"documents"===a.section?(Object(c["q"])(),Object(c["e"])(l,{key:2})):Object(c["f"])("",!0)],64)}var cl={key:0,class:"mx-8 mt-4 flex justify-start"},ol={class:"mx-8 rounded-12 pt-8 relative bg-light-grey flex flex-col overflow-hidden"},il={class:"ml-4 font-helvetica text-16 text-mid-dark-grey spacing-5 line-26"},ll={class:"p-8 mx-8 mb-4 bg-light-grey rounded-12 "};function ul(e,t,n,s,r,a){var o=Object(c["y"])("image-gallery"),i=Object(c["y"])("section-button"),l=Object(c["y"])("detail-section"),u=Object(c["y"])("ion-img"),d=Object(c["y"])("video-gallery"),b=Object(c["y"])("product-layout");return Object(c["q"])(),Object(c["e"])(b,{section:"details",title:a.updatedProduct.name,productID:e.$route.params.id,parentID:a.updatedProduct.parent_id,isFirstLevel:a.updatedProduct.parent_first_level},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{gallery:a.updatedProduct.images},null,8,["gallery"]),Object(c["h"])(l,{label:"Description"},{default:Object(c["D"])((function(){return[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4",style:a.updatedReadMore?"":"display: -webkit-box;-webkit-line-clamp: 3;-webkit-box-orient: vertical;overflow: hidden;text-overflow: ellipsis;",innerHTML:a.formattedDescription},null,12,["innerHTML"]),a.formattedDescription&&a.formattedDescription.length?(Object(c["q"])(),Object(c["e"])("div",cl,[Object(c["h"])(i,{label:a.updatedReadMore?"Read less":"Read more",onOnClick:a.readMore},null,8,["label","onOnClick"])])):Object(c["f"])("",!0)]})),_:1}),a.updatedProduct.benefits&&a.updatedProduct.benefits.length?(Object(c["q"])(),Object(c["e"])(l,{key:0,label:"Benefits"},{default:Object(c["D"])((function(){return[Object(c["h"])("div",ol,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedProduct.benefits,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"flex mb-4 justify-start items-baseline px-8"},[Object(c["h"])(u,{src:"/assets/button-icons/list-icon.svg",class:"width-11"}),Object(c["h"])("span",il,Object(c["A"])(e),1)])})),128)),Object(c["h"])(u,{src:"/assets/hero-2.png",class:"w-full blend-mode-darken lg:-mt-32 -mt-20"})])]})),_:1})):Object(c["f"])("",!0),a.updatedProduct.videos&&a.updatedProduct.videos.length?(Object(c["q"])(),Object(c["e"])(l,{key:1,label:"Videos",noSeparator:""},{default:Object(c["D"])((function(){return[Object(c["h"])(d,{gallery:a.updatedProduct.videos},null,8,["gallery"])]})),_:1})):Object(c["f"])("",!0),a.showDisclaimer?(Object(c["q"])(),Object(c["e"])(l,{key:2,label:"Disclaimer"},{default:Object(c["D"])((function(){return[Object(c["h"])("div",ll,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedProduct.disclaimers,(function(e,t){return Object(c["q"])(),Object(c["e"])("p",{key:t,class:[0===t||"mt-4","font-helvetica text-mid-dark-grey text-12 spacing-38 line-20"]},Object(c["A"])(e),3)})),128))])]})),_:1})):Object(c["f"])("",!0)]})),_:1},8,["title","productID","parentID","isFirstLevel"])}var dl=Object(c["G"])("data-v-60778f50");Object(c["t"])("data-v-60778f50");var bl={class:"image-container pointer-events-none relative bg-black flex justify-center items-center"},pl={key:0,class:"px-8 py-4 font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 m-0"},hl=Object(c["h"])("div",null,"   ",-1);Object(c["r"])();var fl=dl((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("carousel"),l=Object(c["y"])("video-modal");return Object(c["q"])(),Object(c["e"])(c["a"],null,[Object(c["h"])(i,{id:"video-gallery",classes:"-my-8 py-8"},{default:dl((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.gallery,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:[0===t?"ml-8":"",!n.noText||"no-text image-container","bg-white rounded-12 relative mr-4 videogallery-container  overflow-hidden elevated-shadow"],onClick:function(t){return a.openVideo(e)}},[Object(c["h"])("div",bl,[Object(c["h"])(o,{src:e.preview,class:"w-full opacity-50"},null,8,["src"]),Object(c["h"])(o,{src:"/assets/button-icons/play-white.svg",class:"m-auto absolute z-10"})]),n.noText?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])("p",pl,Object(c["A"])(e.label),1))],10,["onClick"])})),128)),hl]})),_:1}),Object(c["h"])(l,{open:r.isVideoOpen,video:r.video,onOnClose:a.closeVideo},null,8,["open","video","onOnClose"])],64)})),ml={components:{Carousel:he,IonImg:i["d"],VideoModal:Mc},props:{gallery:{type:Array},noText:{type:Boolean,default:!1}},data:function(){return{video:null,isVideoOpen:!1}},methods:{openVideo:function(e){this.video=e,this.isVideoOpen=!0},closeVideo:function(){this.isVideoOpen=!1,this.video=null}}};n("670a");const gl=d()(ml,[["render",fl],["__scopeId","data-v-60778f50"]]);var Ol=gl,jl=Object(c["G"])("data-v-230ae7b6");Object(c["t"])("data-v-230ae7b6");var vl={key:0,class:"absolute bottom-0 right-0 mb-4 mr-4 px-2 py-1 rounded-6 flex justify-center items-center bg-black-50 pointer-events-none"},yl={class:"font-helvetica-medium text-12 text-white spacing-38 line-24"},xl=Object(c["h"])("div",null,"   ",-1);Object(c["r"])();var wl=jl((function(e,t,n,s,r,a){var o=Object(c["y"])("carousel"),i=Object(c["y"])("image-modal");return Object(c["q"])(),Object(c["e"])(c["a"],null,[Object(c["h"])(o,{id:n.id,classes:"-my-4 py-8"},{default:jl((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedGallery,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:[0===t?a.margin:"",n.chatGallery?"chat-gallery mr-8 flex justify-center items-center":"mr-4","bg-white rounded-12 relative gallery-container overflow-hidden flex"]},[Object(c["h"])("img",{src:e.image?e.image:e.preview,class:"h-full w-auto pointer-events-none mx-auto"},null,8,["src"]),n.gallery.length&&n.gallery.length>1?(Object(c["q"])(),Object(c["e"])("div",vl,[Object(c["h"])("span",yl,Object(c["A"])("".concat(t+1," / ").concat(n.gallery.length)),1)])):Object(c["f"])("",!0)],2)})),128)),xl]})),_:1},8,["id"]),Object(c["h"])(i,{open:r.isOpenImage,index:a.computedIndex,gallery:a.updatedGallery,onOnClose:a.closeImage},null,8,["open","index","gallery","onOnClose"])],64)})),kl={components:{Carousel:he,ImageModal:vc},props:{gallery:{type:Array},initMargin:{type:String},id:{type:String},chatGallery:{type:Boolean}},data:function(){return{isOpenImage:!1,index:0}},computed:{margin:function(){return this.initMargin||"ml-8"},computedIndex:function(){return this.index},updatedGallery:function(){var e=this.gallery?this.gallery.map((function(e){return"string"===typeof e?{image:e}:{image:e.image||e.preview}})):[];return e}},methods:{openImage:function(e){this.index=e,this.isOpenImage=!0},closeImage:function(){this.index=0,this.isOpenImage=!1}}};n("60e9");const Cl=d()(kl,[["render",wl],["__scopeId","data-v-230ae7b6"]]);var Sl=Cl,_l=Object(c["h"])("div",null," ",-1);function ql(e,t,n,s,r,a){var o=Object(c["y"])("section-button"),i=Object(c["y"])("carousel"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{label:n.title,back:a.backLink},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{id:"sections-carousel",classes:"pt-4 -my-4 pb-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(r.sections,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,active:n.section===e.path,classes:[0===t?"ml-8":""," mr-4"],label:e.label,onOnClick:function(t){return a.routeToSection(e.path)}},null,8,["active","classes","label","onOnClick"])})),128)),_l]})),_:1}),Object(c["x"])(e.$slots,"default")]})),_:3},8,["label","back"])}var Dl={components:{Page:ys,Carousel:he,SectionButton:nr},props:{title:String,productID:[Number,String],section:String,parentID:[Number,String],isFirstLevel:Boolean},data:function(){return{sections:[{label:"Details",path:"details"},{label:"Components",path:"components"},{label:"Documents",path:"documents"}]}},computed:{backLink:function(){return this.isFirstLevel?"/products/".concat(this.parentID):"/products/category/".concat(this.parentID)}},methods:{routeToSection:function(e){var t="/products/detail/".concat(this.productID,"/");e&&"details"!==e&&(t+=e),this.$router.push(t)}}};const $l=d()(Dl,[["render",ql]]);var Tl=$l,Al={name:"Details",components:{IonImg:i["d"],ImageGallery:Sl,VideoGallery:Ol,SectionButton:nr,DetailSection:mr,ProductLayout:Tl},mixins:[On],data:function(){return{isReadMore:!1,product:{}}},computed:{updatedProduct:function(){return this.product},updatedReadMore:function(){return this.isReadMore},formattedDescription:function(){return this.updatedProduct.description&&this.updatedProduct.description.length?this.sanitizeManageText(this.updatedProduct.description):""},showDisclaimer:function(){return this.updatedProduct.disclaimers&&this.updatedProduct.disclaimers.length}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=16;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:ct.products.product+"/"+e.$route.params.id+"/details",params:{}});case 4:n=t.sent,e.product=n,setTimeout((function(){e.cleanParagraphs()}),500),e.logPage(n.name+" (Product details)"),t.next=14;break;case 10:t.prev=10,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:at.errors.productDetail,color:"danger"});case 14:t.next=19;break;case 16:console.error("No product id in route"),e.$toast({message:at.errors.productDetail,color:"danger"}),e.$router.back();case 19:case"end":return t.stop()}}),t,null,[[1,10]])})))()},methods:{readMore:function(){this.isReadMore=!this.updatedReadMore}}};const Il=d()(Al,[["render",ul]]);var Rl=Il;function Pl(e,t,n,s,r,a){var o=Object(c["y"])("document-list-item"),i=Object(c["y"])("accordions-list"),l=Object(c["y"])("product-layout");return Object(c["q"])(),Object(c["e"])(l,{section:"documents",title:a.updatedProduct.name,productID:e.$route.params.id,parentID:a.updatedProduct.parent_id,isFirstLevel:a.updatedProduct.parent_first_level},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{classes:"mt-4 px-8",list:a.computedAttachments},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])(o,{"document-type":"Product Doc",document:t},null,8,["document"])]})),_:1},8,["list"])]})),_:1},8,["title","productID","parentID","isFirstLevel"])}var Ml={name:"Documents",components:{ProductLayout:Tl,AccordionsList:Wi,DocumentListItem:yn},mixins:[On],data:function(){return{product:{}}},computed:{updatedProduct:function(){return this.product},computedAttachments:function(){return this.updatedProduct&&this.updatedProduct.attachments?this.updatedProduct.attachments.map((function(e){return{name:e.name,childs:e.files,count:e.files.length}})):[]}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=15;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:ct.products.product+"/"+e.$route.params.id+"/attachments",params:{}});case 4:n=t.sent,e.product=n,e.logPage(n.name+" (Product documents)"),t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:at.errors.productDetail,color:"danger"});case 13:t.next=18;break;case 15:console.error("No product id in route"),e.$toast({message:at.errors.productDetail,color:"danger"}),e.$router.back();case 18:case"end":return t.stop()}}),t,null,[[1,9]])})))()}};const Ll=d()(Ml,[["render",Pl]]);var Nl=Ll,Bl={class:"flex flex-start items-center pointer-events-none w-full"},El={class:"flex flex-col justify-between py-2"},Vl={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Ul={class:"font-helvetica text-grey text-14 spacing-44 line-24"};function zl(e,t,n,s,r,a){var o=Object(c["y"])("square-container"),i=Object(c["y"])("accordions-list"),l=Object(c["y"])("product-layout");return Object(c["q"])(),Object(c["e"])(l,{section:"components",title:a.updatedProduct.name,productID:e.$route.params.id,parentID:a.updatedProduct.parent_id,isFirstLevel:a.updatedProduct.parent_first_level},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{classes:"mt-4 px-8",list:a.updatedProduct.components},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])("div",{class:"flex flex-row justify-between items-center bg-transparent",onClick:function(e){return a.routeToComponent(t)}},[Object(c["h"])("div",Bl,[Object(c["h"])(o,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 bg-no-repeat bg-contain bg-center",styles:"background-image:url('".concat(t.preview,"')")},null,8,["styles"]),Object(c["h"])("div",El,[Object(c["h"])("span",Vl,Object(c["A"])(t.title),1),Object(c["h"])("span",Ul,Object(c["A"])(t.subtitle),1)])])],8,["onClick"])]})),_:1},8,["list"])]})),_:1},8,["title","productID","parentID","isFirstLevel"])}var Fl={name:"Components",components:{ProductLayout:Tl,AccordionsList:Wi,SquareContainer:Vt},mixins:[On],data:function(){return{product:{}}},computed:{updatedProduct:function(){return this.product}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=15;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:ct.products.product+"/"+e.$route.params.id+"/components",params:{}});case 4:n=t.sent,e.product=n,e.logPage(n.name+" (Product components)"),t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:at.errors.productDetail,color:"danger"});case 13:t.next=18;break;case 15:console.error("No product id in route"),e.$toast({message:at.errors.productDetail,color:"danger"}),e.$router.back();case 18:case"end":return t.stop()}}),t,null,[[1,9]])})))()},methods:{routeToComponent:function(e){var t="/products/detail/component/"+e.id;this.$router.push(t)}}};const Gl=d()(Fl,[["render",zl]]);var Hl=Gl,Wl={name:"ProductsDetail",components:{Details:Rl,Documents:Nl,Components:Hl},data:function(){return{initSection:"details"}},computed:{section:function(){return this.$route.meta&&this.$route.meta.section?this.$route.meta.section:this.initSection}}};const Yl=d()(Wl,[["render",al]]);var Jl=Yl,Kl=Object(c["G"])("data-v-76e57e36");Object(c["t"])("data-v-76e57e36");var Xl={class:"bg-white rounded-12 relative gallery-container overflow-hidden"},Ql={class:"flex my-8 justify-between items-start"},Zl={class:"flex flex-col"},eu=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-20"},"Material",-1),tu={class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26"},nu={class:"flex flex-col"},su=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-20"},"Sterile",-1),ru={class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26"},au={key:0,class:"bg-light-grey rounded-12 p-4 flex flex-col mb-8"},cu=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-20"},"Notes",-1),ou={class:"m-0 pt-4 font-helvetica text-16 text-mid-dark-grey spacing-1 line-24"},iu={class:"flex justify-start items-stretch"},lu={class:"flex flex-col justify-between items-start"},uu={class:"font-helvetica-medium text-dark-grey text-16 spacing-4 line-24"},du={class:"font-helvetica text-grey text-14 spacing-44 line-24"},bu={key:0,class:"bg-light-red rounded-6 px-2 ml-auto"},pu=Object(c["h"])("span",{class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"},"upon request",-1);Object(c["r"])();var hu=Kl((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("separator"),l=Object(c["y"])("detail-section"),u=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(u,{withMargin:"",label:a.updatedProduct.title,aboveTitle:a.aboveTitle,back:a.backPath},{default:Kl((function(){return[Object(c["h"])("div",Xl,[Object(c["h"])(o,{src:a.updatedProduct.gallery&&a.updatedProduct.gallery[0]?a.updatedProduct.gallery[0].big:"",class:"h-full w-auto pointer-events-none"},null,8,["src"])]),Object(c["h"])("div",Ql,[Object(c["h"])("div",Zl,[eu,Object(c["h"])("span",tu,Object(c["A"])(a.updatedProduct.material),1)]),Object(c["h"])("div",nu,[su,Object(c["h"])("span",ru,Object(c["A"])(a.updatedProduct.sterile?"Sterile":"Not sterile"),1)])]),a.updatedProduct.notes&&a.updatedProduct.notes.length?(Object(c["q"])(),Object(c["e"])("div",au,[cu,Object(c["h"])("p",ou,Object(c["A"])(a.updatedProduct.notes),1)])):Object(c["f"])("",!0),Object(c["h"])(i,{noYMargin:""}),(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedProduct.variants,(function(e,t){return Object(c["q"])(),Object(c["e"])(l,{key:t,label:e.title,noPadding:""},{default:Kl((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(e.variants,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"flex mb-8 justify-between items-center"},[Object(c["h"])("div",iu,[Object(c["h"])("div",{class:[e.upon_request?"bg-red":"bg-light-grey"," width-4 rounded-2 mr-4"]},null,2),Object(c["h"])("div",lu,[Object(c["h"])("span",uu,Object(c["A"])(e.size),1),Object(c["h"])("span",du,Object(c["A"])(e.code),1)])]),e.upon_request?(Object(c["q"])(),Object(c["e"])("div",bu,[pu])):Object(c["f"])("",!0)])})),128))]})),_:2},1032,["label"])})),128))]})),_:1},8,["label","aboveTitle","back"])})),fu={name:"ComponentDetail",components:{IonImg:i["d"],Page:ys,Separator:lr,DetailSection:mr},mixins:[On],data:function(){return{product:{}}},computed:{updatedProduct:function(){return this.product},aboveTitle:function(){return this.updatedProduct.parent_name&&this.updatedProduct.parent_name.length?this.updatedProduct.parent_name+" /":null},backPath:function(){var e=this.updatedProduct.parent_id;return"/products/detail/".concat(e,"/components")}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=15;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:ct.products.component+"/"+e.$route.params.id,params:{}});case 4:n=t.sent,e.product=n,e.logPage(n.title+" (Component detail)"),t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:at.errors.componentDetail,color:"danger"});case 13:t.next=18;break;case 15:console.error("No component id in route"),e.$toast({message:at.errors.componentDetail,color:"danger"}),e.$router.back();case 18:case"end":return t.stop()}}),t,null,[[1,9]])})))()}};n("e27d");const mu=d()(fu,[["render",hu],["__scopeId","data-v-76e57e36"]]);var gu=mu,Ou={class:"flex flex-start items-start pointer-events-none px-8 w-full"},ju={class:"flex flex-col justify-between pb-2"},vu={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},yu={class:"font-helvetica text-grey text-14 spacing-44 line-24"},xu={class:"flex flex-row"},wu={class:"bg-light-red rounded-6 px-2 mr-2"},ku={class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"},Cu={key:0,class:"bg-red rounded-6 px-2"},Su=Object(c["h"])("span",{class:"font-helvetica-medium text-12 text-white spacing-8 line-30 mt-auto pointer-events-none"}," Event ",-1),_u={key:1,class:"bg-black rounded-6 px-2"},qu=Object(c["h"])("span",{class:"font-helvetica-medium text-12 text-white spacing-8 line-30 mt-auto pointer-events-none"}," Congress ",-1);function Du(e,t,n,s,r,a){var o=Object(c["y"])("square-container"),i=Object(c["y"])("ion-list"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{label:"Congresses and Events",back:"/home",filters:r.filters,filtersOptions:a.options,onOnFiltersChange:a.updateFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(r.congresses,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4",key:t,onClick:function(t){return a.routeToCongress(e)}},[Object(c["h"])("div",Ou,[Object(c["h"])(o,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 bg-no-repeat bg-cover bg-center",styles:"background-image:url('".concat(e.preview,"')")},null,8,["styles"]),Object(c["h"])("div",ju,[Object(c["h"])("span",vu,Object(c["A"])(e.name),1),Object(c["h"])("span",yu,Object(c["A"])(e.subtitle),1),Object(c["h"])("div",xu,[Object(c["h"])("div",wu,[Object(c["h"])("span",ku,Object(c["A"])(e.dates),1)]),"event"===e.type?(Object(c["q"])(),Object(c["e"])("div",Cu,[Su])):(Object(c["q"])(),Object(c["e"])("div",_u,[qu]))])])])],8,["onClick"])})),128))]})),_:1})]})),_:1},8,["filters","filtersOptions","onOnFiltersChange"])}var $u={components:{Page:ys,IonList:i["f"],SquareContainer:Vt},data:function(){return{congresses:[],filtersOptions:{},filters:{year:(new Date).getFullYear()}}},computed:{options:function(){return this.filtersOptions}},created:function(){this.$route.query&&this.$route.query.year&&(this.filters.year=parseInt(this.$route.query.year)),this.getCongressesList()},methods:{routeToCongress:function(e){var t="/congresses/".concat(e.id);this.$router.push(t)},updateFilters:function(e){this.filters=Object.assign({},e)},getCongressesList:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return e.$router.push({path:e.$route.path,query:e.filters}),t.prev=1,t.next=4,e.$http({method:"GET",url:ct.congresses.list,params:e.filters});case 4:n=t.sent,e.congresses=n.list,e.filtersOptions=n.filters||{},t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:at.errors.congresses,color:"danger"});case 13:case"end":return t.stop()}}),t,null,[[1,9]])})))()}},watch:{filters:function(e){this.$router.push({path:this.$route.path,query:e}),this.getCongressesList(e)}}};const Tu=d()($u,[["render",Du]]);var Au=Tu;function Iu(e,t,n,s,r,a){var o=Object(c["y"])("Info"),i=Object(c["y"])("Details"),l=Object(c["y"])("Hotels"),u=Object(c["y"])("DayByDay"),d=Object(c["y"])("Activities"),b=Object(c["y"])("KeyMessages"),p=Object(c["y"])("Media"),h=Object(c["y"])("Downloads"),f=Object(c["y"])("Contacts"),m=Object(c["y"])("congress-layout");return Object(c["q"])(),Object(c["e"])(m,{section:a.updatedSection,sections:a.sectionsList,title:a.title,onChangeSection:a.selectSection},{default:Object(c["D"])((function(){return["info"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(o,{key:0,congressType:a.congressType,congress:a.updatedCongress.info},null,8,["congressType","congress"])):Object(c["f"])("",!0),"details"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(i,{key:1,isCongress:"",congressType:a.congressType,congress:a.updatedCongress.details},null,8,["congressType","congress"])):Object(c["f"])("",!0),"hotel"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(l,{key:2,isCongress:"",congressType:a.congressType,congress:a.updatedCongress.hotel},null,8,["congressType","congress"])):Object(c["f"])("",!0),"day"===r.section?(Object(c["q"])(),Object(c["e"])(u,{key:3,congressType:a.congressType,congress:a.updatedCongress.day},null,8,["congressType","congress"])):Object(c["f"])("",!0),"activities"===r.section?(Object(c["q"])(),Object(c["e"])(d,{key:4,congressType:a.congressType,congress:a.updatedCongress.activities},null,8,["congressType","congress"])):Object(c["f"])("",!0),"messages"===r.section?(Object(c["q"])(),Object(c["e"])(b,{key:5,congressType:a.congressType,congress:a.updatedCongress.messages},null,8,["congressType","congress"])):Object(c["f"])("",!0),"media"===r.section?(Object(c["q"])(),Object(c["e"])(p,{key:6,congressType:a.congressType,congress:a.updatedCongress.media},null,8,["congressType","congress"])):Object(c["f"])("",!0),"download"===r.section?(Object(c["q"])(),Object(c["e"])(h,{key:7,congressType:a.congressType,congress:a.updatedCongress.download},null,8,["congressType","congress"])):Object(c["f"])("",!0),"contacts"===r.section?(Object(c["q"])(),Object(c["e"])(f,{key:8,isCongress:"",congressType:a.congressType,congress:a.updatedCongress.contacts},null,8,["congressType","congress"])):Object(c["f"])("",!0)]})),_:1},8,["section","sections","title","onChangeSection"])}var Ru=Object(c["G"])("data-v-40ad3784");Object(c["t"])("data-v-40ad3784");var Pu={class:"flex flex-col"},Mu={class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26 px-8 mb-4"},Lu={class:"flex flex-col bg-light-red rounded-12 p-6 mx-8"},Nu={class:"flex justify-between items-start mb-4"},Bu={class:"flex flex-col"},Eu=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"From",-1),Vu={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},Uu={class:"font-helvetica text-14 text-red spacing-2 line-24"},zu={class:"flex flex-col"},Fu=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"To",-1),Gu={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},Hu={class:"font-helvetica text-14 text-red spacing-2 line-24"},Wu={class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28"};Object(c["r"])();var Yu=Ru((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("big-button"),l=Object(c["y"])("square-container"),u=Object(c["y"])("detail-section"),d=Object(c["y"])("video-modal");return Object(c["q"])(),Object(c["e"])(c["a"],null,[Object(c["h"])("div",Pu,[a.introVideo?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:"bg-black rounded-12 relative mx-8 gallery-container elevated-shadow overflow-hidden flex justify-center items-center cursor-pointer",onClick:t[1]||(t[1]=function(){return a.openVideo&&a.openVideo.apply(a,arguments)})},[Object(c["h"])(o,{src:a.introVideo.preview_image,class:"w-full opacity-50 pointer-events-none"},null,8,["src"]),Object(c["h"])(o,{src:"/assets/button-icons/play-white.svg",class:"m-auto absolute z-10 elevated-shadow pointer-events-none"})])):(Object(c["q"])(),Object(c["e"])("div",{key:1,class:"ml-8 bg-white rounded-12 relative mr-4 gallery-container elevated-shadow overflow-hidden bg-contain bg-no-repeat bg-center",style:"background-image:url('".concat(a.updatedCongress.image,"')")},null,4)),Object(c["h"])(u,{label:a.updatedCongress.name},{default:Ru((function(){return[Object(c["h"])("span",Mu,Object(c["A"])(a.updatedCongress.subtitle),1),Object(c["h"])("div",Lu,[Object(c["h"])("div",Nu,[Object(c["h"])("div",Bu,[Eu,Object(c["h"])("span",Vu,Object(c["A"])(a.updatedCongress.first_date),1),Object(c["h"])("span",Uu,Object(c["A"])(a.updatedCongress.first_date_time),1)]),Object(c["h"])("div",zu,[Fu,Object(c["h"])("span",Gu,Object(c["A"])(a.updatedCongress.last_date),1),Object(c["h"])("span",Hu,Object(c["A"])(a.updatedCongress.last_date_time),1)])]),a.updatedCongress.save_event&&a.updatedCongress.save_event.length?(Object(c["q"])(),Object(c["e"])(i,{key:0,label:"Save in calendar",onOnClick:a.saveEvent},null,8,["onOnClick"])):Object(c["f"])("",!0)]),a.updatedCongress.link&&a.updatedCongress.link.length?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:"flex mt-4 items-center relative mx-8",onClick:t[2]||(t[2]=function(){return a.openLink&&a.openLink.apply(a,arguments)})},[Object(c["h"])(l,{bgClass:"bg-light-grey",squareSize:"44",classes:"pointer-events-none flex"},{default:Ru((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/open-link.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("span",Wu,Object(c["A"])(a.updatedCongress.link),1)])):Object(c["f"])("",!0)]})),_:1},8,["label"]),a.formattedDescription&&a.formattedDescription.length?(Object(c["q"])(),Object(c["e"])(u,{key:2,label:"Description",noSeparator:""},{default:Ru((function(){return[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.formattedDescription},null,8,["innerHTML"])]})),_:1})):Object(c["f"])("",!0)]),Object(c["h"])(d,{code:"",video:a.introVideo,open:r.isVideoOpen,onOnClose:a.closeVideo},null,8,["video","open","onOnClose"])],64)})),Ju={components:{IonImg:i["d"],BigButton:en,VideoModal:Mc,DetailSection:mr,SquareContainer:Vt},mixins:[On],props:{congress:{type:Object},congressType:{type:String}},data:function(){return{isReadMore:!0,isVideoOpen:!1}},computed:{updatedCongress:function(){if(this.congress&&this.congress.content){var e=Object.assign({},this.congress.content);return e}return{}},updatedReadMore:function(){return this.isReadMore},formattedDescription:function(){return this.updatedReadMore?this.updatedCongress.description:this.updatedCongress.description_short},introVideo:function(){var e,t;return null===(e=this.congress)||void 0===e||null===(t=e.content)||void 0===t?void 0:t.intro_video}},methods:{readMore:function(){this.isReadMore=!this.updatedReadMore},saveEvent:function(){this.logEvent(this.congressType,"save in Calendar","Congress ".concat(this.updatedCongress.name)),window.open(this.updatedCongress.save_event)},openLink:function(){window.open(this.updatedCongress.link)},openVideo:function(){this.isVideoOpen=!0},closeVideo:function(){this.isVideoOpen=!1}}};n("7b8e");const Ku=d()(Ju,[["render",Yu],["__scopeId","data-v-40ad3784"]]);var Xu=Ku,Qu={class:"flex flex-col"},Zu={key:0,class:"px-8 flex flex-col"},ed={key:0,class:"font-helvetica-bold text-20 spacing-22 line-30 text-black block mb-2"},td={key:3,class:"font-helvetica-bold text-20 spacing-22 line-30 text-black block mb-2"};function nd(e,t,n,s,r,a){var o=Object(c["y"])("multimedia-images"),i=Object(c["y"])("multimedia-videos"),l=Object(c["y"])("accordions-list"),u=Object(c["y"])("separator");return Object(c["q"])(),Object(c["e"])("div",Qu,[Object(c["h"])(l,{classes:"px-8 w-full",list:a.accordions},{childs:Object(c["D"])((function(e){return[Object(c["h"])(o,{images:e.item.childs.images,class:"mb-4"},null,8,["images"]),Object(c["h"])(i,{code:"",videos:e.item.childs.videos},null,8,["videos"])]})),_:1},8,["list"]),a.showImages||a.showVideos?(Object(c["q"])(),Object(c["e"])("div",Zu,[a.showImages?(Object(c["q"])(),Object(c["e"])("span",ed," Images ")):Object(c["f"])("",!0),a.showImages?(Object(c["q"])(),Object(c["e"])(o,{key:1,images:a.generalImages,class:"mb-2"},null,8,["images"])):Object(c["f"])("",!0),a.showImages&&a.showVideos?(Object(c["q"])(),Object(c["e"])(u,{key:2,bottomMargin:""})):Object(c["f"])("",!0),a.showVideos?(Object(c["q"])(),Object(c["e"])("span",td," Videos ")):Object(c["f"])("",!0),a.showVideos?(Object(c["q"])(),Object(c["e"])(i,{key:4,code:"",videos:a.generalVideos},null,8,["videos"])):Object(c["f"])("",!0)])):Object(c["f"])("",!0)])}var sd={components:{Separator:lr,AccordionsList:Wi,MultimediaImages:wc,MultimediaVideos:Bc},props:{congress:Object},data:function(){return{isOpenImage:!1}},computed:{accordions:function(){var e,t,n;return(null===(e=this.congress)||void 0===e||null===(t=e.content)||void 0===t||null===(n=t.accordions)||void 0===n?void 0:n.map((function(e){return{name:e.title,childs:{images:e.images,videos:e.videos},count:e.images.length+e.videos.length}})))||[]},generalImages:function(){var e,t;return(null===(e=this.congress)||void 0===e||null===(t=e.content)||void 0===t?void 0:t.general_images)||[]},generalVideos:function(){var e,t;return(null===(e=this.congress)||void 0===e||null===(t=e.content)||void 0===t?void 0:t.general_videos)||[]},showImages:function(){return this.generalImages&&this.generalImages.length},showVideos:function(){return this.generalVideos&&this.generalVideos.length}}};const rd=d()(sd,[["render",nd]]);var ad=rd,cd=Object(c["G"])("data-v-2f33de23");Object(c["t"])("data-v-2f33de23");var od={class:"flex flex-col"},id={class:"flex flex-col justify-start items-start mb-8 px-8"},ld=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-20"}," Location ",-1),ud=Object(c["h"])("span",{class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28"}," View on Google Maps ",-1),dd={class:"flex flex-col bg-light-red rounded-12 p-6 mx-8"},bd={class:"flex justify-between items-start"},pd={class:"flex flex-col"},hd=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-2"}," In ",-1),fd={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},md={class:"flex flex-col"},gd=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-2"}," Out ",-1),Od={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},jd={key:1,class:"mx-8 mt-8 flex justify-start"},vd={key:0,class:"flex flex-col bg-light-red rounded-12 p-6 mx-8"},yd={class:"flex justify-between items-start mb-4"},xd={class:"flex flex-col"},wd={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},kd={key:0,class:"font-helvetica text-14 text-red spacing-2 line-24"},Cd={class:"flex flex-col"},Sd={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},_d={key:0,class:"font-helvetica text-14 text-red spacing-2 line-24"},qd={key:1,class:"mx-8 flex justify-start"};Object(c["r"])();var Dd=cd((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("section-button"),u=Object(c["y"])("detail-section"),d=Object(c["y"])("big-button");return Object(c["q"])(),Object(c["e"])("div",od,[Object(c["h"])("div",{class:"ml-8 bg-white rounded-12 relative mr-4 gallery-container elevated-shadow overflow-hidden bg-no-repeat bg-cover bg-center",style:"background-image:url('".concat(a.updatedHotel.image,"'")},null,4),Object(c["h"])(u,{label:a.updatedHotel.name},{default:cd((function(){return[Object(c["h"])("div",id,[ld,Object(c["h"])("span",{class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26",innerHTML:a.updatedHotel.address},null,8,["innerHTML"]),a.updatedHotel.googlemaps?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:"flex relative mt-2 mb-4 items-center",onClick:t[1]||(t[1]=function(e){return a.openLink(a.updatedHotel.googlemaps)})},[Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:cd((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/pin.svg",class:"m-auto"})]})),_:1}),ud])):Object(c["f"])("",!0)]),Object(c["h"])("div",dd,[Object(c["h"])("div",bd,[Object(c["h"])("div",pd,[hd,Object(c["h"])("span",fd,Object(c["A"])(a.updatedHotel.checkin_date),1)]),Object(c["h"])("div",md,[gd,Object(c["h"])("span",Od,Object(c["A"])(a.updatedHotel.checkout_date),1)])])]),a.hotelDescription&&a.hotelDescription.length?(Object(c["q"])(),Object(c["e"])("p",{key:0,class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mt-8",style:a.updatedReadMore.hotel?"":"display: -webkit-box;-webkit-line-clamp: 3;-webkit-box-orient: vertical;overflow: hidden;text-overflow: ellipsis;",innerHTML:a.hotelDescription},null,12,["innerHTML"])):Object(c["f"])("",!0),a.hotelDescription&&a.hotelDescription.length&&a.hotelDescription.length>400?(Object(c["q"])(),Object(c["e"])("div",jd,[Object(c["h"])(l,{label:a.updatedReadMore.hotel?"Read less":"Read more",onOnClick:t[2]||(t[2]=function(e){return a.readMore("hotel")})},null,8,["label"])])):Object(c["f"])("",!0)]})),_:1},8,["label"]),a.updatedTransfer&&a.updatedTransfer.transfer_date&&a.updatedTransfer.transfer_return_date||a.transferDescription?(Object(c["q"])(),Object(c["e"])(u,{key:0,label:"Transfer",noSeparator:""},{default:cd((function(){return[a.updatedTransfer.transfer_date&&a.updatedTransfer.transfer_return_date?(Object(c["q"])(),Object(c["e"])("div",vd,[Object(c["h"])("div",yd,[Object(c["h"])("div",xd,[Object(c["h"])("span",wd,Object(c["A"])(a.updatedTransfer.transfer_date),1),a.showTransferTime?(Object(c["q"])(),Object(c["e"])("span",kd,Object(c["A"])(a.updatedTransfer.transfer_time?"".concat(a.updatedTransfer.transfer_time," "):""),1)):Object(c["f"])("",!0)]),Object(c["h"])("div",Cd,[Object(c["h"])("span",Sd,Object(c["A"])(a.updatedTransfer.transfer_return_date),1),a.showTransferTime?(Object(c["q"])(),Object(c["e"])("span",_d,Object(c["A"])(a.updatedTransfer.transfer_return_time?"".concat(a.updatedTransfer.transfer_return_time," "):""),1)):Object(c["f"])("",!0)])]),Object(c["h"])(d,{label:"Save in calendar",onOnClick:t[3]||(t[3]=function(e){return a.saveEvent("transfer")})})])):Object(c["f"])("",!0),Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-8",style:a.updatedReadMore.transfer?"":"display: -webkit-box;-webkit-line-clamp: 3;-webkit-box-orient: vertical;overflow: hidden;text-overflow: ellipsis;",innerHTML:a.transferDescription},null,12,["innerHTML"]),a.transferDescription&&a.transferDescription.length&&a.transferDescription.length>400?(Object(c["q"])(),Object(c["e"])("div",qd,[Object(c["h"])(l,{label:a.updatedReadMore.transfer?"Read less":"Read more",onOnClick:t[4]||(t[4]=function(e){return a.readMore("transfer")})},null,8,["label"])])):Object(c["f"])("",!0)]})),_:1})):Object(c["f"])("",!0)])})),$d={components:{SectionButton:nr,DetailSection:mr,IonImg:i["d"],BigButton:en,SquareContainer:Vt},mixins:[On],props:{congress:{type:Object},congressType:{type:String}},data:function(){return{isReadMore:{hotel:!1,transfer:!1}}},computed:{updatedCongress:function(){var e=Object.assign({},this.congress.content);return e},updatedHotel:function(){return this.updatedCongress&&this.updatedCongress.hotel?this.updatedCongress.hotel:{}},updatedTransfer:function(){return this.updatedCongress&&this.updatedCongress.transfer?this.updatedCongress.transfer:{}},showTransferTime:function(){return!(!this.updatedTransfer||!this.updatedTransfer.transfer_return_time&&!this.updatedTransfer.transfer_time)},updatedReadMore:function(){return this.isReadMore},hotelDescription:function(){return this.updatedHotel.info||""},transferDescription:function(){return this.updatedTransfer.info||""}},methods:{openLink:function(e){window.open(e)},readMore:function(e){var t=Object.assign({},this.isReadMore);t[e]=!t[e],this.isReadMore=t},saveEvent:function(e){this.logEvent(this.congressType,"save in Calendar","Congress ".concat(e||"hotel")),"transfer"===e?window.open(this.updatedTransfer.save_event):window.open(this.updatedHotel.save_event)}}};n("2c3a");const Td=d()($d,[["render",Dd],["__scopeId","data-v-2f33de23"]]);var Ad=Td,Id={class:"flex flex-col"},Rd={class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28"},Pd={class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28"},Md={class:"flex flex-col bg-light-red rounded-12 p-6 mx-8"},Ld={class:"flex justify-between items-start mb-4"},Nd={class:"flex flex-col"},Bd=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"From",-1),Ed={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},Vd={class:"font-helvetica text-14 text-red spacing-2 line-24"},Ud={class:"flex flex-col"},zd=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"To",-1),Fd={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},Gd={class:"font-helvetica text-14 text-red spacing-2 line-24"},Hd={class:"mt-8"};function Wd(e,t,n,s,r,a){var o=Object(c["y"])("image-gallery"),i=Object(c["y"])("ion-img"),l=Object(c["y"])("square-container"),u=Object(c["y"])("detail-section"),d=Object(c["y"])("big-button");return Object(c["q"])(),Object(c["e"])("div",Id,[Object(c["h"])(o,{gallery:a.updatedVenueGallery},null,8,["gallery"]),Object(c["h"])(u,{label:"".concat(n.isCongress?"Congress ":"","Venue")},{default:Object(c["D"])((function(){return[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.congressDescription},null,8,["innerHTML"]),a.congressMaps&&a.congressMaps.link&&a.congressMaps.link.length?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:"flex relative mb-4 mx-8 items-center",onClick:t[1]||(t[1]=function(e){return a.openLink(a.congressMaps.link)})},[Object(c["h"])(l,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/pin.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("span",Rd,Object(c["A"])(a.congressMaps.label),1)])):Object(c["f"])("",!0),a.congressDownloadMaps&&a.congressDownloadMaps.link&&a.congressDownloadMaps.link.length?(Object(c["q"])(),Object(c["e"])("div",{key:1,class:"flex relative mx-8 items-center",onClick:t[2]||(t[2]=function(e){return a.openLink(a.congressDownloadMaps.link)})},[Object(c["h"])(l,{bgClass:"bg-light-grey",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/download.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("span",Pd,Object(c["A"])(a.congressDownloadMaps.label),1)])):Object(c["f"])("",!0)]})),_:1},8,["label"]),a.areThereCongressDates?(Object(c["q"])(),Object(c["e"])(u,{key:0,label:"Timing & Dates"},{default:Object(c["D"])((function(){return[Object(c["h"])("div",Md,[Object(c["h"])("div",Ld,[Object(c["h"])("div",Nd,[Bd,Object(c["h"])("span",Ed,Object(c["A"])(a.congressDates.from_date),1),Object(c["h"])("span",Vd,Object(c["A"])(a.congressDates.from_time),1)]),Object(c["h"])("div",Ud,[zd,Object(c["h"])("span",Fd,Object(c["A"])(a.congressDates.to_date),1),Object(c["h"])("span",Gd,Object(c["A"])(a.congressDates.to_time),1)])]),a.congressDates.save_event&&a.congressDates.save_event.length?(Object(c["q"])(),Object(c["e"])(d,{key:0,label:"Save in calendar",onOnClick:t[3]||(t[3]=function(e){return a.saveInCalendar(a.congressDates)})})):Object(c["f"])("",!0)]),Object(c["h"])("div",Hd,[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.formattedDescriptionDates},null,8,["innerHTML"])])]})),_:1})):Object(c["f"])("",!0),a.isLimaBooth?(Object(c["q"])(),Object(c["e"])(u,{key:1,label:"Lima Booth"},{default:Object(c["D"])((function(){return[a.updatedCongress.lima_booth&&a.updatedCongress.lima_booth.gallery&&a.updatedCongress.lima_booth.gallery.length?(Object(c["q"])(),Object(c["e"])(o,{key:0,id:"booth",gallery:a.updatedCongress.lima_booth&&a.updatedCongress.lima_booth.gallery?a.updatedCongress.lima_booth.gallery:[]},null,8,["gallery"])):Object(c["f"])("",!0),Object(c["h"])("div",{class:a.updatedCongress.lima_booth&&a.updatedCongress.lima_booth.gallery&&a.updatedCongress.lima_booth.gallery.length?"mt-8":""},[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.formattedDescriptionBooth},null,8,["innerHTML"])],2)]})),_:1})):Object(c["f"])("",!0),a.formattedDescriptionInfo&&a.formattedDescriptionInfo.length?(Object(c["q"])(),Object(c["e"])(u,{key:2,label:"Useful information"},{default:Object(c["D"])((function(){return[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.formattedDescriptionInfo},null,8,["innerHTML"])]})),_:1})):Object(c["f"])("",!0)])}var Yd={components:{ImageGallery:Sl,DetailSection:mr,IonImg:i["d"],SquareContainer:Vt,BigButton:en},mixins:[On],props:{congress:{type:Object},isCongress:{type:Boolean},congressType:{type:String}},data:function(){return{isReadMore:{dates:!0,useful:!1},detailsObject:{congress_venue:{gallery:[],title:"",description:"",link_googlemaps:"",link_googlemaps_label:"",link_download:"",link_download_label:""},timing_dates:{title:"",description:"",from_date:"",from_time:"",to_date:"",to_time:"",save_event:""},lima_booth:{title:"",description:"",gallery:[]},useful_information:{title:"",description:""}}}},computed:{updatedCongress:function(){return this.congress&&this.congress.content?Object.assign({},this.congress.content):this.detailsObject},updatedVenueGallery:function(){return this.updatedCongress&&this.updatedCongress.congress_venue&&this.updatedCongress.congress_venue.gallery&&this.updatedCongress.congress_venue.gallery.length?this.updatedCongress.congress_venue.gallery:[]},updatedReadMore:function(){return this.isReadMore},congressDescription:function(){return this.updatedCongress.congress_venue&&this.updatedCongress.congress_venue.description?this.updatedCongress.congress_venue.description:""},formattedDescriptionDates:function(){return this.updatedReadMore.dates?this.updatedCongress.lima_booth&&this.congressDates.description?this.congressDates.description:"":this.congressDates&&this.congressDates.description_short?this.congressDates.description_short:""},formattedDescriptionBooth:function(){return this.updatedCongress.lima_booth?this.updatedCongress.lima_booth.description:""},formattedDescriptionInfo:function(){return this.updatedCongress.useful_information&&this.updatedCongress.useful_information.description?this.updatedCongress.useful_information.description:""},congressMaps:function(){return!!(this.updatedCongress.congress_venue&&this.updatedCongress.congress_venue.link_googlemaps&&this.updatedCongress.congress_venue.link_googlemaps.length)&&{link:this.updatedCongress.congress_venue.link_googlemaps,label:this.updatedCongress.congress_venue.link_googlemaps_label}},congressDownloadMaps:function(){return!!(this.updatedCongress.congress_venue&&this.updatedCongress.congress_venue.link_download&&this.updatedCongress.congress_venue.link_download.length)&&{link:this.updatedCongress.congress_venue.link_download,label:this.updatedCongress.congress_venue.link_download_label}},congressDates:function(){return this.updatedCongress&&this.updatedCongress.timing_dates?this.updatedCongress.timing_dates:{}},areThereCongressDates:function(){return!!(this.congressDates&&Object.keys(this.congressDates)&&Object.keys(this.congressDates).length)},isLimaBooth:function(){return!!this.updatedCongress.lima_booth&&(!(!this.updatedCongress.lima_booth.gallery||!this.updatedCongress.lima_booth.gallery.length)||!(!this.updatedCongress.lima_booth.description||!this.updatedCongress.lima_booth.description.length))}},methods:{openLink:function(e){window.open(e)},saveInCalendar:function(e){this.logEvent(this.congressType,"save in Calendar","Congress dates ".concat(e.from_date," ").concat(e.to_date)),this.openLink(e.save_event)},readMore:function(e){var t=Object.assign({},this.isReadMore);t[e]=!t[e],this.isReadMore=t}}};const Jd=d()(Yd,[["render",Wd]]);var Kd=Jd,Xd=Object(c["G"])("data-v-81c73fe8");Object(c["t"])("data-v-81c73fe8");var Qd={class:"flex flex-col mx-8"},Zd={class:"relative flex mb-4"},eb={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},tb={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},nb=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," Name ",-1),sb={class:"relative flex mb-4"},rb={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},ab={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},cb=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," Phone ",-1),ob={class:"relative flex mb-4"},ib={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},lb={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},ub=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," E-mail ",-1);Object(c["r"])();var db=Xd((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("detail-section");return Object(c["q"])(),Object(c["e"])("div",Qd,[Object(c["h"])(l,{noPadding:"",label:"Main Contact"},{default:Xd((function(){return[Object(c["h"])("div",Zd,[Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:Xd((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/open-link-white.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",eb,[Object(c["h"])("span",tb,Object(c["A"])(a.updatedCongress.name),1),nb])]),Object(c["h"])("div",sb,[Object(c["h"])("a",{href:"tel:"+a.updatedCongress.phone,title:"phone",class:"absolute top-0 left-0 w-full h-full"},null,8,["href"]),Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:Xd((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/phone-white.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",rb,[Object(c["h"])("span",ab,Object(c["A"])(a.updatedCongress.phone),1),cb])]),Object(c["h"])("div",ob,[Object(c["h"])("a",{href:"mailto:"+a.updatedCongress.email,title:"mail to",class:"absolute top-0 left-0 w-full h-full"},null,8,["href"]),Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:Xd((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/mail-white.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",ib,[Object(c["h"])("span",lb,Object(c["A"])(a.updatedCongress.email),1),ub])])]})),_:1}),Object(c["h"])(l,{noPadding:"",label:"".concat(n.isCongress?"Congress ":"","Venue")},{default:Xd((function(){return[Object(c["h"])("p",{class:"font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mb-4",innerHTML:a.updatedVenue},null,8,["innerHTML"])]})),_:1},8,["label"]),Object(c["h"])(l,{noPadding:"",label:"Hotel"},{default:Xd((function(){return[Object(c["h"])("p",{class:"font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mb-4",innerHTML:a.updatedHotel},null,8,["innerHTML"])]})),_:1}),Object(c["h"])(l,{noPadding:"",label:"Staff",noSeparator:""},{default:Xd((function(){return[Object(c["h"])("p",{class:"font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mb-4 staff",innerHTML:a.updatedStaff},null,8,["innerHTML"])]})),_:1})])})),bb={components:{DetailSection:mr,IonImg:i["d"],SquareContainer:Vt},props:{congress:Object,isCongress:Boolean},mounted:function(){var e=this;setTimeout((function(){e.cleanParagraphs()}),500)},computed:{updatedCongress:function(){if(this.congress&&this.congress.content){var e=Object.assign({},this.congress.content);return e}return{}},updatedVenue:function(){return this.updatedCongress&&this.updatedCongress.congress_venue?this.sanitizeManageText(this.updatedCongress.congress_venue):{}},updatedHotel:function(){return this.updatedCongress&&this.updatedCongress.hotel?this.updatedCongress.hotel:{}},updatedStaff:function(){return this.updatedCongress&&this.updatedCongress.staff?this.updatedCongress.staff:""}},methods:{openLink:function(e){window.open(e)}}};n("125f");const pb=d()(bb,[["render",db],["__scopeId","data-v-81c73fe8"]]);var hb=pb,fb={class:"flex flex-col"},mb={class:"flex flex-col relative border-l border-grey mx-8 mb-4 mt-2"},gb={class:"ml-8 relative p-4 bg-light-red rounded-8 flex flex-col mb-4 justify-between items-start"},Ob={class:"font-helvetica text-red text-14 spacing-2 line-24 mb-2"},jb={class:"font-helvetica-medium text-dark-grey text-16 spacing-4 line-24 mb-2"},vb={class:"font-helvetica text-grey text-14 spacing-44 line-20"};function yb(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("big-button"),l=Object(c["y"])("detail-section");return Object(c["q"])(),Object(c["e"])("div",fb,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedCongress,(function(e,t){return Object(c["q"])(),Object(c["e"])(l,{key:t,label:e.date,noSeparator:""},{default:Object(c["D"])((function(){return[Object(c["h"])("div",mb,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(e.events,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:[t>0?"mt-8":"","relative"]},[Object(c["h"])(o,{src:"/assets/button-icons/dot.svg",class:"absolute top-0",style:{width:"7px",height:"7px","margin-left":"-3.5px","margin-top":"1.35rem"}}),Object(c["h"])("div",gb,[Object(c["h"])("span",Ob,Object(c["A"])(e.time),1),Object(c["h"])("span",jb,Object(c["A"])(e.title),1),Object(c["h"])("span",vb,Object(c["A"])(e.subtitle),1),e.save_event&&e.save_event.length?(Object(c["q"])(),Object(c["e"])(i,{key:0,bgClass:"mt-4 ",label:"Save in calendar",onOnClick:function(t){return a.saveEvent(e)}},null,8,["onOnClick"])):Object(c["f"])("",!0)]),Object(c["h"])("p",{class:"mmt-0 mb-0 mr-0 ml-8 font-helvetica text-16 text-mid-dark-grey spacing-1 line-24",innerHTML:e.description},null,8,["innerHTML"])],2)})),128))])]})),_:2},1032,["label"])})),128))])}var xb={components:{DetailSection:mr,IonImg:i["d"],BigButton:en},mixins:[On],props:{congress:{type:Object},congressType:{type:String}},computed:{updatedCongress:function(){return this.congress&&this.congress.content?this.congress.content:[]}},methods:{saveEvent:function(e){this.logEvent(this.congressType,"save in Calendar","Congress event ".concat(e.title)),window.open(e.save_event)}}};const wb=d()(xb,[["render",yb]]);var kb=wb,Cb={class:"flex flex-col px-8 pt-8"};function Sb(e,t,n,s,r,a){var o=Object(c["y"])("document-list-item");return Object(c["q"])(),Object(c["e"])("div",Cb,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.congressDocuments,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"mb-4",key:t},[Object(c["h"])(o,{document:e},null,8,["document"])])})),128))])}var _b={components:{DocumentListItem:yn},props:{congress:Object},computed:{congressDocuments:function(){return this.congress&&this.congress.content&&this.congress.content.length?this.congress.content:[]}}};const qb=d()(_b,[["render",Sb]]);var Db=qb,$b={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Tb={class:"font-helvetica text-grey text-14 spacing-44 line-24 mb-2"},Ab={class:"flex justify-between items-center w-full"},Ib={class:"bg-light-red rounded-6 px-2 mr-auto"},Rb={class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"},Pb={class:"flex ml-2"},Mb={class:"flex justify-between items-center w-full pointer-events-none mt-4"};function Lb(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("big-button"),u=Object(c["y"])("accordions-list");return Object(c["q"])(),Object(c["e"])(u,{classes:"mt-4 px-8",list:a.congressActivities},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])("div",{class:"flex flex-col justify-between items-start bg-white rounded-12 elevated-shadow px-6 py-4",onClick:function(e){return a.routeToActivity(t)}},[Object(c["h"])("span",$b,Object(c["A"])(t.title),1),Object(c["h"])("span",Tb,Object(c["A"])(t.location),1),Object(c["h"])("div",Ab,[Object(c["h"])("div",Ib,[Object(c["h"])("span",Rb,Object(c["A"])(t.date),1)]),Object(c["h"])("div",Pb,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(t.experts,(function(e,t){return Object(c["q"])(),Object(c["e"])(i,{key:t,rounded:"6",squareSize:"24",classes:[e.image?"":"flex bg-red","ml-2"]},{default:Object(c["D"])((function(){return[e.image?(Object(c["q"])(),Object(c["e"])(o,{key:0,src:e.image},null,8,["src"])):Object(c["f"])("",!0)]})),_:2},1032,["classes"])})),128))])]),Object(c["h"])("div",Mb,[Object(c["h"])(l,{label:"Read more"})])],8,["onClick"])]})),_:1},8,["list"])}var Nb={components:{IonImg:i["d"],AccordionsList:Wi,SquareContainer:Vt,BigButton:en},props:{congress:Object},computed:{congressActivities:function(){if(this.congress&&this.congress.content&&this.congress.content.length){var e=this.congress.content.map((function(e){return{name:e.label,childs:e.events.map((function(e){return e})),count:e.events.length}}));return e}return[]}},methods:{routeToActivity:function(e){this.$router.push("/congresses/activities/".concat(e.id))}}};const Bb=d()(Nb,[["render",Lb]]);var Eb=Bb,Vb={class:"flex flex-col pb-10"},Ub=Object(c["h"])("div",{class:"absolute ml-8 mt-8 bg-light-grey h-full",style:{"border-radius":"0 12px 12px 12px",width:"calc(100% - 4rem)"}},null,-1),zb={class:"flex flex-col mx-16 mt-8 pt-8 relative z-10"},Fb={class:"font-helvetica-bold text-20 text-black spacing-2 line-28 mb-4"},Gb={key:0,class:"mt-4"};function Hb(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("image-gallery");return Object(c["q"])(),Object(c["e"])("div",Vb,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.congressMessages,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"relative flex flex-col mb-16"},[Ub,Object(c["h"])(o,{src:"assets/button-icons/message-triangle.svg",class:"absolute ml-8 mt-8",style:{transform:"translateY(-100%)",width:"16px"}}),Object(c["h"])("div",zb,[Object(c["h"])("span",Fb,Object(c["A"])(e.title),1),Object(c["h"])("p",{class:"m-0 font-helvetica text-16 text-mid-dark-grey spacing-1 line-24",innerHTML:e.description},null,8,["innerHTML"])]),e.images&&e.images.length?(Object(c["q"])(),Object(c["e"])("div",Gb,[Object(c["h"])(i,{chatGallery:"",gallery:e.images,initMargin:"ml-16"},null,8,["gallery"])])):Object(c["f"])("",!0)])})),128))])}var Wb={components:{IonImg:i["d"],ImageGallery:Sl},props:{congress:Object},computed:{congressMessages:function(){return this.congress&&this.congress.content&&this.congress.content.length?this.congress.content:[]}}};const Yb=d()(Wb,[["render",Hb]]);var Jb=Yb,Kb=Object(c["h"])("div",null," ",-1);function Xb(e,t,n,s,r,a){var o=Object(c["y"])("section-button"),i=Object(c["y"])("carousel"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{label:n.title,back:""},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{id:"sections-carousel",classes:"pt-4 -my-4 pb-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.sections,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,active:n.section===e.path,classes:[0===t?"ml-8":""," mr-4"],label:e.label,onOnClick:function(t){return a.changeSection(e.path)}},null,8,["active","classes","label","onOnClick"])})),128)),Kb]})),_:1}),Object(c["x"])(e.$slots,"default")]})),_:3},8,["label"])}var Qb={emits:["changeSection"],components:{Page:ys,Carousel:he,SectionButton:nr},props:{title:String,congressID:Number,section:String,sections:Array},data:function(){return{}},methods:{changeSection:function(e){this.$emit("changeSection",e)}}};const Zb=d()(Qb,[["render",Xb]]);var ep=Zb,tp={name:"CongressDetail",components:{Info:Xu,Media:ad,Hotels:Ad,Details:Kd,Contacts:hb,DayByDay:kb,Downloads:Db,Activities:Eb,KeyMessages:Jb,CongressLayout:ep},mixins:[On],data:function(){return{section:"info",congress:{tabs:{info:{title:"Info",content:{}},details:{title:"Details",content:{congress_venue:{},timing_dates:{},lima_booth:{},useful_information:{}}},hotel:{title:"Hotel & Transfer",content:{hotel:{},transfer:{}}},day:{title:"Day by day",content:[]},activities:{title:"Activities",content:[]},key:{title:"Key messages",content:[]},downloads:{title:"Downloads",content:[]},contacts:{title:"Contacts",content:{}}}}}},computed:{title:function(){return this.updatedCongress&&this.updatedCongress.info&&this.updatedCongress.info.content&&this.updatedCongress.info.content.name?this.updatedCongress.info.content.name:"Details"},updatedCongress:function(){var e=Object.assign({},this.congress.tabs);return e},updatedSection:function(){return this.section},congressType:function(){return"event"===this.updatedCongress.info.content.type?"Event":"Congress"},sectionsList:function(){for(var e=Object.keys(this.updatedCongress),t=[],n=0;n<e.length;n++)t.push({label:this.updatedCongress[e[n]].title,path:e[n]});return t}},methods:{selectSection:function(e){this.section=e}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,s,r,a,c,o,i,l;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=16;break}return n=e.$route.params.id,t.prev=2,t.next=5,e.$http({method:"GET",url:ct.congresses.list+"/"+n,params:e.filters});case 5:l=t.sent,e.congress=l,e.logPage("".concat((null===l||void 0===l||null===(s=l.tabs)||void 0===s||null===(r=s.info)||void 0===r||null===(a=r.content)||void 0===a?void 0:a.name)||"Congress Detail"," (").concat("event"===(null===l||void 0===l||null===(c=l.tabs)||void 0===c||null===(o=c.info)||void 0===o||null===(i=o.content)||void 0===i?void 0:i.type)?"Event":"Congress"," details)")),t.next=14;break;case 10:t.prev=10,t.t0=t["catch"](2),console.error(t.t0),e.$toast({message:at.errors.congressDetail,color:"danger"});case 14:t.next=19;break;case 16:console.error("No congress id in route"),e.$toast({message:at.errors.congressDetail,color:"danger"}),e.$router.push("/congresses");case 19:case"end":return t.stop()}}),t,null,[[2,10]])})))()}};const np=d()(tp,[["render",Iu]]);var sp=np,rp=Object(c["G"])("data-v-2c405155");Object(c["t"])("data-v-2c405155");var ap={class:"flex flex-col my-8 "},cp={class:"font-helvetica-bold text-20 spacing-2 line-28 text-black mb-2"},op={class:"font-helvetica-medium text-16 spacing-4 line-24 text-dark-grey mb-4"},ip={key:0,class:"flex flex-col"},lp=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-20"},"Location",-1),up={class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26 mb-8"},dp={class:"flex flex-col bg-light-red rounded-12 p-6"},bp={class:"flex justify-between items-start mb-4"},pp={class:"flex flex-col"},hp=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"From",-1),fp={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},mp={class:"font-helvetica text-14 text-red spacing-2 line-24"},gp={class:"flex flex-col"},Op=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"To",-1),jp={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},vp={class:"font-helvetica text-14 text-red spacing-2 line-24"},yp={class:"flex justify-start"},xp={class:"flex flex-col justify-between items-start pointer-events-none"},wp={class:"font-helvetica-medium text-16 spacing-5 line-28 text-black"},kp={class:"font-helvetica text-14 spacing-44 line-24 text-grey"};Object(c["r"])();var Cp=rp((function(e,t,n,s,r,a){var o=Object(c["y"])("big-button"),i=Object(c["y"])("separator"),l=Object(c["y"])("section-button"),u=Object(c["y"])("detail-section"),d=Object(c["y"])("IonImg"),b=Object(c["y"])("square-container"),p=Object(c["y"])("document-list-item"),h=Object(c["y"])("faculty-modal"),f=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(f,{back:"",withMargin:"",label:a.updatedActivity.title,aboveTitle:a.aboveTitle},{default:rp((function(){return[Object(c["h"])("div",{class:"bg-white rounded-12 relative mr-4 gallery-container elevated-shadow overflow-hidden bg-cover bg-no-repeat bg-center",style:"background-image:url('".concat(a.updatedActivity.image,"'")},null,4),Object(c["h"])("div",ap,[Object(c["h"])("span",cp,Object(c["A"])(a.updatedActivity.subtitle1),1),Object(c["h"])("span",op,Object(c["A"])(a.updatedActivity.subtitle2),1),a.updatedActivity.location?(Object(c["q"])(),Object(c["e"])("div",ip,[lp,Object(c["h"])("span",up,Object(c["A"])(a.updatedActivity.location),1)])):Object(c["f"])("",!0),Object(c["h"])("div",dp,[Object(c["h"])("div",bp,[Object(c["h"])("div",pp,[hp,Object(c["h"])("span",fp,Object(c["A"])(a.updatedActivity.start_date),1),Object(c["h"])("span",mp,Object(c["A"])(a.updatedActivity.start_date_time),1)]),Object(c["h"])("div",gp,[Op,Object(c["h"])("span",jp,Object(c["A"])(a.updatedActivity.end_date),1),Object(c["h"])("span",vp,Object(c["A"])(a.updatedActivity.end_date_time),1)])]),a.updatedActivity.save_event&&a.updatedActivity.save_event.length?(Object(c["q"])(),Object(c["e"])(o,{key:0,label:"Save in calendar",onOnClick:t[1]||(t[1]=function(t){return a.saveEvent(e.link)})})):Object(c["f"])("",!0)])]),Object(c["h"])(i,{noYMargin:""}),Object(c["h"])(u,{label:"Description",noPadding:""},{default:rp((function(){return[Object(c["h"])("p",{class:"p-children font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",style:a.updatedReadMore?"":"display: -webkit-box;-webkit-line-clamp: 3;-webkit-box-orient: vertical;overflow: hidden;text-overflow: ellipsis;",innerHTML:a.formattedDescription},null,12,["innerHTML"]),Object(c["h"])("div",yp,[Object(c["h"])(l,{label:a.updatedReadMore?"Read less":"Read more",onOnClick:a.readMore},null,8,["label","onOnClick"])])]})),_:1}),a.updatedActivity.experts&&a.updatedActivity.experts.length?(Object(c["q"])(),Object(c["e"])(u,{key:0,label:"Faculties",noPadding:""},{default:rp((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedActivity.experts,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:[t>0?"mt-4":""," flex justify-start items-center"],onClick:function(t){return a.openFaculty(e)}},[Object(c["h"])(b,{bgClass:"bg-white",squareSize:"64",classes:"mr-4 pointer-events-none"},{default:rp((function(){return[Object(c["h"])(d,{src:e.preview},null,8,["src"])]})),_:2},1024),Object(c["h"])("div",xp,[Object(c["h"])("span",wp,Object(c["A"])(e.name),1),Object(c["h"])("span",kp,Object(c["A"])(e.subtitle),1)])],10,["onClick"])})),128))]})),_:1})):Object(c["f"])("",!0),a.updatedActivity.files&&a.updatedActivity.files.length?(Object(c["q"])(),Object(c["e"])(u,{key:1,label:"Download",noPadding:""},{default:rp((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.updatedActivity.files,(function(e,t){return Object(c["q"])(),Object(c["e"])(p,{bgClass:"bg-transparent",key:t,document:e},null,8,["document"])})),128))]})),_:1})):Object(c["f"])("",!0),Object(c["h"])(h,{faculty:r.faculty,onOnClose:a.closeFaculty},null,8,["faculty","onOnClose"])]})),_:1},8,["label","aboveTitle"])})),Sp=Object(c["G"])("data-v-5638b297");Object(c["t"])("data-v-5638b297");var _p={class:"w-full h-full relative pt-20 gradient-background"},qp={class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:{height:"90px"}},Dp={class:"mx-8 flex flex-col"},$p={class:"font-helvetica-medium text-16 text-dark-grey spacing-4 line-24 mb-8 block"};Object(c["r"])();var Tp=Sp((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("square-container"),u=Object(c["y"])("Title"),d=Object(c["y"])("ion-modal");return Object(c["q"])(),Object(c["e"])(d,{animated:"",showBackdrop:"","css-class":"custom-modal no-modal-shadow","is-open":r.isOpened,onDidDismiss:t[1]||(t[1]=function(t){return e.$emit("onClose")})},{default:Sp((function(){return[Object(c["h"])("div",_p,[Object(c["h"])("div",qp,[Object(c["h"])(i,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.closeFaculty},{default:Sp((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])]),Object(c["h"])("div",Dp,[Object(c["h"])(l,{bgClass:"bg-white",squareSize:"64",classes:"mb-4"},{default:Sp((function(){return[Object(c["h"])(o,{src:a.computedFaculty.preview},null,8,["src"])]})),_:1}),Object(c["h"])(u,{titleClass:"pb-4 text-black font-helvetica-bold text-28 block"},{default:Sp((function(){return[Object(c["g"])(Object(c["A"])(a.computedFaculty.name),1)]})),_:1}),Object(c["h"])("span",$p,Object(c["A"])(a.computedFaculty.subtitle),1),Object(c["h"])("p",{class:"m-0 font-helvetica text-16 spacing-1 line-24 text-mid-dark-grey",innerHTML:a.computedFaculty.description},null,8,["innerHTML"])])])]})),_:1},8,["is-open"])})),Ap={components:{Title:ae,IonImg:i["d"],IonModal:i["g"],SquareContainer:Vt,IonButton:i["b"]},props:{faculty:Object},data:function(){return{isOpened:!1}},computed:{computedFaculty:function(){return this.faculty}},methods:{closeFaculty:function(){this.$emit("onClose")}},watch:{computedFaculty:function(e){e&&Object.keys(e).length?this.isOpened=!0:this.isOpened=!1}}};n("8c95");const Ip=d()(Ap,[["render",Tp],["__scopeId","data-v-5638b297"]]);var Rp=Ip,Pp={name:"ActivityDetail",components:{IonImg:i["d"],Page:ys,Separator:lr,DetailSection:mr,SquareContainer:Vt,DocumentListItem:yn,SectionButton:nr,BigButton:en,FacultyModal:Rp},mixins:[On],data:function(){return{isReadMore:!1,faculty:null,activity:{}}},computed:{updatedActivity:function(){return this.activity},updatedReadMore:function(){return this.isReadMore},aboveTitle:function(){return this.updatedActivity.parent_name+" /"},formattedDescription:function(){return this.updatedActivity&&this.updatedActivity.description&&this.updatedActivity.description.length?this.sanitizeManageText(this.updatedActivity.description):""},backPath:function(){var e=this.updatedActivity.parent_id;return"/congresses/".concat(e,"?section=activities")},isFaculty:function(){return this.faculty}},methods:{readMore:function(){this.isReadMore=!this.isReadMore},openFaculty:function(e){this.faculty=Object.assign({},e)},closeFaculty:function(){this.faculty=null},openLink:function(e){window.open(e)},saveEvent:function(e){this.logEvent("Congress Activity","save in Calendar","Congress activity ".concat(this.updatedActivity.title)),this.openLink(e)}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,s;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=17;break}return n=e.$route.params.id,t.prev=2,t.next=5,e.$http({method:"GET",url:ct.congresses.activity+"/"+n,params:{}});case 5:s=t.sent,s&&Object.keys(s).length&&(e.activity=s),setTimeout((function(){e.cleanParagraphs()}),500),e.logPage(s.title),t.next=15;break;case 11:t.prev=11,t.t0=t["catch"](2),console.error(t.t0),e.$toast({message:at.errors.activityDetail,color:"danger"});case 15:t.next=20;break;case 17:console.error("No congress id in route"),e.$toast({message:at.errors.activityDetail,color:"danger"}),e.$router.push("/congresses");case 20:case"end":return t.stop()}}),t,null,[[2,11]])})))()}};n("8fe0");const Mp=d()(Pp,[["render",Cp],["__scopeId","data-v-2c405155"]]);var Lp=Mp,Np={class:"flex flex-start items-start pointer-events-none px-8 w-full"},Bp={class:"flex flex-col justify-between py-2"},Ep={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Vp={class:"bg-light-red rounded-6 px-2 mr-auto"},Up={class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"};function zp(e,t,n,s,r,a){var o=Object(c["y"])("square-container"),i=Object(c["y"])("ion-list"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{label:"Sales Training",back:"/home",filters:r.filters,filtersOptions:a.options,onOnFiltersChange:a.updateFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(r.list,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-4",key:t,onClick:function(t){return a.routeToTraining(e)}},[Object(c["h"])("div",Np,[Object(c["h"])(o,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 bg-no-repeat bg-cover bg-center",styles:"background-image:url('".concat(e.preview,"')")},null,8,["styles"]),Object(c["h"])("div",Bp,[Object(c["h"])("span",Ep,Object(c["A"])(e.name),1),Object(c["h"])("span",{class:"font-helvetica text-grey text-14 spacing-44 line-24",innerHTML:e.subtitle},null,8,["innerHTML"]),Object(c["h"])("div",Vp,[Object(c["h"])("span",Up,Object(c["A"])(e.dates),1)])])])],8,["onClick"])})),128))]})),_:1})]})),_:1},8,["filters","filtersOptions","onOnFiltersChange"])}var Fp={components:{Page:ys,IonList:i["f"],SquareContainer:Vt},data:function(){return{list:[],filtersOptions:{},filters:{year:(new Date).getFullYear()}}},computed:{options:function(){return this.filtersOptions}},created:function(){this.$route.query&&this.$route.query.year&&(this.filters.year=parseInt(this.$route.query.year)),this.getTrainingList()},methods:{routeToTraining:function(e){var t="/training/".concat(e.id);this.$router.push(t)},updateFilters:function(e){this.filters=Object.assign({},e)},getTrainingList:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return e.$router.push({path:e.$route.path,query:e.filters}),t.prev=1,t.next=4,e.$http({method:"GET",url:ct.training.list,params:e.filters});case 4:n=t.sent,e.list=n.list,e.filtersOptions=n.filters||{},t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:at.errors.training,color:"danger"});case 13:case"end":return t.stop()}}),t,null,[[1,9]])})))()}},watch:{filters:function(e){this.$router.push({path:this.$route.path,query:e}),this.getTrainingList(e)}}};const Gp=d()(Fp,[["render",zp]]);var Hp=Gp;function Wp(e,t,n,s,r,a){var o=Object(c["y"])("Info"),i=Object(c["y"])("Testimonials"),l=Object(c["y"])("Details"),u=Object(c["y"])("Hotels"),d=Object(c["y"])("DayByDay"),b=Object(c["y"])("Activities"),p=Object(c["y"])("Downloads"),h=Object(c["y"])("Contacts"),f=Object(c["y"])("congress-layout");return Object(c["q"])(),Object(c["e"])(f,{section:a.updatedSection,sections:a.sectionsList,title:a.title,onChangeSection:a.selectSection},{default:Object(c["D"])((function(){return["info"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(o,{key:0,instance:a.updatedTraining.info},null,8,["instance"])):Object(c["f"])("",!0),"messages"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(i,{key:1,instance:a.updatedTraining.messages},null,8,["instance"])):Object(c["f"])("",!0),"details"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(l,{key:2,instance:a.updatedTraining.details},null,8,["instance"])):Object(c["f"])("",!0),"hotel"===a.updatedSection?(Object(c["q"])(),Object(c["e"])(u,{key:3,congress:a.updatedTraining.hotel},null,8,["congress"])):Object(c["f"])("",!0),"day"===r.section?(Object(c["q"])(),Object(c["e"])(d,{key:4,instance:a.updatedTraining.day},null,8,["instance"])):Object(c["f"])("",!0),"activities"===r.section?(Object(c["q"])(),Object(c["e"])(b,{key:5,instance:a.updatedTraining.activities},null,8,["instance"])):Object(c["f"])("",!0),"download"===r.section?(Object(c["q"])(),Object(c["e"])(p,{key:6,congress:a.updatedTraining.download},null,8,["congress"])):Object(c["f"])("",!0),"contacts"===r.section?(Object(c["q"])(),Object(c["e"])(h,{key:7,instance:a.updatedTraining.contacts},null,8,["instance"])):Object(c["f"])("",!0)]})),_:1},8,["section","sections","title","onChangeSection"])}var Yp=Object(c["G"])("data-v-03001996");Object(c["t"])("data-v-03001996");var Jp={class:"flex flex-col"},Kp={class:"flex flex-col bg-light-red rounded-12 p-6 mx-8"},Xp={class:"flex justify-between items-start mb-4"},Qp={class:"flex flex-col"},Zp=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"From",-1),eh={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},th={class:"font-helvetica text-14 text-red spacing-2 line-24"},nh={class:"flex flex-col"},sh=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-4"},"To",-1),rh={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},ah={class:"font-helvetica text-14 text-red spacing-2 line-24"},ch={class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26 px-8"},oh={class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28",style:{"word-break":"break-all"}};Object(c["r"])();var ih=Yp((function(e,t,n,s,r,a){var o=Object(c["y"])("big-button"),i=Object(c["y"])("detail-section"),l=Object(c["y"])("ion-img"),u=Object(c["y"])("square-container");return Object(c["q"])(),Object(c["e"])("div",Jp,[Object(c["h"])("div",{class:"ml-8 bg-white rounded-12 relative mr-4 gallery-container elevated-shadow overflow-hidden bg-contain bg-no-repeat bg-center",style:"background-image:url('".concat(a.training.image,"')")},null,4),Object(c["h"])(i,{label:a.training.name},{default:Yp((function(){return[Object(c["h"])("span",{class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26 px-8 mb-4",innerHTML:a.training.subtitle},null,8,["innerHTML"]),Object(c["h"])("div",Kp,[Object(c["h"])("div",Xp,[Object(c["h"])("div",Qp,[Zp,Object(c["h"])("span",eh,Object(c["A"])(a.training.first_date),1),Object(c["h"])("span",th,Object(c["A"])(a.training.first_date_time),1)]),Object(c["h"])("div",nh,[sh,Object(c["h"])("span",rh,Object(c["A"])(a.training.last_date),1),Object(c["h"])("span",ah,Object(c["A"])(a.training.last_date_time),1)])]),a.training.save_event&&a.training.save_event.length?(Object(c["q"])(),Object(c["e"])(o,{key:0,label:"Save in calendar",onOnClick:a.saveEvent},null,8,["onOnClick"])):Object(c["f"])("",!0)])]})),_:1},8,["label"]),a.training.description&&a.training.description.length?(Object(c["q"])(),Object(c["e"])(i,{key:0,label:"Description"},{default:Yp((function(){return[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mt-0",innerHTML:a.training.description},null,8,["innerHTML"])]})),_:1})):Object(c["f"])("",!0),a.training.link&&a.training.link.length?(Object(c["q"])(),Object(c["e"])(i,{key:1,label:"Link for Registration",noSeparator:""},{default:Yp((function(){return[Object(c["h"])("span",ch,Object(c["A"])(a.training.text_over_website),1),Object(c["h"])("div",{class:"flex mt-2 items-center relative mx-8",onClick:t[1]||(t[1]=function(){return a.openLink&&a.openLink.apply(a,arguments)})},[Object(c["h"])(u,{bgClass:"bg-light-grey",squareSize:"44",classes:"pointer-events-none flex"},{default:Yp((function(){return[Object(c["h"])(l,{src:"/assets/button-icons/open-link.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("span",oh,Object(c["A"])(a.training.link),1)])]})),_:1})):Object(c["f"])("",!0)])})),lh={components:{DetailSection:mr,IonImg:i["d"],BigButton:en,SquareContainer:Vt},mixins:[On],props:{instance:Object},computed:{training:function(){if(this.instance&&this.instance.content){var e=Object.assign({},this.instance.content);return e}return{}}},methods:{saveEvent:function(){this.logEvent("Sales Training","save in Calendar","Training ".concat(this.training.name)),window.open(this.training.save_event)},openLink:function(){this.logEvent("Sales Training","register","Training ".concat(this.training.name)),window.open(this.training.link)}}};n("c8a5");const uh=d()(lh,[["render",ih],["__scopeId","data-v-03001996"]]);var dh=uh,bh={class:"flex flex-col"},ph={class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28"},hh={class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28"};function fh(e,t,n,s,r,a){var o=Object(c["y"])("image-gallery"),i=Object(c["y"])("ion-img"),l=Object(c["y"])("square-container"),u=Object(c["y"])("detail-section");return Object(c["q"])(),Object(c["e"])("div",bh,[Object(c["h"])(o,{gallery:a.updatedVenueGallery},null,8,["gallery"]),Object(c["h"])(u,{label:"Venue"},{default:Object(c["D"])((function(){return[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.congressDescription},null,8,["innerHTML"]),a.congressMaps&&a.congressMaps.link&&a.congressMaps.link.length?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:"flex relative mb-4 mx-8 items-center",onClick:t[1]||(t[1]=function(e){return a.openLink(a.congressMaps.link)})},[Object(c["h"])(l,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/pin.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("span",ph,Object(c["A"])(a.congressMaps.label),1)])):Object(c["f"])("",!0),a.congressDownloadMaps&&a.congressDownloadMaps.link&&a.congressDownloadMaps.link.length?(Object(c["q"])(),Object(c["e"])("div",{key:1,class:"flex relative mx-8 items-center",onClick:t[2]||(t[2]=function(e){return a.openLink(a.congressDownloadMaps.link)})},[Object(c["h"])(l,{bgClass:"bg-light-grey",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:"/assets/button-icons/download.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("span",hh,Object(c["A"])(a.congressDownloadMaps.label),1)])):Object(c["f"])("",!0)]})),_:1}),Object(c["h"])(u,{label:"Main Topics"},{default:Object(c["D"])((function(){return[a.training.lima_booth&&a.training.lima_booth&&a.training.lima_booth.gallery&&!a.training.lima_booth.gallery?Object(c["f"])("",!0):(Object(c["q"])(),Object(c["e"])(o,{key:0,gallery:a.training.lima_booth.gallery},null,8,["gallery"])),Object(c["h"])("div",{class:a.training.lima_booth&&a.training.lima_booth.gallery&&a.training.lima_booth.gallery.length?"mt-8":""},[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.training.lima_booth.description},null,8,["innerHTML"])],2)]})),_:1}),a.formattedDescriptionInfo&&a.formattedDescriptionInfo.length?(Object(c["q"])(),Object(c["e"])(u,{key:0,label:"Useful information"},{default:Object(c["D"])((function(){return[Object(c["h"])("p",{class:"px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4 mt-0",innerHTML:a.training.useful_information.description},null,8,["innerHTML"])]})),_:1})):Object(c["f"])("",!0)])}var mh={components:{ImageGallery:Sl,DetailSection:mr,IonImg:i["d"],SquareContainer:Vt},props:{instance:Object},computed:{training:function(){return this.instance&&this.instance.content?Object.assign({},this.instance.content):{}},updatedVenueGallery:function(){return this.training&&this.training.congress_venue&&this.training.congress_venue.gallery&&this.training.congress_venue.gallery.length?this.training.congress_venue.gallery:[]},congressDescription:function(){return this.training.congress_venue&&this.training.congress_venue.description?this.training.congress_venue.description:""},formattedDescriptionInfo:function(){return this.training.useful_information&&this.training.useful_information.description?this.training.useful_information.description:""},mainTopics:function(){return this.training.useful_information&&this.training.useful_information.description?this.training.useful_information.description:""},congressMaps:function(){return!!(this.training.congress_venue&&this.training.congress_venue.link_googlemaps&&this.training.congress_venue.link_googlemaps.length)&&{link:this.training.congress_venue.link_googlemaps,label:this.training.congress_venue.link_googlemaps_label}},congressDownloadMaps:function(){return!!(this.training.congress_venue&&this.training.congress_venue.link_download&&this.training.congress_venue.link_download.length)&&{link:this.training.congress_venue.link_download,label:this.training.congress_venue.link_download_label}}},methods:{openLink:function(e){window.open(e)}}};const gh=d()(mh,[["render",fh]]);var Oh=gh,jh=Object(c["G"])("data-v-0f54a5d2");Object(c["t"])("data-v-0f54a5d2");var vh={class:"flex flex-col mx-8"},yh={class:"relative flex mb-4"},xh={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},wh={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},kh=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," Name ",-1),Ch={class:"relative flex mb-4"},Sh={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},_h={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},qh=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," Phone ",-1),Dh={class:"relative flex mb-4"},$h={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},Th={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"},Ah=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-24"}," E-mail ",-1),Ih={key:0,class:"font-helvetica text-16 text-mid-dark-grey spacing-2 line-26 mt-4"},Rh={class:"ml-4 flex flex-col justify-between items-start pointer-events-none"},Ph={class:"font-helvetica-medium text-16 text-black spacing-5 line-28"};Object(c["r"])();var Mh=jh((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("detail-section");return Object(c["q"])(),Object(c["e"])("div",vh,[Object(c["h"])(l,{noPadding:"",label:"Main Contact"},{default:jh((function(){return[Object(c["h"])("div",yh,[Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:jh((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/open-link-white.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",xh,[Object(c["h"])("span",wh,Object(c["A"])(a.training.name),1),kh])]),Object(c["h"])("div",Ch,[Object(c["h"])("a",{href:"tel:"+a.training.phone,title:"phone",class:"absolute top-0 left-0 w-full h-full"},null,8,["href"]),Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:jh((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/phone-white.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",Sh,[Object(c["h"])("span",_h,Object(c["A"])(a.training.phone),1),qh])]),Object(c["h"])("div",Dh,[Object(c["h"])("a",{href:"mailto:"+a.training.email,title:"mail to",class:"absolute top-0 left-0 w-full h-full"},null,8,["href"]),Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:jh((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/mail-white.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",$h,[Object(c["h"])("span",Th,Object(c["A"])(a.training.email),1),Ah])]),a.training.text_over_website&&a.training.text_over_website.length?(Object(c["q"])(),Object(c["e"])("span",Ih,Object(c["A"])(a.training.text_over_website),1)):Object(c["f"])("",!0),a.training.website&&a.training.website.length?(Object(c["q"])(),Object(c["e"])("div",{key:1,onClick:t[1]||(t[1]=function(e){return a.openLink(a.training.website)}),class:"relative flex items-center mt-2 mb-4"},[Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:jh((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/open-link-white.svg",class:"m-auto"})]})),_:1}),Object(c["h"])("div",Rh,[Object(c["h"])("span",Ph,Object(c["A"])(a.training.website),1)])])):Object(c["f"])("",!0)]})),_:1}),Object(c["h"])(l,{noPadding:"",label:"Venue"},{default:jh((function(){return[Object(c["h"])("p",{class:"font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mb-4",innerHTML:a.updatedVenue},null,8,["innerHTML"])]})),_:1}),a.updatedHotel?(Object(c["q"])(),Object(c["e"])(l,{key:0,noPadding:"",label:"Hotel"},{default:jh((function(){return[Object(c["h"])("p",{class:"font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mb-4",innerHTML:a.updatedHotel},null,8,["innerHTML"])]})),_:1})):Object(c["f"])("",!0),a.updatedStaff?(Object(c["q"])(),Object(c["e"])(l,{key:1,noPadding:"",label:"Staff",noSeparator:""},{default:jh((function(){return[Object(c["h"])("p",{class:"font-helvetica text-16 text-mid-dark-grey spacing-1 line-24 mb-4 staff",innerHTML:a.updatedStaff},null,8,["innerHTML"])]})),_:1})):Object(c["f"])("",!0)])})),Lh={components:{DetailSection:mr,IonImg:i["d"],SquareContainer:Vt},props:{instance:Object},mounted:function(){var e=this;setTimeout((function(){e.cleanParagraphs()}),500)},computed:{training:function(){if(this.instance&&this.instance.content){var e=Object.assign({},this.instance.content);return e}return{}},updatedVenue:function(){return this.training&&this.training.congress_venue?this.sanitizeManageText(this.training.congress_venue):{}},updatedHotel:function(){return this.training&&this.training.hotel?this.training.hotel:""},updatedStaff:function(){return this.training&&this.training.staff?this.training.staff:""}},methods:{openLink:function(e){window.open(e)}}};n("f93f");const Nh=d()(Lh,[["render",Mh],["__scopeId","data-v-0f54a5d2"]]);var Bh=Nh,Eh={class:"flex flex-col relative border-l border-grey mx-4 mb-4 mt-2"},Vh={class:"ml-8 relative p-4 bg-light-red rounded-8 flex flex-col mb-4 justify-between items-start"},Uh={class:"font-helvetica text-red text-14 spacing-2 line-24 mb-2"},zh={class:"font-helvetica-medium text-dark-grey text-16 spacing-4 line-24 mb-2"},Fh={class:"font-helvetica text-grey text-14 spacing-44 line-20"};function Gh(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("accordions-list");return Object(c["q"])(),Object(c["e"])(i,{classes:"mt-4 px-8",list:a.computedInstance},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])("div",Eh,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(t,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:[t>0?"mt-8":"","relative"]},[Object(c["h"])(o,{src:"/assets/button-icons/dot.svg",class:"absolute top-0",style:{width:"7px",height:"7px","margin-left":"-3.5px","margin-top":"1.35rem"}}),Object(c["h"])("div",Vh,[Object(c["h"])("span",Uh,Object(c["A"])(e.time),1),Object(c["h"])("span",zh,Object(c["A"])(e.title),1),Object(c["h"])("span",Fh,Object(c["A"])(e.subtitle),1)]),Object(c["h"])("p",{class:"mmt-0 mb-0 mr-0 ml-8 font-helvetica text-16 text-mid-dark-grey spacing-1 line-24",innerHTML:e.description},null,8,["innerHTML"])],2)})),128))])]})),_:1},8,["list"])}var Hh={components:{AccordionsList:Wi,IonImg:i["d"]},props:{instance:Object},computed:{computedInstance:function(){if(this.instance&&this.instance.content){var e=this.instance.content.map((function(e){return{name:e.date,childs:[e.events],count:e.events.length}}));return e}return[]}},methods:{saveEvent:function(e){window.open(e.save_event)}}};const Wh=d()(Hh,[["render",Gh]]);var Yh=Wh,Jh={class:"flex flex-col justify-between items-start bg-white rounded-12 elevated-shadow px-6 py-4"},Kh={class:"font-helvetica-medium text-black text-16 spacing-5 line-28"},Xh={class:"font-helvetica text-grey text-14 spacing-44 line-24 mb-2"},Qh={class:"flex justify-between items-center w-full"},Zh={class:"bg-light-red rounded-6 px-2 mr-auto"},ef={class:"font-helvetica-medium text-12 text-red spacing-8 line-30 pointer-events-none"},tf={class:"flex ml-2"},nf=Object(c["h"])("span",{class:"pointer-events-none ml-2 font-helvetica-medium text-black text-16 spacing-5 line-28"}," Open in Maps ",-1);function sf(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("square-container"),l=Object(c["y"])("accordions-list");return Object(c["q"])(),Object(c["e"])(l,{classes:"mt-4 px-8",list:a.activities},{default:Object(c["D"])((function(e){var t=e.item;return[Object(c["h"])("div",Jh,[Object(c["h"])("span",Kh,Object(c["A"])(t.title),1),Object(c["h"])("span",Xh,Object(c["A"])(t.location),1),Object(c["h"])("div",Qh,[Object(c["h"])("div",Zh,[Object(c["h"])("span",ef,Object(c["A"])(t.date),1)]),Object(c["h"])("div",tf,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(t.experts,(function(e,t){return Object(c["q"])(),Object(c["e"])(i,{key:t,rounded:"6",squareSize:"24",classes:[e.image?"":"flex bg-red","ml-2"]},{default:Object(c["D"])((function(){return[e.image?(Object(c["q"])(),Object(c["e"])(o,{key:0,src:e.image},null,8,["src"])):Object(c["f"])("",!0)]})),_:2},1032,["classes"])})),128))])]),"lunch"!==t.type?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:"flex mt-4 items-center relative",onClick:function(e){return a.openLink(t.googlemaps)}},[Object(c["h"])(i,{bgClass:"bg-black",squareSize:"44",classes:"pointer-events-none flex"},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/pin.svg",class:"m-auto"})]})),_:1}),nf],8,["onClick"])):Object(c["f"])("",!0)])]})),_:1},8,["list"])}var rf={components:{IonImg:i["d"],AccordionsList:Wi,SquareContainer:Vt},props:{instance:Object},computed:{activities:function(){if(this.instance&&this.instance.content&&this.instance.content.length){var e=this.instance.content.map((function(e){return{name:e.label,childs:e.events.map((function(e){return e})),count:e.events.length}}));return e}return[]}},methods:{openLink:function(e){window.open(e)}}};const af=d()(rf,[["render",sf]]);var cf=af,of={class:"flex flex-col pb-10"},lf=Object(c["h"])("div",{class:"absolute ml-8 mt-8 bg-light-grey h-full",style:{"border-radius":"0 12px 12px 12px",width:"calc(100% - 4rem)"}},null,-1),uf={class:"flex flex-col mx-16 mt-8 pt-8 relative z-10"},df={class:"font-helvetica-bold text-20 text-black spacing-2 line-28 mb-4"},bf={key:0,class:"mt-4"};function pf(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("image-gallery");return Object(c["q"])(),Object(c["e"])("div",of,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.messages,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{key:t,class:"relative flex flex-col mb-16"},[lf,Object(c["h"])(o,{src:"assets/button-icons/message-triangle.svg",class:"absolute ml-8 mt-8",style:{transform:"translateY(-100%)",width:"16px"}}),Object(c["h"])("div",uf,[Object(c["h"])("span",df,Object(c["A"])(e.title),1),Object(c["h"])("p",{class:"m-0 font-helvetica text-16 text-mid-dark-grey spacing-1 line-24",innerHTML:e.description},null,8,["innerHTML"])]),e.images&&e.images.length?(Object(c["q"])(),Object(c["e"])("div",bf,[Object(c["h"])(i,{chatGallery:"",gallery:e.images,initMargin:"ml-16"},null,8,["gallery"])])):Object(c["f"])("",!0)])})),128))])}var hf={components:{IonImg:i["d"],ImageGallery:Sl},props:{instance:Object},computed:{messages:function(){return this.instance&&this.instance.content&&this.instance.content.length?this.instance.content:[]}}};const ff=d()(hf,[["render",pf]]);var mf=ff,gf={name:"SalesTrainingDetail",components:{CongressLayout:ep,Info:dh,Details:Oh,Hotels:Ad,DayByDay:Yh,Activities:cf,Testimonials:mf,Downloads:Db,Contacts:Bh},mixins:[On],data:function(){return{section:"info",training:{tabs:{info:{title:"Info",content:{}},details:{title:"Details",content:{congress_venue:{},timing_dates:{},lima_booth:{},useful_information:{}}},hotel:{title:"Hotel & Transfer",content:{hotel:{},transfer:{}}},day:{title:"Day by day",content:[]},activities:{title:"Activities",content:[]},key:{title:"Key messages",content:[]},downloads:{title:"Downloads",content:[]},contacts:{title:"Contacts",content:{}}}}}},computed:{title:function(){return this.updatedTraining&&this.updatedTraining.info&&this.updatedTraining.info.content&&this.updatedTraining.info.content.name?this.updatedTraining.info.content.name:"Training details"},updatedTraining:function(){var e=Object.assign({},this.training.tabs);return e},updatedSection:function(){return this.section},sectionsList:function(){for(var e=Object.keys(this.updatedTraining),t=[],n=0;n<e.length;n++)t.push({label:this.updatedTraining[e[n]].title,path:e[n]});return t}},methods:{selectSection:function(e){this.section=e}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n,s,r,a,c;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=16;break}return n=e.$route.params.id,t.prev=2,t.next=5,e.$http({method:"GET",url:ct.training.list+"/"+n,params:e.filters});case 5:c=t.sent,e.training=c,e.logPage((null===c||void 0===c||null===(s=c.tabs)||void 0===s||null===(r=s.info)||void 0===r||null===(a=r.content)||void 0===a?void 0:a.name)+" (Sales Training details)"||!1),t.next=14;break;case 10:t.prev=10,t.t0=t["catch"](2),console.error(t.t0),e.$toast({message:at.errors.trainingDetail,color:"danger"});case 14:t.next=19;break;case 16:console.error("No training id in route"),e.$toast({message:at.errors.trainingDetail,color:"danger"}),e.$router.push("/training");case 19:case"end":return t.stop()}}),t,null,[[2,10]])})))()}};const Of=d()(gf,[["render",Wp]]);var jf=Of,vf=Object(c["G"])("data-v-2be63ce4");Object(c["t"])("data-v-2be63ce4");var yf={class:"my-8"},xf=Object(c["h"])("p",{class:"m-0 paragraph font-helvetica-bold text-black mb-2 text-20 pb-1 line-24 spacing-1"}," We believe in offering Surgeons more than just a simple course. ",-1);Object(c["r"])();var wf=vf((function(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("big-button"),l=Object(c["y"])("video-modal"),u=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(u,{withMargin:"",back:"/menu",label:"Let's L.E.A.R.N. together"},{default:vf((function(){return[Object(c["h"])("div",{class:"bg-black rounded-12 relative mr-4 gallery-container elevated-shadow overflow-hidden flex justify-center items-center cursor-pointer",onClick:t[1]||(t[1]=function(){return a.openVideo&&a.openVideo.apply(a,arguments)})},[Object(c["h"])(o,{src:"/assets/learn.jpeg",class:"w-full opacity-50 pointer-events-none"}),Object(c["h"])(o,{src:"/assets/button-icons/play-white.svg",class:"m-auto absolute z-10 elevated-shadow pointer-events-none"})]),Object(c["h"])(i,{color:"secondary",bgClass:"mt-8",label:"Go to L.E.A.R.N. calendar",onClick:a.routeToCalendar},null,8,["onClick"]),Object(c["h"])("div",yf,[xf,Object(c["h"])("p",{class:"m-0 paragraph font-helvetica-medium text-16 mb-2 pb-1 line-24 spacing-1 text-dark-grey",innerHTML:r.subtitle},null,8,["innerHTML"]),Object(c["h"])("p",{class:"m-0 paragraph font-helvetica text-16 line-24 spacing-1 text-mid-dark-grey",innerHTML:r.text},null,8,["innerHTML"])]),Object(c["h"])(l,{direct:"",video:r.video,open:r.isVideoOpen,onOnClose:a.closeVideo},null,8,["video","open","onOnClose"])]})),_:1})})),kf={components:{Page:ys,BigButton:en,VideoModal:Mc},data:function(){return{video:{url:"https://limacorporate.com/video/learn/learn_for_surgeon_limacorporate_web_app.mp4"},subtitle:"WHAT IS L.E.A.R.N.?<br/>LimaCorporate's Education and Resource Network is a new medical education experience.",text:"We are all driven by the same goal: to restore the eMotion of Motion and together we always look for the best outcomes for patients.<br>Accordingly to your personal educational needs you will be able to establish your own pathway, choose virtual or in person training and establish a new network.<br>So let’s L.E.A.R.N. together, let’s L.E.A.R.N. from each other.",isVideoOpen:!1}},methods:{routeToCalendar:function(){this.$router.push("/learn/list")},openVideo:function(){this.isVideoOpen=!0},closeVideo:function(){this.isVideoOpen=!1}}};n("ea7e");const Cf=d()(kf,[["render",wf],["__scopeId","data-v-2be63ce4"]]);var Sf=Cf,_f={class:"flex flex-start items-center pointer-events-none px-8 w-full"};function qf(e,t,n,s,r,a){var o=Object(c["y"])("CourseCard"),i=Object(c["y"])("ion-list"),l=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(l,{back:"/learn",label:"L.E.A.R.N.",filters:r.filters,filtersOptions:r.filtersOptions,onOnFiltersChange:a.updateFilters},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(r.list,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent pb-4 mb-2",key:t,onClick:function(t){return a.routeTo(e)}},[Object(c["h"])("div",_f,[Object(c["h"])(o,{instance:e},null,8,["instance"])])],8,["onClick"])})),128))]})),_:1})]})),_:1},8,["filters","filtersOptions","onOnFiltersChange"])}var Df={class:"flex flex-col rounded-12 w-full p-6 pb-4 elevated-shadow bg-white"},$f={class:"flex no-wrap mb-2 overflow-hidden"},Tf={key:0,class:"inline-block font-helvetica-medium text-12 py-1 px-2 rounded-6 border border-grey text-grey whitespace-nowrap spacing-34 line-18"},Af={class:"block font-helvetica-medium text-black text-16 spacing-22 line-24"},If={key:0,class:"block font-helvetica text-grey mt-2 text-14 spacing-44 line-24"},Rf={key:1,class:"mr-auto my-2"},Pf={class:"block font-helvetica-medium bg-light-red py-1 px-2 text-red text-12 spacing-34 line-18"},Mf={class:"flex no-wrap overflow-hidden"},Lf={key:0,class:"flex no-wrap py-2 pr-2"},Nf={class:"uppercase text-grey text-10 m-auto"},Bf={key:1,class:"border-l border-grey my-2",style:{width:"1px"}},Ef={key:2,class:"flex no-wrap py-2 px-2"},Vf={key:3,class:"border-l border-grey my-2",style:{width:"1px"}},Uf={key:4,class:"flex no-wrap py-2 px-2"};function zf(e,t,n,s,r,a){var o=Object(c["y"])("square-container");return Object(c["q"])(),Object(c["e"])("div",Df,[Object(c["h"])("div",$f,[Object(c["h"])("span",{class:["inline-block font-helvetica-medium text-12 py-1 px-2 rounded-6 text-white mr-2 whitespace-nowrap  spacing-34 line-18",a.bgColor]},Object(c["A"])(a.categoryName),3),n.instance.typology?(Object(c["q"])(),Object(c["e"])("span",Tf,Object(c["A"])(n.instance.typology),1)):Object(c["f"])("",!0)]),Object(c["h"])("span",Af,Object(c["A"])(n.instance.title),1),n.instance.subtitle&&n.instance.subtitle.length?(Object(c["q"])(),Object(c["e"])("span",If,Object(c["A"])(n.instance.subtitle),1)):Object(c["f"])("",!0),n.instance.print_date&&n.instance.print_date.length?(Object(c["q"])(),Object(c["e"])("div",Rf,[Object(c["h"])("span",Pf,Object(c["A"])(n.instance.print_date),1)])):Object(c["f"])("",!0),Object(c["h"])("div",Mf,[n.instance.language?(Object(c["q"])(),Object(c["e"])("div",Lf,[Object(c["h"])(o,{classes:"bg-white flex",squareSize:24},{default:Object(c["D"])((function(){return[Object(c["h"])("span",Nf,Object(c["A"])(n.instance.language),1)]})),_:1})])):Object(c["f"])("",!0),n.instance.language?(Object(c["q"])(),Object(c["e"])("div",Bf)):Object(c["f"])("",!0),n.instance.segment?(Object(c["q"])(),Object(c["e"])("div",Ef,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.instance.segment,(function(e){return Object(c["q"])(),Object(c["e"])(o,{classes:"bg-white overflow-hidden",key:e.id,squareSize:24},{default:Object(c["D"])((function(){return[Object(c["h"])("img",{src:e.image,class:"w-full h-full"},null,8,["src"])]})),_:2},1024)})),128))])):Object(c["f"])("",!0),n.instance.segment&&n.instance.speakers&&n.instance.speakers.length?(Object(c["q"])(),Object(c["e"])("div",Vf)):Object(c["f"])("",!0),n.instance.speakers?(Object(c["q"])(),Object(c["e"])("div",Uf,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.instance.speakers,(function(e){return Object(c["q"])(),Object(c["e"])(o,{classes:"bg-white overflow-hidden mr-2",key:e,squareSize:24},{default:Object(c["D"])((function(){return[Object(c["h"])("img",{src:e.image,class:"w-full h-full"},null,8,["src"])]})),_:2},1024)})),128))])):Object(c["f"])("",!0)])])}var Ff={name:"CourseCard",components:{SquareContainer:Vt},props:{instance:{type:Object,default:function(){}}},computed:{bgColor:function(){if(this.instance&&this.instance.category)switch(this.instance.category.class){case"course":return"bg-orange";case"online":return"bg-green";case"third":return"bg-cyan";default:return"bg-light-grey"}return"bg-light-grey"},categoryName:function(){if(this.instance&&this.instance.category)switch(this.instance.category.class){case"course":return"Course";case"online":return"Online course";case"third":return"3rd-Party event";default:return"Other"}return"Other"}}};const Gf=d()(Ff,[["render",zf]]);var Hf=Gf,Wf={components:{Page:ys,IonList:i["f"],CourseCard:Hf},data:function(){return{list:[],filtersOptions:{},filters:{year:(new Date).getFullYear()}}},created:function(){this.fetchCourses()},methods:{routeTo:function(e){this.$router.push("/learn/".concat(e.id))},fetchCourses:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return e.$router.push({path:e.$route.path,query:e.filters}),t.prev=1,t.next=4,e.$http({method:"GET",url:ct.learn.list,params:e.filters});case 4:n=t.sent,n&&(e.list=n.list,e.filtersOptions=n.filters||{}),t.next=12;break;case 8:t.prev=8,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:at.errors.learn,color:"danger"});case 12:case"end":return t.stop()}}),t,null,[[1,8]])})))()},updateFilters:function(e){this.filters=e}},watch:{filters:function(e){this.$router.push({path:this.$route.path,query:e}),this.fetchCourses(e)}}};const Yf=d()(Wf,[["render",qf]]);var Jf=Yf,Kf=Object(c["h"])("div",{class:"mb-2"},null,-1),Xf=Object(c["h"])("div",null," ",-1);function Qf(e,t,n,s,r,a){var o=Object(c["y"])("section-button"),i=Object(c["y"])("carousel"),l=Object(c["y"])("Detail"),u=Object(c["y"])("Agenda"),d=Object(c["y"])("register-modal"),b=Object(c["y"])("Page");return Object(c["q"])(),Object(c["e"])(b,{back:"/learn/list",share:a.shareObject,aboveTitle:a.typeName,customGradient:a.gradient,label:r.course.title||"Course"},{"above-title":Object(c["D"])((function(){return[Object(c["h"])("span",{class:["font-helvetica-medium text-12 py-1 px-2 rounded-6 text-white whitespace-nowrap spacing-34 line-18",a.bgColor]},Object(c["A"])(a.typeName),3),Kf]})),default:Object(c["D"])((function(){return[r.course.show_tabs?(Object(c["q"])(),Object(c["e"])(i,{key:0,id:"sections-carousel",classes:"pt-4 -my-4 pb-8"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(r.sections,(function(e,t){return Object(c["q"])(),Object(c["e"])(o,{key:t,label:e.label,active:r.section===e.path,classes:[0===t?"ml-8":""," mr-4"],onOnClick:function(t){return a.routeToSection(e.path)}},null,8,["label","active","classes","onOnClick"])})),128)),Xf]})),_:1})):Object(c["f"])("",!0),"info"===r.section?(Object(c["q"])(),Object(c["e"])(l,{key:1,course:r.course,onRegister:a.onRegister},null,8,["course","onRegister"])):Object(c["f"])("",!0),"agenda"===r.section?(Object(c["q"])(),Object(c["e"])(u,{key:2,course:r.course,onRegister:a.onRegister},null,8,["course","onRegister"])):Object(c["f"])("",!0),Object(c["h"])(d,{course:r.course,open:r.isRegisterOpened,"selected-day":r.selectedDay,onOnClose:a.onClose},null,8,["course","open","selected-day","onOnClose"])]})),_:1},8,["share","aboveTitle","customGradient","label"])}n("a15b");var Zf={class:"flex flex-col"},em={class:"mx-8 my-4 flex flex-col"},tm={class:"mb-2 flex no-wrap"},nm={class:"w-1/2"},sm=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"}," Course type ",-1),rm={class:"block font-helvetica text-16 spacing-2 line-26 text-mid-dark-grey mr-4"},am={class:"w-1/2"},cm=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"}," Segment ",-1),om={class:"block font-helvetica text-16 spacing-2 line-26 text-mid-dark-grey"},im={class:"mb-2 flex no-wrap"},lm={class:"w-1/2"},um=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"}," Location ",-1),dm={class:"block font-helvetica text-16 spacing-2 line-26 text-mid-dark-grey mr-4"},bm={class:"w-1/2"},pm=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"}," Language ",-1),hm={class:"block font-helvetica text-16 spacing-2 line-26 text-mid-dark-grey"},fm={key:0,class:"flex no-wrap"},mm={class:"w-1/2"},gm=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"}," Level ",-1),Om={class:"block font-helvetica text-16 spacing-2 line-26 text-mid-dark-grey mr-4"},jm=Object(c["h"])("div",{class:"w-1/2"},null,-1),vm={key:0,class:"mb-8"},ym={key:1,class:"mx-8 flex flex-col bg-light-red rounded-12 p-6"},xm={class:"flex justify-between items-start"},wm={class:"flex flex-col"},km=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-2"}," From ",-1),Cm={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},Sm={class:"font-helvetica text-14 text-red spacing-2 line-24"},_m={class:"flex flex-col"},qm=Object(c["h"])("span",{class:"font-helvetica text-14 text-grey spacing-44 line-28 mb-2"}," To ",-1),Dm={class:"font-helvetica-medium text-16 text-red spacing-23 line-24 mb-2"},$m={class:"font-helvetica text-14 text-red spacing-2 line-24"},Tm={key:2,class:"mx-8 mt-4"},Am={class:"flex flex-start items-center pointer-events-none"},Im=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16"}," Register to this course ",-1),Rm={class:"flex flex-start items-center pointer-events-none"},Pm=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16"}," Registration open on Evenium Platform ",-1),Mm={key:2,class:"relative flex flex-row justify-between items-center bg-transparent py-2"},Lm=Object(c["h"])("a",{href:"mailto:learn@limacorporate.com",class:"absolute top-0 left-0 w-full h-full",target:"_blank"},null,-1),Nm={class:"flex flex-start items-center pointer-events-none"},Bm=Object(c["h"])("span",{class:"font-helvetica-medium text-black text-16"}," Ask for more information ",-1),Em={class:"mx-8"},Vm={key:0,class:"mx-8 mt-4 flex justify-start"},Um={class:"flex flex-start items-center pointer-events-none px-8 w-full"},zm={class:"flex flex-col justify-between items-start"},Fm={class:"font-helvetica-medium text-dark-grey text-16 spacing-5 line-28"},Gm={class:"font-helvetica text-grey text-14 spacing-44 line-24"},Hm={key:0,class:"mx-8 mt-2 flex justify-start"},Wm={class:"mx-8 flex flex-col pt-8"};function Ym(e,t,n,s,r,a){var o=Object(c["y"])("video-gallery"),i=Object(c["y"])("big-button"),l=Object(c["y"])("ion-img"),u=Object(c["y"])("square-container"),d=Object(c["y"])("ion-list"),b=Object(c["y"])("separator"),p=Object(c["y"])("section-button"),h=Object(c["y"])("detail-section"),f=Object(c["y"])("image-gallery"),m=Object(c["y"])("document-list-item");return Object(c["q"])(),Object(c["e"])("div",Zf,[Object(c["h"])("div",em,[Object(c["h"])("div",tm,[Object(c["h"])("div",nm,[sm,Object(c["h"])("span",rm,Object(c["A"])(n.course.category?n.course.category.label:""),1)]),Object(c["h"])("div",am,[cm,Object(c["h"])("span",om,Object(c["A"])(n.course.segment&&n.course.segment.length?n.course.segment.join(", "):""),1)])]),Object(c["h"])("div",im,[Object(c["h"])("div",lm,[um,Object(c["h"])("span",dm,Object(c["A"])(n.course.location||"Online"),1)]),Object(c["h"])("div",bm,[pm,Object(c["h"])("span",hm,Object(c["A"])(n.course.language||""),1)])]),n.course.course_level?(Object(c["q"])(),Object(c["e"])("div",fm,[Object(c["h"])("div",mm,[gm,Object(c["h"])("span",Om,Object(c["A"])(n.course.course_level||""),1)]),jm])):Object(c["f"])("",!0)]),a.videoGallery&&a.videoGallery.length?(Object(c["q"])(),Object(c["e"])("div",vm,[Object(c["h"])(o,{"no-text":"",gallery:a.videoGallery},null,8,["gallery"])])):Object(c["f"])("",!0),n.course.save_outlook?(Object(c["q"])(),Object(c["e"])("div",ym,[Object(c["h"])("div",xm,[Object(c["h"])("div",wm,[km,Object(c["h"])("span",Cm,Object(c["A"])(n.course.save_outlook.start_date.date),1),Object(c["h"])("span",Sm,Object(c["A"])(n.course.save_outlook.start_date.time),1)]),Object(c["h"])("div",_m,[qm,Object(c["h"])("span",Dm,Object(c["A"])(n.course.save_outlook.end_date.date),1),Object(c["h"])("span",$m,Object(c["A"])(n.course.save_outlook.end_date.time),1)])]),n.course.save_outlook&&n.course.save_outlook.link?(Object(c["q"])(),Object(c["e"])(i,{key:0,bgClass:"mt-4",label:"Save in calendar",onOnClick:t[1]||(t[1]=function(e){return a.saveEvent()})})):Object(c["f"])("",!0)])):Object(c["f"])("",!0),n.course.show_register||n.course.evenium||n.course.show_learn_contact?(Object(c["q"])(),Object(c["e"])("div",Tm,[Object(c["h"])(d,{class:"bg-transparent"},{default:Object(c["D"])((function(){return[n.course.show_register?(Object(c["q"])(),Object(c["e"])("div",{key:0,class:" flex flex-row justify-between items-center bg-transparent py-2",onClick:t[2]||(t[2]=function(t){return e.$emit("register")})},[Object(c["h"])("div",Am,[Object(c["h"])(u,{bgClass:"bg-light-grey",classes:"mr-2",squareSize:"44"},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{src:"/assets/button-icons/register-black.svg"})]})),_:1}),Im])])):Object(c["f"])("",!0),n.course.evenium?(Object(c["q"])(),Object(c["e"])("div",{key:1,class:" flex flex-row justify-between items-center bg-transparent py-2",onClick:t[3]||(t[3]=function(){return a.openLink&&a.openLink.apply(a,arguments)})},[Object(c["h"])("div",Rm,[Object(c["h"])(u,{bgClass:"bg-light-grey",classes:"mr-2",squareSize:"44"},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{src:"/assets/button-icons/evenium-black.svg"})]})),_:1}),Pm])])):Object(c["f"])("",!0),n.course.show_learn_contact?(Object(c["q"])(),Object(c["e"])("div",Mm,[Lm,Object(c["h"])("div",Nm,[Object(c["h"])(u,{bgClass:"bg-light-grey",classes:"mr-2",squareSize:"44"},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{src:"/assets/button-icons/letter-black.svg"})]})),_:1}),Bm])])):Object(c["f"])("",!0)]})),_:1})])):Object(c["f"])("",!0),Object(c["h"])("div",Em,[Object(c["h"])(b,{topMargin:""})]),a.formattedDescription&&a.formattedDescription.length?(Object(c["q"])(),Object(c["e"])(h,{key:3,label:"Description"},{default:Object(c["D"])((function(){return[Object(c["h"])("p",{class:["px-8 font-helvetica text-mid-dark-grey text-16 spacing-1 line-24 mb-4",r.isReadMore||"clamped"],innerHTML:a.formattedDescription},null,10,["innerHTML"]),a.formattedDescription&&a.formattedDescription.length?(Object(c["q"])(),Object(c["e"])("div",Vm,[Object(c["h"])(p,{label:r.isReadMore?"Read less":"Read more",onOnClick:t[4]||(t[4]=function(e){return r.isReadMore=!r.isReadMore})},null,8,["label"])])):Object(c["f"])("",!0)]})),_:1})):Object(c["f"])("",!0),n.course.speakers&&n.course.speakers.length?(Object(c["q"])(),Object(c["e"])(h,{key:4,label:"Speakers"},{default:Object(c["D"])((function(){return[Object(c["h"])(d,{class:"bg-transparent pb-0 mb-0"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.speakersArray,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"flex flex-row justify-between items-center bg-transparent mb-4",key:t},[Object(c["h"])("div",Um,[Object(c["h"])(u,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 overflow-hidden"},{default:Object(c["D"])((function(){return[Object(c["h"])(l,{src:e.preview,class:"w-full h-full"},null,8,["src"])]})),_:2},1024),Object(c["h"])("div",zm,[Object(c["h"])("span",Fm,Object(c["A"])(e.name),1),Object(c["h"])("span",Gm,Object(c["A"])(e.country),1)])])])})),128))]})),_:1}),a.showViewAll?(Object(c["q"])(),Object(c["e"])("div",Hm,[Object(c["h"])(p,{label:r.isViewAll?"View less":"View all",onOnClick:t[5]||(t[5]=function(e){return r.isViewAll=!r.isViewAll})},null,8,["label"])])):Object(c["f"])("",!0)]})),_:1})):Object(c["f"])("",!0),a.imageGallery&&a.imageGallery.length?(Object(c["q"])(),Object(c["e"])(h,{key:5,label:"Images"},{default:Object(c["D"])((function(){return[Object(c["h"])(f,{gallery:a.imageGallery},null,8,["gallery"])]})),_:1})):Object(c["f"])("",!0),n.course.files&&n.course.files.length?(Object(c["q"])(),Object(c["e"])(h,{key:6,label:"Documents"},{default:Object(c["D"])((function(){return[Object(c["h"])("div",Wm,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(n.course.files,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"mb-4",key:t},[Object(c["h"])(m,{type:"my",document:e,actions:e.actions},null,8,["document","actions"])])})),128))])]})),_:1})):Object(c["f"])("",!0)])}var Jm={components:{IonImg:i["d"],IonList:i["f"],Separator:lr,BigButton:en,ImageGallery:Sl,VideoGallery:Ol,SectionButton:nr,DetailSection:mr,SquareContainer:Vt,DocumentListItem:yn},mixins:[On],props:{course:{type:Object}},data:function(){return{isReadMore:!1,isViewAll:!1}},computed:{formattedDescription:function(){return this.course.description&&this.course.description.length?this.sanitizeManageText(this.course.description):""},showViewAll:function(){return this.course.speakers&&this.course.speakers.length>3},speakersArray:function(){return this.showViewAll&&!this.isViewAll?this.course.speakers.slice(0,3):this.course.speakers||[]},imageGallery:function(){return this.course.images||[]},videoGallery:function(){return this.course.videos||[]}},methods:{saveEvent:function(){this.logEvent("Course","save in Calendar","Learn detail ".concat(this.course.title)),window.open(this.course.save_outlook.link)},openLink:function(){window.open(this.course.evenium)}}};const Km=d()(Jm,[["render",Ym]]);var Xm=Km,Qm={class:"flex flex-col"},Zm={class:"p-8 bg-light-red flex flex-col rounded-8 mb-4"},eg={class:"block mb-2 font-helvetica text-14 text-red spacing-2 line-24"},tg={class:"block mb-4 font-helvetica-medium text-16 text-dark-grey spacing-4 line-24"},ng={class:"flex flex-start items-center pointer-events-none w-full"},sg={class:"flex flex-col justify-between items-start"},rg={class:"font-helvetica-medium text-dark-grey text-16 spacing-5 line-28"},ag={class:"font-helvetica text-grey text-14 spacing-44 line-24"},cg={class:"flex flex-col pt-8"};function og(e,t,n,s,r,a){var o=Object(c["y"])("separator"),i=Object(c["y"])("ion-img"),l=Object(c["y"])("square-container"),u=Object(c["y"])("ion-list"),d=Object(c["y"])("big-button"),b=Object(c["y"])("document-list-item"),p=Object(c["y"])("accordions-list");return Object(c["q"])(),Object(c["e"])(p,{classes:"mt-4 px-8",list:a.list},{default:Object(c["D"])((function(t){var s=t.item;return[Object(c["h"])("div",Qm,[Object(c["h"])("div",Zm,[Object(c["h"])("div",null,[Object(c["h"])("span",eg,Object(c["A"])(s.time),1),Object(c["h"])("span",tg,Object(c["A"])(s.title),1)]),s.speakers&&s.speakers.length?(Object(c["q"])(),Object(c["e"])(o,{key:0,noYMargin:""})):Object(c["f"])("",!0),Object(c["h"])(u,{class:"bg-transparent py-0 mt-4"},{default:Object(c["D"])((function(){return[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(s.speakers,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:["flex flex-row justify-between items-center bg-transparent",t===s.speakers.length-1||"mb-4"],key:t},[Object(c["h"])("div",ng,[Object(c["h"])(l,{bgClass:"bg-white",squareSize:"64",rounded:"12",classes:"mr-4 overflow-hidden"},{default:Object(c["D"])((function(){return[Object(c["h"])(i,{src:e.preview,class:"w-full h-full"},null,8,["src"])]})),_:2},1024),Object(c["h"])("div",sg,[Object(c["h"])("span",rg,Object(c["A"])(e.name),1),Object(c["h"])("span",ag,Object(c["A"])(e.country),1)])])],2)})),128))]})),_:2},1024),n.course.show_register?(Object(c["q"])(),Object(c["e"])(o,{key:1,noYMargin:""})):Object(c["f"])("",!0),n.course.show_register?(Object(c["q"])(),Object(c["e"])(d,{key:2,bgClass:"mt-4",label:"Register to this course",onOnClick:function(t){return e.$emit("register",s)}},null,8,["onOnClick"])):Object(c["f"])("",!0)]),Object(c["h"])("p",{class:"font-helvetica-normal text-mid-dark-grey text-16 spacing-1 line-24 mt-4",innerHTML:s.description},null,8,["innerHTML"]),Object(c["h"])("div",cg,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(s.files,(function(e,t){return Object(c["q"])(),Object(c["e"])("div",{class:"mb-4",key:t},[Object(c["h"])(b,{type:"my",document:e,actions:e.actions},null,8,["document","actions"])])})),128))])])]})),_:1},8,["list"])}var ig={name:"Agenda",components:{BigButton:en,Separator:lr,AccordionsList:Wi,SquareContainer:Vt,DocumentListItem:yn},props:{course:{type:Object}},computed:{list:function(){if(this.course&&this.course.days&&this.course.days.length){var e=this.course.days.map((function(e){return{name:e.date_text,childs:[Object(r["a"])({},e)],count:null}}));return console.log(e),e}return[]}}};const lg=d()(ig,[["render",og]]);var ug=lg,dg={key:0,class:"fixed top-0 left-0 w-full h-full",style:{"z-index":"50"}},bg={class:"w-full h-full relative pt-20 gradient-background"},pg={class:"flex flex-col px-8"},hg=Object(c["g"])(" Register to this course "),fg={class:"relative flex flex-col"},mg=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"},[Object(c["g"])(" Select days"),Object(c["h"])("span",{class:"text-red"},"*")],-1),gg={class:"flex flex-wrap mt-1 mb-2 text-black"},Og={class:"square rounded-4 mr-2 width-24 height-24 relative flex"},jg={class:"block text-black font-helvetica-medium text-16 spacing-5 line-30"},vg={class:"flex flex-col mb-2"},yg=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"},[Object(c["g"])(" Your name"),Object(c["h"])("span",{class:"text-red"},"*")],-1),xg={class:"flex flex-col mb-2"},wg=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"},[Object(c["g"])(" Email"),Object(c["h"])("span",{class:"text-red"},"*")],-1),kg={class:"flex flex-col mb-2"},Cg=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"}," Hospital ",-1),Sg={class:"flex flex-col mb-2"},_g=Object(c["h"])("span",{class:"block font-helvetica text-14 spacing-44 line-20 text-grey"}," Category ",-1),qg={class:"mx-8"},Dg={class:"mb-4"},$g={class:"block text-black font-helvetica-normal text-14 spacing-4 line-18"},Tg=Object(c["g"])(" I read the "),Ag=Object(c["g"])(" and I authorize the use of personal data under the Reg.UE 2016/679 (GDPR)"),Ig=Object(c["h"])("span",{class:"text-red"},"*",-1),Rg={class:"mb-4"},Pg={class:"block text-black font-helvetica-normal text-14 spacing-4 line-18"},Mg=Object(c["g"])(" I read the "),Lg=Object(c["g"])(" and I authorize the use of personal data under the Reg.UE 2016/679 (GDPR)"),Ng=Object(c["h"])("span",{class:"text-red"},"*",-1),Bg={class:"w-full px-8 pb-4"};function Eg(e,t,n,s,r,a){var o=Object(c["y"])("ion-img"),i=Object(c["y"])("ion-button"),l=Object(c["y"])("Title"),u=Object(c["y"])("ion-input"),d=Object(c["y"])("custom-select"),b=Object(c["y"])("custom-checkbox"),p=Object(c["y"])("big-button");return r.isOpened?(Object(c["q"])(),Object(c["e"])("div",dg,[Object(c["h"])("div",bg,[Object(c["h"])("div",{class:"bg-transparent absolute top-0 left-0 flex px-8 w-full z-10",style:a.isIos?"margin-top:35px;height:70px;min-height:70px;":"height:90px;min-height:90px;"},[Object(c["h"])(i,{type:"button",class:"relative mr-auto my-auto back-button",onClick:a.close},{default:Object(c["D"])((function(){return[Object(c["h"])(o,{src:"/assets/button-icons/close.svg",className:"pointer-events-none"})]})),_:1},8,["onClick"])],4),Object(c["h"])("form",{class:"flex h-full flex-col justify-between",onSubmit:t[10]||(t[10]=function(){return a.onSubmit&&a.onSubmit.apply(a,arguments)})},[Object(c["h"])("div",pg,[Object(c["h"])(l,{titleClass:"pb-8 text-black font-helvetica-bold text-28 block"},{default:Object(c["D"])((function(){return[hg]})),_:1}),Object(c["h"])("div",fg,[mg,Object(c["h"])("div",gg,[(Object(c["q"])(!0),Object(c["e"])(c["a"],null,Object(c["w"])(a.daysOptions,(function(e){return Object(c["q"])(),Object(c["e"])("div",{key:e.label,class:[(r.form.days||[]).includes(e.value)?"bg-white course-card-internal-shadow selected":"bg-light-grey","mr-2 mb-2 px-4 py-2 rounded-8 flex no-wrap items-center checkbox cursor-pointer"],onClick:function(t){return a.selectDay(e)}},[Object(c["h"])("div",Og,[Object(c["h"])(o,{src:"/assets/button-icons/check-white.svg",class:"check"})]),Object(c["h"])("span",jg,Object(c["A"])(e.label),1)],10,["onClick"])})),128))])]),Object(c["h"])("div",vg,[yg,Object(c["h"])(u,{required:"",type:"text",class:"input-filled font-helvetica text-16 spacing-5 line-28 text-black my-2",modelValue:r.form.name,"onUpdate:modelValue":t[1]||(t[1]=function(e){return r.form.name=e})},null,8,["modelValue"])]),Object(c["h"])("div",xg,[wg,Object(c["h"])(u,{required:"",type:"email",class:"input-filled font-helvetica text-16 spacing-5 line-28 text-black my-2",modelValue:r.form.email,"onUpdate:modelValue":t[2]||(t[2]=function(e){return r.form.email=e})},null,8,["modelValue"])]),Object(c["h"])("div",kg,[Cg,Object(c["h"])(u,{type:"text",class:"input-filled font-helvetica text-16 spacing-5 line-28 text-black my-2",modelValue:r.form.hospital,"onUpdate:modelValue":t[3]||(t[3]=function(e){return r.form.hospital=e})},null,8,["modelValue"])]),Object(c["h"])("div",Sg,[_g,Object(c["h"])(d,{name:"category",classes:"input-filled font-helvetica text-16 spacing-5 line-28 text-black my-2",value:r.form.category,options:r.categoryOptions,onOnChange:t[4]||(t[4]=function(e){return r.form.category=e})},null,8,["value","options"])])]),Object(c["h"])("div",qg,[Object(c["h"])("div",Dg,[Object(c["h"])(b,{required:"",modelValue:r.privacy,"onUpdate:modelValue":t[6]||(t[6]=function(e){return r.privacy=e})},{label:Object(c["D"])((function(){return[Object(c["h"])("span",$g,[Tg,Object(c["h"])("span",{class:"text-black font-helvetica-medium",onClick:t[5]||(t[5]=function(){return a.routeToPrivacy&&a.routeToPrivacy.apply(a,arguments)})}," Privacy Policy "),Ag,Ig])]})),_:1},8,["modelValue"])]),Object(c["h"])("div",Rg,[Object(c["h"])(b,{required:"",modelValue:r.audio,"onUpdate:modelValue":t[8]||(t[8]=function(e){return r.audio=e})},{label:Object(c["D"])((function(){return[Object(c["h"])("span",Pg,[Mg,Object(c["h"])("span",{class:"text-black font-helvetica-medium",onClick:t[7]||(t[7]=function(){return a.routeToPrivacy&&a.routeToPrivacy.apply(a,arguments)})}," Privacy Policy "),Lg,Ng])]})),_:1},8,["modelValue"])]),Object(c["h"])(b,{modelValue:r.form.newsletter,"onUpdate:modelValue":t[9]||(t[9]=function(e){return r.form.newsletter=e}),label:"I would like to receive information about products, services and events"},null,8,["modelValue"])]),Object(c["h"])("div",Bg,[Object(c["h"])(p,{type:"Register",label:"Done",disabled:!a.canSubmitForm},null,8,["disabled"])])],32)])])):Object(c["f"])("",!0)}var Vg=n("2909"),Ug={class:"square rounded-4 mr-2 width-24 height-24 relative flex"},zg={class:"block text-black font-helvetica-normal text-14 spacing-4 line-18"},Fg={key:0,class:"text-red"};function Gg(e,t,n,s,r,a){var o=Object(c["y"])("ion-img");return Object(c["q"])(),Object(c["e"])("div",{class:[!n.modelValue||"selected","mb-2 flex items-start checkbox cursor-pointer"],onClick:t[1]||(t[1]=function(){return a.onClick&&a.onClick.apply(a,arguments)})},[Object(c["h"])("div",Ug,[Object(c["h"])(o,{src:"/assets/button-icons/check-white.svg",class:"check"})]),Object(c["x"])(e.$slots,"label",{},(function(){return[Object(c["h"])("span",zg,[Object(c["g"])(Object(c["A"])(n.label),1),n.required?(Object(c["q"])(),Object(c["e"])("span",Fg,"*")):Object(c["f"])("",!0)])]}))],2)}var Hg={name:"CustomCheckbox",components:{IonImg:i["d"]},props:{required:{type:Boolean},modelValue:{type:Boolean},label:{type:String}},methods:{onClick:function(e){e.preventDefault(),this.$emit("update:modelValue",!this.modelValue)}}};const Wg=d()(Hg,[["render",Gg]]);var Yg=Wg,Jg={components:{Title:ae,IonImg:i["d"],IonInput:i["e"],BigButton:en,IonButton:i["b"],CustomSelect:Zn,CustomCheckbox:Yg},props:{course:{type:Object},selectedDay:{type:Object},open:{type:Boolean}},data:function(){return{form:{},audio:!1,privacy:!1,isOpened:!1,categoryOptions:[{value:"surgeon",label:"Surgeon"},{value:"staff",label:"Staff"}]}},computed:{isIos:function(){return!(!S["a"]||!S["a"].getPlatform()||"ios"!==S["a"].getPlatform())},daysOptions:function(){return this.course&&this.course.days?this.course.days.map((function(e){return{value:e.date_value,label:e.date_text}})):[]},canSubmitForm:function(){return this.form.days&&this.form.days.length&&this.form.name&&this.form.email&&this.privacy&&this.audio}},methods:{routeToPrivacy:function(){this.$store.commit("setModalOpen",!1),this.$router.push("/privacy")},close:function(){this.$store.commit("setModalOpen",!1),this.$emit("onClose")},onSubmit:function(e){var t=this;return Object(a["a"])(regeneratorRuntime.mark((function n(){var s,a;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return e.preventDefault(),s=Object(r["a"])(Object(r["a"])({},t.form),{},{id:t.course.id}),n.prev=2,n.next=5,t.$http({method:"POST",url:ct.learn.register,data:s});case 5:a=n.sent,console.debug(a),t.$toast({message:at.learnRegisterSuccessful,color:"dark"}),t.close(),n.next=15;break;case 11:n.prev=11,n.t0=n["catch"](2),console.error(n.t0),t.$toast({message:at.errors.learnRegister,color:"danger"});case 15:case"end":return n.stop()}}),n,null,[[2,11]])})))()},selectDay:function(e){if(this.form.days&&this.form.days.length){var t=Object(Vg["a"])(this.form.days),n=this.form.days.indexOf(e.value);n>-1?t.splice(n,1):t.push(e.value),this.form.days=t}else this.form.days=[e.value]}},watch:{open:function(e){this.$store.commit("setModalOpen",e),this.isOpened=e,e&&this.selectedDay&&this.selectedDay.date_value&&(this.form.days=[this.selectedDay.date_value])}}};const Kg=d()(Jg,[["render",Eg]]);var Xg=Kg,Qg={name:"CourseDetail",components:{Page:ys,Detail:Xm,Agenda:ug,Carousel:he,RegisterModal:Xg,SectionButton:nr},mixins:[On],data:function(){return{course:{},section:"info",sections:[{label:"Info",path:"info"},{label:"Agenda",path:"agenda"}],selectedDay:null,isRegisterOpened:!1}},computed:{gradient:function(){if(this.course&&this.course.category)switch(this.course.category.class){case"course":return"gradient-background-orange";case"online":return"gradient-background-green";case"third":return"gradient-background-cyan";default:return""}return""},typeName:function(){if(this.course&&this.course.category)switch(this.course.category.class){case"course":return"Course";case"online":return"Online course";case"third":return"3rd-Party event";default:return"Other"}return"Other"},bgColor:function(){if(this.course&&this.course.category)switch(this.course.category.class){case"course":return"bg-orange";case"online":return"bg-green";case"third":return"bg-cyan";default:return"bg-light-grey"}return"bg-light-grey"},shareObject:function(){var e=(this.course.title||"course").toLowerCase().replace(/[^\w ]+/g,"").replace(/ +/g,"-");return{actionCategory:"Course",title:this.course.title,text:'Look at the course "'.concat(this.course.title,'"'),url:"https://limacorporate.com/en/learn-event/".concat(this.course.id,"/").concat(e,".html"),dialogTitle:"Share course"}}},created:function(){var e=this;return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.$route.params.id){t.next=15;break}return t.prev=1,t.next=4,e.$http({method:"GET",url:ct.learn.list+"/"+e.$route.params.id,params:{}});case 4:n=t.sent,n&&(e.course=n,setTimeout((function(){e.cleanParagraphs()}),500)),e.logPage(n&&n.title?n.title+" (Learn detail)":"Learn detail"),t.next=13;break;case 9:t.prev=9,t.t0=t["catch"](1),console.error(t.t0),e.$toast({message:at.errors.learnDetail,color:"danger"});case 13:t.next=18;break;case 15:console.error("No course id in route"),e.$toast({message:at.errors.learnDetail,color:"danger"}),e.$router.back();case 18:case"end":return t.stop()}}),t,null,[[1,9]])})))()},methods:{onRegister:function(e){this.selectedDay=e,this.isRegisterOpened=!0},onClose:function(){this.isRegisterOpened=!1},routeToSection:function(e){this.section=e}}};const Zg=d()(Qg,[["render",Qf]]);var eO=Zg,tO=n("5502");function nO(e,t,n,s,r,a){if(t)e.$router.push("/terms");else if(n)e.$router.push("/onboarding");else if(s)e.$router.push("/new/update/"+s);else if(r){var c=r;e.$store.commit("setLaunchUrl",null),e.$router.push(c)}else if(a){var o=a;e.$store.commit("setNotificationToShow",null),e.$router.push(o)}else e.$router.push("/home")}function sO(e){return rO.apply(this,arguments)}function rO(){return rO=Object(a["a"])(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(e.prev=0,S["a"].getPlatform()&&"web"===S["a"].getPlatform()){e.next=4;break}return e.next=4,t.dispatch("syncOneSignal",t);case 4:e.next=9;break;case 6:e.prev=6,e.t0=e["catch"](0),console.error(e.t0);case 9:console.log("state",t,t.state),nO(this.$app,t.getters.needToAcceptTerms,t.getters.needOnboarding,t.getters.gotUpdatesToShow,t.getters.formattedLaunchUrl,t.getters.gotNotificationToShow);case 11:case"end":return e.stop()}}),e,this,[[0,6]])}))),rO.apply(this,arguments)}function aO(e,t){return cO.apply(this,arguments)}function cO(){return cO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:this.$app.$matomo.setScreen(n),this.$app.$matomo.trackView();case 2:case"end":return e.stop()}}),e,this)}))),cO.apply(this,arguments)}function oO(e){e.commit("setUserData",!1),this.$app.$matomo.reset(),this.$app.$matomo.logEvent("logout"),window.localStorage.setItem("JWT",""),this.$app.$router.push("/login")}function iO(e,t){return lO.apply(this,arguments)}function lO(){return lO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var s,a,c;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.prev=0,n=Object(r["a"])({},n),e.next=4,this.$app.$http({method:"POST",url:ct.auth.login,data:n,loader:!1});case 4:if(s=e.sent,a=Object.assign({},s.user),t.commit("setUserData",a),t.commit("setNeedToAcceptTerms",s.need_accept_terms),t.commit("setOnboarding",s.onboarding),t.commit("setNotifications",s.push),t.commit("setAppUpdates",s.update_id),window.localStorage.setItem("JWT",s.jwt),c=a.id,this.$app.$matomo.setUserId(c),this.$app.$matomo.logEvent("login",{}),e.prev=15,S["a"].getPlatform()&&"web"===S["a"].getPlatform()){e.next=27;break}return e.prev=17,e.next=20,this.$app.$matomo.logEvent("login",{});case 20:e.next=25;break;case 22:e.prev=22,e.t0=e["catch"](17),console.error("LOGIN MATOMO ERROR",e.t0);case 25:return e.next=27,t.dispatch("syncOneSignal",t);case 27:e.next=32;break;case 29:e.prev=29,e.t1=e["catch"](15),console.error(e.t1);case 32:nO(this.$app,t.getters.needToAcceptTerms,t.getters.needOnboarding,t.getters.gotUpdatesToShow,t.getters.formattedLaunchUrl,t.getters.gotNotificationToShow),e.next=39;break;case 35:throw e.prev=35,e.t2=e["catch"](0),this.$app.$toast({message:at.errors.cannotLogin,color:"danger"}),e.t2;case 39:case"end":return e.stop()}}),e,this,[[0,35],[15,29],[17,22]])}))),lO.apply(this,arguments)}function uO(e){return dO.apply(this,arguments)}function dO(){return dO=Object(a["a"])(regeneratorRuntime.mark((function e(t){var n,s,r,a,c=arguments;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=c.length>1&&void 0!==c[1]&&c[1],e.prev=1,e.next=4,this.$app.$http({method:"POST",url:ct.auth.loginWithToken,loader:!1});case 4:if(s=e.sent,console.debug("WELCOME"),r=Object.assign({},s.user),t.commit("setUserData",r),t.commit("setNeedToAcceptTerms",s.need_accept_terms),t.commit("setOnboarding",s.onboarding),t.commit("setNotifications",s.push),t.commit("setAppUpdates",s.update_id),window.localStorage.setItem("JWT",s.jwt),n||(a=r.id,this.$app.$matomo.setUserId(a),this.$app.$matomo.logEvent("login",{})),e.prev=14,n||S["a"].getPlatform()&&"web"===S["a"].getPlatform()){e.next=27;break}if(n){e.next=25;break}return e.prev=17,e.next=20,this.$app.$matomo.logEvent("login",{});case 20:e.next=25;break;case 22:e.prev=22,e.t0=e["catch"](17),console.error("LOGIN MATOMO ERROR",e.t0);case 25:return e.next=27,t.dispatch("syncOneSignal",t);case 27:e.next=32;break;case 29:e.prev=29,e.t1=e["catch"](14),console.error(e.t1);case 32:nO(this.$app,t.getters.needToAcceptTerms,t.getters.needOnboarding,t.getters.gotUpdatesToShow,t.getters.formattedLaunchUrl,t.getters.gotNotificationToShow),e.next=39;break;case 35:throw e.prev=35,e.t2=e["catch"](1),this.$app.$toast({message:at.errors.cannotLogin,color:"danger"}),e.t2;case 39:case"end":return e.stop()}}),e,this,[[1,35],[14,29],[17,22]])}))),dO.apply(this,arguments)}function bO(){return pO.apply(this,arguments)}function pO(){return pO=Object(a["a"])(regeneratorRuntime.mark((function e(){var t,n,s,r,a;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.$app.$onesignal.getUID();case 3:return t=e.sent,e.next=6,this.$app.$device.getInfo();case 6:return n=e.sent,e.next=9,this.$app.$device.getId();case 9:return s=e.sent,e.next=12,this.$app.$device.getAppInfo();case 12:return r=e.sent,e.next=15,this.$app.$http({method:"POST",url:ct.users.deviceInfo,loader:!1,data:{uuid:s.uuid,os:n.platform,device:"".concat(n.platform," ").concat(n.osVersion," - ").concat(n.model),push_id:t,browser:window.navigator.userAgent||window.navigator.appVersion,app_version:r.version}});case 15:a=e.sent,console.debug(a),e.next=23;break;case 19:e.prev=19,e.t0=e["catch"](0),console.error(e.t0),this.$app.$toast({message:at.errors.deviceInfo,color:"danger"});case 23:case"end":return e.stop()}}),e,this,[[0,19]])}))),pO.apply(this,arguments)}function hO(e){return fO.apply(this,arguments)}function fO(){return fO=Object(a["a"])(regeneratorRuntime.mark((function e(t){var n,s;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=[],e.prev=1,e.next=4,this.$app.$http({method:"GET",url:ct.notifications.list,params:{}});case 4:s=e.sent,n=s,e.next=11;break;case 8:e.prev=8,e.t0=e["catch"](1),this.$app.$toast({message:at.errors.home,color:"danger"});case 11:t.commit("setNotifications",n);case 12:case"end":return e.stop()}}),e,this,[[1,8]])}))),fO.apply(this,arguments)}function mO(e){return gO.apply(this,arguments)}function gO(){return gO=Object(a["a"])(regeneratorRuntime.mark((function e(t){var n,s,r,a,c,o,i,l,u,d,b,p,h;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=[],s=[],r=[],a=[],c={my:[],shared:[]},e.prev=5,e.next=8,this.$app.$http({method:"GET",url:ct.products.segments,params:{},loader:!1});case 8:return o=e.sent,o&&o.categories&&(n=o.categories),e.next=12,this.$app.$http({method:"GET",url:ct.congresses.home,params:{},loader:!1});case 12:return i=e.sent,s=i,e.next=16,this.$app.$http({method:"GET",url:ct.notifications.list,params:{},loader:!1});case 16:return l=e.sent,r=l,e.next=20,this.$app.$http({method:"GET",url:ct.news.home,params:{},loader:!1});case 20:return u=e.sent,a=u,e.next=24,this.$app.$http({method:"GET",url:ct.documents.list_my,params:{},loader:!1});case 24:return d=e.sent,c.my=d.list,e.next=28,this.$app.$http({method:"GET",url:ct.documents.list_shared,params:{},loader:!1});case 28:return b=e.sent,c.shared=b.list,e.next=32,this.$app.$http({method:"GET",url:ct.documents.list_us,params:{},loader:!1});case 32:p=e.sent,c.us=p.list,e.next=39;break;case 36:e.prev=36,e.t0=e["catch"](5),this.$app.$toast({message:at.errors.home,color:"danger"});case 39:h={products:n,congresses:s,news:a,documents:{my:c.my.slice(0,3),shared:c.shared.slice(0,3),us:c.us.slice(0,3)}},t.commit("setHome",h),t.commit("setDocuments",c),t.commit("setNotifications",r);case 43:case"end":return e.stop()}}),e,this,[[5,36]])}))),gO.apply(this,arguments)}function OO(e,t){return jO.apply(this,arguments)}function jO(){return jO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var s;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.$app.$http({method:"GET",url:"".concat(ct.list.messages).concat(t.getters.roundId?"?roundId=".concat(t.getters.roundId):""),loader:!!t.getters.roundId});case 3:s=e.sent,t.commit("setMessages",(s||{}).data||{}),e.next=10;break;case 7:e.prev=7,e.t0=e["catch"](0),this.$app.$toast({message:at.errors.cannotGetMessages,color:"danger"});case 10:n&&n.target.complete&&n.target.complete();case 11:case"end":return e.stop()}}),e,this,[[0,7]])}))),jO.apply(this,arguments)}function vO(e,t){return yO.apply(this,arguments)}function yO(){return yO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var s,r,a;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return s=n.id,r=n.status,a=void 0===r?1:r,e.next=3,this.$app.$http({method:"POST",url:ct.list.messages,loader:!1,data:{messageId:s,status:a}});case 3:case"end":return e.stop()}}),e,this)}))),yO.apply(this,arguments)}function xO(e,t){return wO.apply(this,arguments)}function wO(){return wO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var s,r;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return s=n.id,r=n.reply,e.next=3,this.$app.$http({method:"POST",url:ct.list.reply,data:{messageId:s,reply:r}});case 3:case"end":return e.stop()}}),e,this)}))),wO.apply(this,arguments)}var kO=window.localStorage.getItem("userData"),CO={state:{user:{data:kO?JSON.parse(kO):{},types:[],notificationsAllowed:"unknown"},home:{products:[],documents:{},meded:[],congresses:[],news:[]},messages:[],documents:{},launchUrl:null,notifications:[],appUpdates:null,onboarding:null,isModalOpen:!1,notificationToShow:null,need_accept_terms:null},mutations:{setUserData:function(e,t){if(!1===t||void 0===t)return window.localStorage.removeItem("userData"),void(e.user.data={});t.teams&&t.teams.constructor===String&&(t.teamsId=t.teams,delete t.teams),e.user.data=Object(r["a"])(Object(r["a"])({},e.user.data),t),window.localStorage.setItem("userData",JSON.stringify(e.user.data))},setMessages:function(e,t){e.messages.list=t},setNotifications:function(e,t){e.notifications=t},setNotificationToShow:function(e,t){e.notificationToShow=t},setOnboarding:function(e,t){e.onboarding=t},setNeedToAcceptTerms:function(e,t){e.need_accept_terms=t},setAppUpdates:function(e,t){e.appUpdates=t},setHome:function(e,t){e.home=t},setDocuments:function(e,t){e.documents=t},setModalOpen:function(e,t){e.isModalOpen=t},setLaunchUrl:function(e,t){e.launchUrl=t},setNotificationsAllowState:function(e,t){var n="no",s=t&&!0===t.hasPrompted&&(t.status>1||t.state>1);(this.$app.$device.getPlatform("ios")&&s||this.$app.$device.getPlatform("android"))&&(n="yes"),e.user.notificationsAllowed=n}},actions:s,getters:{notifError:function(e){return"no"===e.user.notificationsAllowed},loggedIn:function(e){return!!Object.keys(e.user.data).length||!1},messages:function(e){return e.messages.list||[]},roundId:function(e){return e.rounds.id},userData:function(e){var t=Object(r["a"])({},e.user.data)||{};for(var n in t)Pr.userDataBlacklist.includes(n)&&delete t[n];return t},needToAcceptTerms:function(e){return e.need_accept_terms||void 0===e.need_accept_terms},needOnboarding:function(e){return e.onboarding},gotNotifications:function(e){return e.notifications},showUS:function(e){return!!Object.keys(e.user.data).length&&"US"===e.user.data.certificate||!1},areNotificationsNotRead:function(e){var t=0;if(e.notifications&&e.notifications.length)for(var n=0;n<e.notifications.length;n++)e.notifications[n]&&!e.notifications[n].read&&(t+=1);return t},gotUpdatesToShow:function(e){return e.appUpdates},gotNotificationToShow:function(e){return e.notificationToShow},homeData:function(e){return e.home||{products:[],documents:{},meded:[],congresses:[],news:[]}},homeProducts:function(e){return e&&e.home&&e.home.products?e.home.products:[]},homeCongresses:function(e){return e&&e.home&&e.home.congresses?e.home.congresses:[]},homeNews:function(e){return e&&e.home&&e.home.news?e.home.news:[]},homeDocuments:function(e){return e&&e.home&&e.home.documents?e.home.documents:{my:[],shared:[],us:[]}},documents:function(e){return e&&e.documents?e.documents:[]},username:function(e){return e.user.data.username||""},userTypes:function(e){return e.user.types||[]},formattedLaunchUrl:function(e){return e.launchUrl?e.launchUrl.includes("limasales")?e.launchUrl.split("limasales:/")[1]:e.launchUrl:null}}},SO=Object(tO["a"])(CO),_O=[{path:"",redirect:"/login"},{path:"/login",component:E,children:[{path:"",name:"Login",component:Nr}]},{path:"/home",component:P,meta:{refreshAction:["getHome","loginWithToken"]},children:[{path:"",name:"Home",component:Tn}]},{path:"/terms",component:E,children:[{path:"",name:"Terms And Conditions",component:va}]},{path:"/onboarding",component:E,children:[{path:"",name:"OnBoarding",component:sa}]},{path:"/useful",component:D,children:[{path:"",name:"Useful Links",component:Hr,meta:{showBack:!0}}]},{path:"/news",component:D,children:[{path:"/news/:id",name:"News Detail",component:Vo,meta:{showBack:!0,customName:!0}},{path:"",name:"News",component:Po,meta:{showBack:!0}}]},{path:"/multimedia",component:D,children:[{path:"",name:"Multimedia",component:Uc}]},{path:"/new/update/:id",component:E,children:[{path:"",name:"Update",component:rc,meta:{customName:!0}}]},{path:"/new",component:D,children:[{path:"",name:"What's New",component:ec,meta:{showBack:!0}}]},{path:"/menu",component:D,children:[{path:"",name:"Menu",component:ks,meta:{showWizard:!0}}]},{path:"/search",component:D,children:[{path:"",name:"Search",component:jr}]},{path:"/privacy",component:D,children:[{path:"",name:"Privacy",component:Wc}]},{path:"/contacts",component:D,children:[{path:"",name:"Contacts",component:_o}]},{path:"/documents",component:D,children:[{path:"/documents/folder/:id",name:"Folder",component:_i,meta:{showBack:!0,customName:!0}},{path:"",name:"Documents",component:xi,meta:{showBack:!0}}]},{path:"/products",component:D,children:[{path:"/products/detail/:id/components",name:"Products Detail Components",component:Jl,meta:{showBack:!0,customName:!0,section:"components"}},{path:"/products/detail/:id/documents",name:"Products Detail Documents",component:Jl,meta:{showBack:!0,customName:!0,section:"documents"}},{path:"/products/detail/:id",name:"Products Detail",component:Jl,meta:{showBack:!0,customName:!0}},{path:"/products/detail/component/:id",name:"Component Detail",component:gu,meta:{showBack:!0,customName:!0}},{path:"/products/category/:category",name:"Product Category",component:rl,meta:{showBack:!0,customName:!0}},{path:"/products/:segment",name:"Product Segment",component:Ki,meta:{showBack:!0,customName:!0}},{path:"",name:"Products",component:Ri}]},{path:"/congresses",component:D,children:[{path:"/congresses/activities/:id",name:"Activity Detail",component:Lp,meta:{showBack:!0,customName:!0}},{path:"/congresses/:id/",name:"Congress Detail",component:sp,meta:{showBack:!0,customName:!0}},{path:"",name:"Congresses",component:Au}]},{path:"/training",component:D,children:[{path:"/training/:id/",name:"Sales Training Detail",component:jf,meta:{showBack:!0,customName:!0}},{path:"",name:"Sales Training",component:Hp}]},{path:"/learn",component:D,children:[{path:"/learn/list/:id/",name:"Course Detail",component:eO,meta:{showBack:!0,customName:!0}},{path:"/learn/:id/",name:"Course Detail",component:eO,meta:{showBack:!0,customName:!0}},{path:"/learn/list",name:"Course List",component:Jf},{path:"/learn",name:"Learn Landing",component:Sf}]},{path:"/:catchAll(.*)",redirect:"/home"}],qO=Object(f["a"])({history:Object(i["t"])("capacitor")?Object(f["c"])("/"):Object(f["b"])(),routes:_O});qO.beforeEach((function(e,t,n){var s;"/login"===e.path||"/privacy"===e.path||SO.getters.loggedIn||SO.dispatch("logout"),null!==e&&void 0!==e&&null!==(s=e.meta)&&void 0!==s&&s.customName||SO.dispatch("logScreenView",e),n()}));var DO=qO,$O=n("e2c7");n("4b63"),n("4041"),n("51ef"),n("a237"),n("e09e"),n("46e5"),n("98b6"),n("2d22"),n("66b0"),n("ce1f"),n("8c28"),n("f1c0"),n("ab74"),n("51df");function TO(e,t){return AO.apply(this,arguments)}function AO(){return AO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var s;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return s=n.to,e.next=3,t.$store.dispatch("newNotificationsState",s);case 3:case"end":return e.stop()}}),e)}))),AO.apply(this,arguments)}function IO(e,t){return RO.apply(this,arguments)}function RO(){return RO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var s;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:console.log("Notification received",t,n),n.notification&&n.notification&&n.notification.launchURL?(s=n.notification.launchURL,s=s.split("limasales:/")[1],t.$router.push(s)):t.$bg.wakeUp();case 2:case"end":return e.stop()}}),e)}))),RO.apply(this,arguments)}function PO(e,t){return MO.apply(this,arguments)}function MO(){return MO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var s,r;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:console.log("Opened notification",t,n),n.notification&&(s=n.notification,s&&s.launchURL&&(r=s.launchURL,console.log("NOTIFICATION",s,t.$store.getters.loggedIn,r),r=r.split("limasales:/")[1],t.$store.getters.loggedIn?(t.$router.push(r),t.$store.commit("setLaunchUrl",r)):(t.$store.commit("setLaunchUrl",s.launchURL),t.$store.commit("setNotificationToShow",r))));case 2:case"end":return e.stop()}}),e)}))),MO.apply(this,arguments)}function LO(e,t){return NO.apply(this,arguments)}function NO(){return NO=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(!0!==n.isActive||t.$store.getters.loggedIn||!window.localStorage.getItem("JWT")){e.next=3;break}return e.next=3,t.$store.dispatch("loginWithToken");case 3:if(!0!==n.isActive||!t.$store.getters.loggedIn||!0!==t.$route.meta.refreshOnOpen){e.next=6;break}return e.next=6,t.$store.dispatch("getMessages");case 6:case"end":return e.stop()}}),e)}))),NO.apply(this,arguments)}function BO(e,t,n){"background"===e.$route.meta.backAction?e.$bg.moveToBg():"exit"===e.$route.meta.backAction&&n.exitApp()}n("498a"),n("a630"),n("3ca3"),n("4e82");function EO(e){return e.charAt(0).toUpperCase()+e.slice(1)}function VO(e){try{var t=new Date(e/1e4),n=new Date(3939,0,1),s=t.getTime()-n.getTime(),r=new Date(s);return"".concat(r.toLocaleDateString()," ").concat(r.toLocaleTimeString())}catch(a){console.warn("Cannot convert timestamp",e)}}function UO(e){return!e||e.length>200||/[<>]/.test(e)?"":e.constructor===Array?e.length?e[0].description:"":e.trim()||""}function zO(e){return!e||"web"!==e}function FO(){var e=document.getElementsByTagName("p"),t=Array.from(e),n=t.filter((function(e){return 0===e.textContent.trim().length}));n.map((function(e){return e.remove()})),console.debug("Empty paragraphs have been cleaned. See you next Wednesday!")}function GO(e){if(e&&e.length){var t=e.replace(/(<br><\/p>|<\/br><\/p>|<br\/><\/p>)/gm,"</p>");return t=t.replace(/(<br>|<\/br>|<br\/>)/gm,"\n"),t=t.replace(/^\s/gm,""),t=t.replace(/\n/gm,"<br>"),t}return""}function HO(e){var t=["open","rename","download","internal_share","external_share","save_to_mydocs","move_to_mydocs","move","delete"];return e&&e.length?e.sort((function(e,n){return t.indexOf(e)-t.indexOf(n)})):[]}var WO={install:function(e){e.mixin({methods:{capitalizeFirstLetter:EO,ticksToString:VO,checkIsApp:zO,cleanParagraphs:FO,sanitizeManageText:GO,sortActions:HO,validateErrorResponse:UO,valIsArray:function(e){return e instanceof Array}}})}},YO=n("bc3a"),JO=n.n(YO),KO=["mode"],XO=["auth","loader","notifyErrors","baseUrl","url","headers"],QO=function(){return window.localStorage.getItem("JWT")||!1},ZO=function(e){return window.localStorage.setItem("JWT",e)},ej={install:function(e,t){var n=t.mode,s=void 0===n?"dev":n,c=Object(zn["a"])(t,KO),o=function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){var t,n,a,o,i,l,u,d,b,p,h,f,m,g,O,j,v,y=arguments;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(t=y.length>0&&void 0!==y[0]?y[0]:{},n=t.auth,a=void 0===n||n,o=t.loader,i=void 0===o||o,l=t.notifyErrors,u=void 0!==l&&l,d=t.baseUrl,b=void 0===d?ct.baseUrl[s]:d,p=t.url,h=void 0===p?"":p,f=t.headers,m=void 0===f?{}:f,g=Object(zn["a"])(t,XO),O={},a&&(j=QO(),j&&(O.headers=Object(r["a"])({Authorization:"Bearer ".concat(j)},m))),O.headers||(O.headers=m),!i){e.next=7;break}return e.next=7,this.$loading.show();case 7:return e.prev=7,e.next=10,JO()(Object(r["a"])(Object(r["a"])(Object(r["a"])(Object(r["a"])({},c),O),g),{},{url:"".concat(b).concat(h)}));case 10:v=e.sent,v.data&&v.data.jwt&&ZO(v.data.jwt),e.next=30;break;case 14:if(e.prev=14,e.t0=e["catch"](7),!e.t0.request||401!==e.t0.request.status){e.next=23;break}if(this.$store.dispatch("logout"),this.$toast({message:at.errors.loginNecessary,color:"danger"}),!i){e.next=22;break}return e.next=22,this.$loading.hide();case 22:return e.abrupt("return",{});case 23:if(!i){e.next=26;break}return e.next=26,this.$loading.hide();case 26:if(!u){e.next=29;break}return this.$toast({message:at.errors.cannotPerform,color:"error"}),e.abrupt("return",console.error(e.t0));case 29:throw e.t0;case 30:return e.next=32,this.$loading.hide();case 32:return e.abrupt("return",v.data);case 33:case"end":return e.stop()}}),e,this,[[7,14]])})));return function(){return e.apply(this,arguments)}}();e.config.globalProperties.$http=o}},tj={install:function(e,t){var n=!1,s=0;e.config.globalProperties.$loading={show:function(){return Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(s++,1===s){e.next=3;break}return e.abrupt("return");case 3:return e.next=5,i["u"].create(t);case 5:return n=e.sent,e.abrupt("return",n.present());case 7:case"end":return e.stop()}}),e)})))()},hide:function(){return Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(s--,!1===n&&s>0&&console.warn("Have you awaited the show function?"),0!==s||!n){e.next=6;break}return e.next=5,n.dismiss();case 5:setTimeout(Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,n.dismiss();case 3:e.next=8;break;case 5:e.prev=5,e.t0=e["catch"](0),console.debug("Loader already dismissed",e.t0);case 8:case"end":return e.stop()}}),e,null,[[0,5]])}))),1500);case 6:case"end":return e.stop()}}),e)})))()}}}},nj={install:function(e,t){e.config.globalProperties.$toast=function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(n){var s;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,i["v"].create(Object(r["a"])(Object(r["a"])({},t),n));case 2:return s=e.sent,e.abrupt("return",s.present());case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()}},sj=function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,i["s"].create(Object(r["a"])({cssClass:"alert",header:"Warning",buttons:["Ok"]},t));case 2:return n=e.sent,e.next=5,n.present();case 5:return e.next=7,n.onDidDismiss();case 7:return e.abrupt("return",e.sent);case 8:case"end":return e.stop()}}),e)})));function t(t){return e.apply(this,arguments)}return t}(),rj={install:function(e){return Object(a["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.config.globalProperties.$alert=sj;case 1:case"end":return t.stop()}}),t)})))()}},aj=n("aefb"),cj={install:function(e){var t=arguments;return Object(a["a"])(regeneratorRuntime.mark((function n(){var s,r,c,o,l,u;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:s=t.length>1&&void 0!==t[1]?t[1]:{},c=s.events||{},o=c.onForeground,l=c.onBackButton,o&&h["a"].addListener("appStateChange",(function(t){return o(e.config.globalProperties,t)})),l&&Object(i["w"])(-1,(function(t){return l(e.config.globalProperties,t,h["a"])})),u={getId:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",aj["a"].getId());case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),getAppInfo:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",h["a"].getInfo());case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),getInfo:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(r){e.next=4;break}return e.next=3,aj["a"].getInfo();case 3:r=e.sent;case 4:return e.abrupt("return",r);case 5:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),getBattery:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",aj["a"].getBatteryInfo());case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),getPlatform:function(){return i["t"].apply(void 0,arguments)}},e.config.globalProperties.$device=u;case 6:case"end":return n.stop()}}),n)})))()}},oj=(n("d3b7"),n("5cc6"),n("9a8c"),n("a975"),n("735e"),n("c1ac"),n("d139"),n("3a7b"),n("d5d6"),n("82f8"),n("e91f"),n("60bd"),n("5f96"),n("3280"),n("3fcc"),n("ca91"),n("25a1"),n("cd26"),n("3c5d"),n("2954"),n("649e"),n("219c"),n("170b"),n("b39a"),n("72f7"),n("84c6")),ij=n("17b6"),lj=n("de86"),uj=function(e){return function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(n){var s,r,c,o,i,l,u,d=arguments;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return o=function(e){for(var t="",n=new Uint8Array(e),s=n.byteLength,r=0;r<s;r++)t+=String.fromCharCode(n[r]);return window.btoa(t)},s=d.length>1&&void 0!==d[1]?d[1]:"Document",t.next=4,e.$loading.show();case 4:return t.next=6,e.$http({method:"GET",baseUrl:n,auth:!1,headers:{Accept:"application/pdf"},responseType:"arraybuffer"});case 6:if(r=t.sent,r){t.next=9;break}throw new Error("Cannot open pdf");case 9:return c=o(r),t.next=12,oj["a"].writeFile(oj["a"].dataDirectory,"".concat(s,".pdf"),c,{replace:!0});case 12:return t.next=14,e.$loading.hide();case 14:return i=function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,ij["b"].writeFile({path:"".concat(s,".pdf"),data:c,directory:ij["a"].Cache});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),t.next=17,i();case 17:return l=t.sent,u=l.uri,t.abrupt("return",new Promise((function(){lj["a"].open({filePath:u,contentType:"application/pdf",openWithDefault:!0})})));case 20:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()},dj={install:function(e){e.config.globalProperties.$docviewer=uj(e.config.globalProperties)}},bj=n("ebd2"),pj=n.n(bj);function hj(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};pj.a.setAppId(t.appId,t.firebaseId);var n=t.events||{},s=n.notifOpened,r=n.notifReceived;return pj.a.setNotificationOpenedHandler((function(t){return s(e,t)})),pj.a.setNotificationWillShowInForegroundHandler((function(t){return r(e,t)})),pj.a}var fj={install:function(e,t){var n=hj(e.config.globalProperties,t);e.config.globalProperties.$onesignal={getUID:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",new Promise((function(e,t){n.getDeviceState((function(n){if(console.log(n),!n.userId)return t(new Error("NO_USERID"));e(n.userId)}))})));case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}()}}},mj=n("3c98"),gj=function(e){return function(){var t=Object(a["a"])(regeneratorRuntime.mark((function t(n){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,e.$loading.show();case 2:return mj["a"].write({string:n}),t.next=5,e.$loading.hide();case 5:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()},Oj={install:function(e){e.config.globalProperties.$clipboard=gj(e.config.globalProperties)}},jj={install:function(e){return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:n={canShare:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",Ke["a"].canShare());case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),share:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,this.canShare();case 2:if(n=e.sent,!n){e.next=5;break}return e.abrupt("return",Ke["a"].share(t));case 5:return e.abrupt("return",!1);case 6:case"end":return e.stop()}}),e,this)})));function t(t){return e.apply(this,arguments)}return t}()},e.config.globalProperties.$share=n;case 2:case"end":return t.stop()}}),t)})))()}},vj={install:function(e){return Object(a["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:n={setUserId:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",window._paq.push(["setUserId",t]));case 1:case"end":return e.stop()}}),e)})));function t(t){return e.apply(this,arguments)}return t}(),reset:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.abrupt("return",window._paq.push(["resetUserId"]));case 1:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),setScreen:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:console.log("[matomo] overriding :",t),window._paq.push(["setCustomUrl",t.path]),window._paq.push(["setDocumentTitle",t.name]);case 3:case"end":return e.stop()}}),e)})));function t(t){return e.apply(this,arguments)}return t}(),logEvent:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){var s,r=arguments;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return s=r.length>2&&void 0!==r[2]?r[2]:{},console.log("[matomo] triggering event",t,n,s),e.abrupt("return",window._paq.push(["trackEvent",t,n,JSON.stringify(s)]));case 3:case"end":return e.stop()}}),e)})));function t(t,n){return e.apply(this,arguments)}return t}(),logPage:function(){var e=Object(a["a"])(regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return console.log("[matomo] triggering pageView",t,n),e.abrupt("return",window._paq.push(["trackEvent","page","view",t,n]));case 2:case"end":return e.stop()}}),e)})));function t(t,n){return e.apply(this,arguments)}return t}(),trackView:function(){return console.log("[matomo] triggering page view"),window._paq.push(["trackPageView"])},trackSearch:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return window._paq.push(["trackSiteSearch",e,n,t])}},e.config.globalProperties.$matomo=n;case 2:case"end":return t.stop()}}),t)})))()}};function yj(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if(e&&e.includes("token")){var t=e.split("token=")[1].split("#")[0];window.azureToken=t,console.log("received url: "+e,t),window.localStorage.setItem("JWT",t)}}function xj(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if(e&&e.includes("path")){var t=e.split("path=")[1];window.pathToReach=t,console.log("received url: "+e,t),window.localStorage.setItem("PATH",t)}}function wj(){return kj.apply(this,arguments)}function kj(){return kj=Object(a["a"])(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,$O["a"].show();case 2:return window.handleOpenURL=function(e){yj(e),xj(e)},t=Object(c["d"])(p).use(i["q"]).use(DO).use(SO).use(WO).use(ej,{mode:Pr.mode}).use(rj).use(tj).use(dj).use(Oj).use(jj).use(vj).use(nj,{duration:3e3,color:"primary"}),S["a"].getPlatform()&&"web"===S["a"].getPlatform()||t.use(fj,Object(r["a"])({events:{permissionChange:TO,notifOpened:PO,notifReceived:IO}},Pr.oneSignal)),t.use(cj,{events:{onForeground:LO,onBackButton:BO}}),SO.$app=t.config.globalProperties,e.next=9,DO.isReady();case 9:t.mount("#app"),setTimeout((function(){$O["a"].hide()}),500);case 11:case"end":return e.stop()}}),e)}))),kj.apply(this,arguments)}wj(),h["a"].addListener("appUrlOpen",(function(e){var t=e.url;t&&(yj(t),xj(t))}))},"57e4":function(e,t,n){"use strict";n("e7a0")},"5dd6":function(e,t,n){},"60e9":function(e,t,n){"use strict";n("c6b7")},"670a":function(e,t,n){"use strict";n("38b3")},"6a05":function(e,t,n){},"6aa2":function(e,t,n){},"6da2":function(e,t,n){"use strict";n("a189")},"77c0":function(e,t,n){"use strict";n("6a05")},"7b84":function(e,t,n){},"7b8e":function(e,t,n){"use strict";n("2d67")},"7dc5":function(e){e.exports=JSON.parse('{"mode":"prod","oneSignal":{"appId":"3bc8b116-7b53-4e1d-8e5b-fa2a785113e0","firebaseId":"517810307555"},"userDataBlacklist":[]}')},8120:function(e,t,n){},8661:function(e,t,n){},"8c28":function(e,t,n){},"8c95":function(e,t,n){"use strict";n("7b84")},"8c97":function(e,t,n){},"8fe0":function(e,t,n){"use strict";n("1e56")},9259:function(e,t,n){},9344:function(e,t,n){},9923:function(e,t,n){"use strict";n("4c8d")},"9d00":function(e,t,n){},"9e7e":function(e,t,n){},a189:function(e,t,n){},a43b:function(e){e.exports=JSON.parse('{"baseUrl":{"dev":"https://app-api-staging.limacorporate.com/api","prod":"https://app-api.limacorporate.com/api"},"contacts":"/contacts","auth":{"loginCheck":"/users/check-domain","login":"/users/login","azureLogin":"/users/login-azure","loginWithToken":"/users/get-data"},"search":"/search","products":{"segments":"/products/categories","products":"/products","product":"/product","component":"/product/component"},"congresses":{"home":"/congresses/home","list":"/congresses","activity":"/congresses/activity"},"training":{"home":"/training/home","list":"/training","activity":"/training/activity"},"learn":{"list":"/learn","register":"/learn/register"},"documents":{"list":"/documents","list_my":"/documents/my","list_shared":"/documents/shared","list_us":"/usadocs","save_in_mydocs":"/documents/favorite","remove_from_my":"/documents/remove","move":"/documents/move","share":"/documents/share","storage_share":"/documents/storage-share","upload":"/documents/upload"},"folders":{"create":"/folders","list":"/folders/list","move":"/folders/move","share":"/folders/share","move_to_mydocs":"/folders/mydocs"},"news":{"home":"/news/home","list":"/news"},"notifications":{"list":"/push","updates":"/updates"},"multimedia":{"videos":"/multimedia/video","images":"/multimedia/images"},"users":{"shareList":"/users/share-list","acceptTerms":"/users/accept-terms","onBoarding":"/users/onboarding","deviceInfo":"/users/register-device"},"usefulLinks":"/useful-links"}')},a4c4:function(e,t,n){},a9b5:function(e,t,n){},aa55:function(e,t,n){var s={"./ion-action-sheet.entry.js":["6618","chunk-504c4825"],"./ion-alert.entry.js":["f06c","chunk-008cd3d6"],"./ion-app_8.entry.js":["c215","chunk-34f7327c"],"./ion-avatar_3.entry.js":["cf12","chunk-59d4c87c"],"./ion-back-button.entry.js":["4b35","chunk-69eb8776"],"./ion-backdrop.entry.js":["429d","chunk-2d0c073f"],"./ion-button_2.entry.js":["4453","chunk-25d83ca8"],"./ion-card_5.entry.js":["070b","chunk-541ea42d"],"./ion-checkbox.entry.js":["dfd8","chunk-09162720"],"./ion-chip.entry.js":["430d","chunk-09155df3"],"./ion-col_3.entry.js":["6a8a","chunk-2d0da04a"],"./ion-datetime_3.entry.js":["c15b","chunk-21a76241"],"./ion-fab_3.entry.js":["dd47","chunk-3ed29de3"],"./ion-img.entry.js":["9588","chunk-2d0e5812"],"./ion-infinite-scroll_2.entry.js":["d1e5","chunk-2d21da73"],"./ion-input.entry.js":["d111","chunk-37f2300e"],"./ion-item-option_3.entry.js":["1bb3","chunk-5ff96a24"],"./ion-item_8.entry.js":["69da","chunk-5a8ac886"],"./ion-loading.entry.js":["53a5","chunk-6d375f34"],"./ion-menu_3.entry.js":["cb00","chunk-097e0872"],"./ion-modal.entry.js":["1ad0","chunk-f858ef4e"],"./ion-nav_2.entry.js":["e44f","chunk-c53d26f0"],"./ion-popover.entry.js":["4285","chunk-1f3fa45a"],"./ion-progress-bar.entry.js":["9b72","chunk-1dbc15a2"],"./ion-radio_2.entry.js":["beb3","chunk-0e93a01c"],"./ion-range.entry.js":["719f","chunk-54bbd082"],"./ion-refresher_2.entry.js":["0a47","chunk-d8413eac"],"./ion-reorder_2.entry.js":["6672","chunk-d0e8aa0a"],"./ion-ripple-effect.entry.js":["c8da","chunk-2d218068"],"./ion-route_4.entry.js":["10e8","chunk-858cd918"],"./ion-searchbar.entry.js":["8625","chunk-a9395c36"],"./ion-segment_2.entry.js":["0c02","chunk-462c869e"],"./ion-select_3.entry.js":["d25f","chunk-79f1dac7"],"./ion-slide_2.entry.js":["05dd","chunk-2d0a463b"],"./ion-spinner.entry.js":["e11b","chunk-8bb7f81e"],"./ion-split-pane.entry.js":["aae8","chunk-2d213189"],"./ion-tab-bar_2.entry.js":["a2bb","chunk-02c995b5"],"./ion-tab_2.entry.js":["6725","chunk-c567cc2a"],"./ion-text.entry.js":["ed3b","chunk-30dd9750"],"./ion-textarea.entry.js":["8798","chunk-eaa2b130"],"./ion-toast.entry.js":["c1a5","chunk-41c0f7a4"],"./ion-toggle.entry.js":["bef2","chunk-7548ca2d"],"./ion-virtual-scroll.entry.js":["5fd7","chunk-2d0d43da"]};function r(e){if(!n.o(s,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=s[e],r=t[0];return n.e(t[1]).then((function(){return n(r)}))}r.keys=function(){return Object.keys(s)},r.id="aa55",e.exports=r},ab00:function(e,t,n){var s={"./ion-icon.entry.js":["7059","chunk-2d0d5c33"]};function r(e){if(!n.o(s,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=s[e],r=t[0];return n.e(t[1]).then((function(){return n(r)}))}r.keys=function(){return Object.keys(s)},r.id="ab00",e.exports=r},ab74:function(e,t,n){},b112:function(e,t,n){"use strict";n("535e")},b6b6:function(e,t,n){"use strict";n("9d00")},b7fd:function(e,t,n){"use strict";n("eb6d")},b8c9:function(e,t,n){},c5a9:function(e,t,n){"use strict";n("f64b")},c64f:function(e,t,n){},c6b7:function(e,t,n){},c791:function(e,t,n){},c8a5:function(e,t,n){"use strict";n("47c5")},cffe:function(e,t,n){"use strict";n("c791")},d136:function(e,t,n){},d498:function(e,t,n){"use strict";n("8661")},e27d:function(e,t,n){"use strict";n("a4c4")},e644:function(e,t,n){"use strict";n("9344")},e7a0:function(e,t,n){},ea7e:function(e,t,n){"use strict";n("5dd6")},eaa6:function(e,t,n){},eb6d:function(e,t,n){},eba1:function(e){e.exports=JSON.parse('{"loginSuccessful":"Ruccessful login!","messageSent":"Reply sent","recoverMailSent":"Recover mail sent successfully","learnRegisterSuccessful":"You have been registered to the course","errors":{"checkEmail":"An error occurred while checking the email domain. Retry later","cannotLogin":"Login failed","loginNecessary":"Please sign in","home":"An error occurred while getting all the informations","onboarding":"An error occurred while getting you on board. Try again later","acceptTerms":"An error occurred while saving your consent. Try again later","updates":"An error occurred while showing you the last addition to the app. Check in \\"What\'s new\\"","shareList":"An error occurred while retrieving the recipients. Write the email or try again later","news":"An error occurred while retrieving the news","newsDetail":"An error occurred while retrieving this news","contacts":"An error occurred while retrieving the contacts","notifications":"An error occurred while retrieving the notifications","notificationDetail":"An error occurred while retrieving this notification","deviceInfo":"An error occurred while checking the user device","appUpdates":"An error occurred while checking the latest app updates","segments":"An error occurred while retrieving the segments","segmentProducts":"An error occurred while retrieving the products of this segment","productDetail":"An error occurred while getting the product","categoryProducts":"An error occurred while retrieving the products of this category","congresses":"An error occurred while retrieving the congresses","congressDetail":"An error occurred while retrieving the congress information","activityDetail":"An error occurred while retrieving the activity information","training":"An error occurred while retrieving the training","trainingDetail":"An error occurred while retrieving the training information","learn":"An error occurred while retrieving the courses","learnDetail":"An error occurred while retrieving the course information","learnRegister":"An error occurred while registering","documents":"An error occurred while retrieving the documents. Retry later","folderDetail":"An error occurred while retrieving the folder","file":"An error occurred while obtaining the file","notInternal":"The user associated with that e-mail was not found. Check again the e-mail or try an external share.","furtherFolders":"You cannot create further folders, you have reached max depth level","fileUpload":"An error occurred while uploading the file. Check the name and the file","fileSystem":"An error occurred while obtaining the file. Retry later or check the permissions","search":"An error occurred while searching","usefulLinks":"An error occured while getting the links","missingMailPassword":"Insert email and password","cannotPerform":"Cannot perform operation","cannotGetRounds":"Failed to get rounds","cannotGetMessages":"Failed to get messages","cannotGetUserData":"Failed to get user data","cannotResetPassword":"Failed to reset password","cannotEnableNotifs":"Failed to enable notifications service","cannotChangePassword":"Failed to change password","failedUserRegistration":"Failed to register new user to team","cannotGetUserTypes":"Failed to fetch user types","notifError":{"title":"Missing notification permissions","message":"Please reinstall app or go to settings and accept notification permissions"}},"success":{"shared":"The document has been successfully shared with"}}')},ebb0:function(e,t,n){},f1c0:function(e,t,n){},f3c4:function(e,t,n){"use strict";n("6aa2")},f64b:function(e,t,n){},f93f:function(e,t,n){"use strict";n("003a")},fc65:function(e,t,n){"use strict";n("8c97")}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,